// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: level.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "level.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* BINLevel_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BINLevel_reflection_ = NULL;
const ::google::protobuf::Descriptor* BINMedal_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BINMedal_reflection_ = NULL;
const ::google::protobuf::Descriptor* BINLevelUpResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BINLevelUpResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* BINMedalUpResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BINMedalUpResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_level_2eproto() {
  protobuf_AddDesc_level_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "level.proto");
  GOOGLE_CHECK(file != NULL);
  BINLevel_descriptor_ = file->message_type(0);
  static const int BINLevel_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINLevel, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINLevel, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINLevel, cashgift_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINLevel, goldgift_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINLevel, maxexp_),
  };
  BINLevel_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BINLevel_descriptor_,
      BINLevel::default_instance_,
      BINLevel_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINLevel, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINLevel, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BINLevel));
  BINMedal_descriptor_ = file->message_type(1);
  static const int BINMedal_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINMedal, medal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINMedal, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINMedal, maxlevel_),
  };
  BINMedal_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BINMedal_descriptor_,
      BINMedal::default_instance_,
      BINMedal_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINMedal, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINMedal, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BINMedal));
  BINLevelUpResponse_descriptor_ = file->message_type(2);
  static const int BINLevelUpResponse_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINLevelUpResponse, responsecode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINLevelUpResponse, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINLevelUpResponse, levelup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINLevelUpResponse, newlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINLevelUpResponse, currentexp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINLevelUpResponse, maxexp_),
  };
  BINLevelUpResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BINLevelUpResponse_descriptor_,
      BINLevelUpResponse::default_instance_,
      BINLevelUpResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINLevelUpResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINLevelUpResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BINLevelUpResponse));
  BINMedalUpResponse_descriptor_ = file->message_type(3);
  static const int BINMedalUpResponse_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINMedalUpResponse, responsecode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINMedalUpResponse, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINMedalUpResponse, medalup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINMedalUpResponse, newmedal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINMedalUpResponse, currentlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINMedalUpResponse, maxlevel_),
  };
  BINMedalUpResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BINMedalUpResponse_descriptor_,
      BINMedalUpResponse::default_instance_,
      BINMedalUpResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINMedalUpResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINMedalUpResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BINMedalUpResponse));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_level_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BINLevel_descriptor_, &BINLevel::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BINMedal_descriptor_, &BINMedal::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BINLevelUpResponse_descriptor_, &BINLevelUpResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BINMedalUpResponse_descriptor_, &BINMedalUpResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_level_2eproto() {
  delete BINLevel::default_instance_;
  delete BINLevel_reflection_;
  delete BINMedal::default_instance_;
  delete BINMedal_reflection_;
  delete BINLevelUpResponse::default_instance_;
  delete BINLevelUpResponse_reflection_;
  delete BINMedalUpResponse::default_instance_;
  delete BINMedalUpResponse_reflection_;
}

void protobuf_AddDesc_level_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013level.proto\"[\n\010BINLevel\022\r\n\005level\030\001 \002(\005"
    "\022\014\n\004name\030\002 \002(\t\022\020\n\010cashGift\030\003 \001(\003\022\020\n\010gold"
    "Gift\030\004 \001(\003\022\016\n\006maxExp\030\005 \002(\003\"9\n\010BINMedal\022\r"
    "\n\005medal\030\001 \002(\005\022\014\n\004name\030\002 \002(\t\022\020\n\010maxLevel\030"
    "\003 \002(\005\"\202\001\n\022BINLevelUpResponse\022\024\n\014response"
    "Code\030\001 \002(\010\022\017\n\007message\030\002 \001(\t\022\017\n\007levelUp\030\003"
    " \001(\010\022\020\n\010newLevel\030\004 \001(\005\022\022\n\ncurrentExp\030\005 \001"
    "(\003\022\016\n\006maxExp\030\006 \001(\003\"\206\001\n\022BINMedalUpRespons"
    "e\022\024\n\014responseCode\030\001 \002(\010\022\017\n\007message\030\002 \001(\t"
    "\022\017\n\007medalUp\030\003 \001(\010\022\020\n\010newMedal\030\004 \001(\010\022\024\n\014c"
    "urrentLevel\030\005 \001(\003\022\020\n\010maxLevel\030\006 \001(\003B\036\n\034c"
    "om.mi.game.network.data.bin", 467);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "level.proto", &protobuf_RegisterTypes);
  BINLevel::default_instance_ = new BINLevel();
  BINMedal::default_instance_ = new BINMedal();
  BINLevelUpResponse::default_instance_ = new BINLevelUpResponse();
  BINMedalUpResponse::default_instance_ = new BINMedalUpResponse();
  BINLevel::default_instance_->InitAsDefaultInstance();
  BINMedal::default_instance_->InitAsDefaultInstance();
  BINLevelUpResponse::default_instance_->InitAsDefaultInstance();
  BINMedalUpResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_level_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_level_2eproto {
  StaticDescriptorInitializer_level_2eproto() {
    protobuf_AddDesc_level_2eproto();
  }
} static_descriptor_initializer_level_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int BINLevel::kLevelFieldNumber;
const int BINLevel::kNameFieldNumber;
const int BINLevel::kCashGiftFieldNumber;
const int BINLevel::kGoldGiftFieldNumber;
const int BINLevel::kMaxExpFieldNumber;
#endif  // !_MSC_VER

BINLevel::BINLevel()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BINLevel::InitAsDefaultInstance() {
}

BINLevel::BINLevel(const BINLevel& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BINLevel::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cashgift_ = GOOGLE_LONGLONG(0);
  goldgift_ = GOOGLE_LONGLONG(0);
  maxexp_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BINLevel::~BINLevel() {
  SharedDtor();
}

void BINLevel::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void BINLevel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BINLevel::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BINLevel_descriptor_;
}

const BINLevel& BINLevel::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_level_2eproto();
  return *default_instance_;
}

BINLevel* BINLevel::default_instance_ = NULL;

BINLevel* BINLevel::New() const {
  return new BINLevel;
}

void BINLevel::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    level_ = 0;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    cashgift_ = GOOGLE_LONGLONG(0);
    goldgift_ = GOOGLE_LONGLONG(0);
    maxexp_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BINLevel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_cashGift;
        break;
      }

      // optional int64 cashGift = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cashGift:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &cashgift_)));
          set_has_cashgift();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_goldGift;
        break;
      }

      // optional int64 goldGift = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_goldGift:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &goldgift_)));
          set_has_goldgift();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_maxExp;
        break;
      }

      // required int64 maxExp = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_maxExp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &maxexp_)));
          set_has_maxexp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BINLevel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }

  // optional int64 cashGift = 3;
  if (has_cashgift()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->cashgift(), output);
  }

  // optional int64 goldGift = 4;
  if (has_goldgift()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->goldgift(), output);
  }

  // required int64 maxExp = 5;
  if (has_maxexp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->maxexp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BINLevel::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional int64 cashGift = 3;
  if (has_cashgift()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->cashgift(), target);
  }

  // optional int64 goldGift = 4;
  if (has_goldgift()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->goldgift(), target);
  }

  // required int64 maxExp = 5;
  if (has_maxexp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->maxexp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BINLevel::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // required string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int64 cashGift = 3;
    if (has_cashgift()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->cashgift());
    }

    // optional int64 goldGift = 4;
    if (has_goldgift()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->goldgift());
    }

    // required int64 maxExp = 5;
    if (has_maxexp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->maxexp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BINLevel::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BINLevel* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BINLevel*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BINLevel::MergeFrom(const BINLevel& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_cashgift()) {
      set_cashgift(from.cashgift());
    }
    if (from.has_goldgift()) {
      set_goldgift(from.goldgift());
    }
    if (from.has_maxexp()) {
      set_maxexp(from.maxexp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BINLevel::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BINLevel::CopyFrom(const BINLevel& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BINLevel::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000013) != 0x00000013) return false;

  return true;
}

void BINLevel::Swap(BINLevel* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(name_, other->name_);
    std::swap(cashgift_, other->cashgift_);
    std::swap(goldgift_, other->goldgift_);
    std::swap(maxexp_, other->maxexp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BINLevel::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BINLevel_descriptor_;
  metadata.reflection = BINLevel_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BINMedal::kMedalFieldNumber;
const int BINMedal::kNameFieldNumber;
const int BINMedal::kMaxLevelFieldNumber;
#endif  // !_MSC_VER

BINMedal::BINMedal()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BINMedal::InitAsDefaultInstance() {
}

BINMedal::BINMedal(const BINMedal& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BINMedal::SharedCtor() {
  _cached_size_ = 0;
  medal_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  maxlevel_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BINMedal::~BINMedal() {
  SharedDtor();
}

void BINMedal::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void BINMedal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BINMedal::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BINMedal_descriptor_;
}

const BINMedal& BINMedal::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_level_2eproto();
  return *default_instance_;
}

BINMedal* BINMedal::default_instance_ = NULL;

BINMedal* BINMedal::New() const {
  return new BINMedal;
}

void BINMedal::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    medal_ = 0;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    maxlevel_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BINMedal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 medal = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &medal_)));
          set_has_medal();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_maxLevel;
        break;
      }

      // required int32 maxLevel = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_maxLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxlevel_)));
          set_has_maxlevel();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BINMedal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 medal = 1;
  if (has_medal()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->medal(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }

  // required int32 maxLevel = 3;
  if (has_maxlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->maxlevel(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BINMedal::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 medal = 1;
  if (has_medal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->medal(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // required int32 maxLevel = 3;
  if (has_maxlevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->maxlevel(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BINMedal::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 medal = 1;
    if (has_medal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->medal());
    }

    // required string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required int32 maxLevel = 3;
    if (has_maxlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maxlevel());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BINMedal::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BINMedal* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BINMedal*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BINMedal::MergeFrom(const BINMedal& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_medal()) {
      set_medal(from.medal());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_maxlevel()) {
      set_maxlevel(from.maxlevel());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BINMedal::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BINMedal::CopyFrom(const BINMedal& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BINMedal::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void BINMedal::Swap(BINMedal* other) {
  if (other != this) {
    std::swap(medal_, other->medal_);
    std::swap(name_, other->name_);
    std::swap(maxlevel_, other->maxlevel_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BINMedal::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BINMedal_descriptor_;
  metadata.reflection = BINMedal_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BINLevelUpResponse::kResponseCodeFieldNumber;
const int BINLevelUpResponse::kMessageFieldNumber;
const int BINLevelUpResponse::kLevelUpFieldNumber;
const int BINLevelUpResponse::kNewLevelFieldNumber;
const int BINLevelUpResponse::kCurrentExpFieldNumber;
const int BINLevelUpResponse::kMaxExpFieldNumber;
#endif  // !_MSC_VER

BINLevelUpResponse::BINLevelUpResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BINLevelUpResponse::InitAsDefaultInstance() {
}

BINLevelUpResponse::BINLevelUpResponse(const BINLevelUpResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BINLevelUpResponse::SharedCtor() {
  _cached_size_ = 0;
  responsecode_ = false;
  message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  levelup_ = false;
  newlevel_ = 0;
  currentexp_ = GOOGLE_LONGLONG(0);
  maxexp_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BINLevelUpResponse::~BINLevelUpResponse() {
  SharedDtor();
}

void BINLevelUpResponse::SharedDtor() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (this != default_instance_) {
  }
}

void BINLevelUpResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BINLevelUpResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BINLevelUpResponse_descriptor_;
}

const BINLevelUpResponse& BINLevelUpResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_level_2eproto();
  return *default_instance_;
}

BINLevelUpResponse* BINLevelUpResponse::default_instance_ = NULL;

BINLevelUpResponse* BINLevelUpResponse::New() const {
  return new BINLevelUpResponse;
}

void BINLevelUpResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    responsecode_ = false;
    if (has_message()) {
      if (message_ != &::google::protobuf::internal::kEmptyString) {
        message_->clear();
      }
    }
    levelup_ = false;
    newlevel_ = 0;
    currentexp_ = GOOGLE_LONGLONG(0);
    maxexp_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BINLevelUpResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool responseCode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &responsecode_)));
          set_has_responsecode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_message;
        break;
      }

      // optional string message = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_levelUp;
        break;
      }

      // optional bool levelUp = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_levelUp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &levelup_)));
          set_has_levelup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_newLevel;
        break;
      }

      // optional int32 newLevel = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_newLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &newlevel_)));
          set_has_newlevel();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_currentExp;
        break;
      }

      // optional int64 currentExp = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_currentExp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &currentexp_)));
          set_has_currentexp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_maxExp;
        break;
      }

      // optional int64 maxExp = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_maxExp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &maxexp_)));
          set_has_maxexp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BINLevelUpResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bool responseCode = 1;
  if (has_responsecode()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->responsecode(), output);
  }

  // optional string message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->message(), output);
  }

  // optional bool levelUp = 3;
  if (has_levelup()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->levelup(), output);
  }

  // optional int32 newLevel = 4;
  if (has_newlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->newlevel(), output);
  }

  // optional int64 currentExp = 5;
  if (has_currentexp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->currentexp(), output);
  }

  // optional int64 maxExp = 6;
  if (has_maxexp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->maxexp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BINLevelUpResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool responseCode = 1;
  if (has_responsecode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->responsecode(), target);
  }

  // optional string message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // optional bool levelUp = 3;
  if (has_levelup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->levelup(), target);
  }

  // optional int32 newLevel = 4;
  if (has_newlevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->newlevel(), target);
  }

  // optional int64 currentExp = 5;
  if (has_currentexp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->currentexp(), target);
  }

  // optional int64 maxExp = 6;
  if (has_maxexp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->maxexp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BINLevelUpResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool responseCode = 1;
    if (has_responsecode()) {
      total_size += 1 + 1;
    }

    // optional string message = 2;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional bool levelUp = 3;
    if (has_levelup()) {
      total_size += 1 + 1;
    }

    // optional int32 newLevel = 4;
    if (has_newlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->newlevel());
    }

    // optional int64 currentExp = 5;
    if (has_currentexp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->currentexp());
    }

    // optional int64 maxExp = 6;
    if (has_maxexp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->maxexp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BINLevelUpResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BINLevelUpResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BINLevelUpResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BINLevelUpResponse::MergeFrom(const BINLevelUpResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_responsecode()) {
      set_responsecode(from.responsecode());
    }
    if (from.has_message()) {
      set_message(from.message());
    }
    if (from.has_levelup()) {
      set_levelup(from.levelup());
    }
    if (from.has_newlevel()) {
      set_newlevel(from.newlevel());
    }
    if (from.has_currentexp()) {
      set_currentexp(from.currentexp());
    }
    if (from.has_maxexp()) {
      set_maxexp(from.maxexp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BINLevelUpResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BINLevelUpResponse::CopyFrom(const BINLevelUpResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BINLevelUpResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void BINLevelUpResponse::Swap(BINLevelUpResponse* other) {
  if (other != this) {
    std::swap(responsecode_, other->responsecode_);
    std::swap(message_, other->message_);
    std::swap(levelup_, other->levelup_);
    std::swap(newlevel_, other->newlevel_);
    std::swap(currentexp_, other->currentexp_);
    std::swap(maxexp_, other->maxexp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BINLevelUpResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BINLevelUpResponse_descriptor_;
  metadata.reflection = BINLevelUpResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BINMedalUpResponse::kResponseCodeFieldNumber;
const int BINMedalUpResponse::kMessageFieldNumber;
const int BINMedalUpResponse::kMedalUpFieldNumber;
const int BINMedalUpResponse::kNewMedalFieldNumber;
const int BINMedalUpResponse::kCurrentLevelFieldNumber;
const int BINMedalUpResponse::kMaxLevelFieldNumber;
#endif  // !_MSC_VER

BINMedalUpResponse::BINMedalUpResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BINMedalUpResponse::InitAsDefaultInstance() {
}

BINMedalUpResponse::BINMedalUpResponse(const BINMedalUpResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BINMedalUpResponse::SharedCtor() {
  _cached_size_ = 0;
  responsecode_ = false;
  message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  medalup_ = false;
  newmedal_ = false;
  currentlevel_ = GOOGLE_LONGLONG(0);
  maxlevel_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BINMedalUpResponse::~BINMedalUpResponse() {
  SharedDtor();
}

void BINMedalUpResponse::SharedDtor() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (this != default_instance_) {
  }
}

void BINMedalUpResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BINMedalUpResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BINMedalUpResponse_descriptor_;
}

const BINMedalUpResponse& BINMedalUpResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_level_2eproto();
  return *default_instance_;
}

BINMedalUpResponse* BINMedalUpResponse::default_instance_ = NULL;

BINMedalUpResponse* BINMedalUpResponse::New() const {
  return new BINMedalUpResponse;
}

void BINMedalUpResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    responsecode_ = false;
    if (has_message()) {
      if (message_ != &::google::protobuf::internal::kEmptyString) {
        message_->clear();
      }
    }
    medalup_ = false;
    newmedal_ = false;
    currentlevel_ = GOOGLE_LONGLONG(0);
    maxlevel_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BINMedalUpResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool responseCode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &responsecode_)));
          set_has_responsecode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_message;
        break;
      }

      // optional string message = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_medalUp;
        break;
      }

      // optional bool medalUp = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_medalUp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &medalup_)));
          set_has_medalup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_newMedal;
        break;
      }

      // optional bool newMedal = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_newMedal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &newmedal_)));
          set_has_newmedal();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_currentLevel;
        break;
      }

      // optional int64 currentLevel = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_currentLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &currentlevel_)));
          set_has_currentlevel();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_maxLevel;
        break;
      }

      // optional int64 maxLevel = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_maxLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &maxlevel_)));
          set_has_maxlevel();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BINMedalUpResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bool responseCode = 1;
  if (has_responsecode()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->responsecode(), output);
  }

  // optional string message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->message(), output);
  }

  // optional bool medalUp = 3;
  if (has_medalup()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->medalup(), output);
  }

  // optional bool newMedal = 4;
  if (has_newmedal()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->newmedal(), output);
  }

  // optional int64 currentLevel = 5;
  if (has_currentlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->currentlevel(), output);
  }

  // optional int64 maxLevel = 6;
  if (has_maxlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->maxlevel(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BINMedalUpResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool responseCode = 1;
  if (has_responsecode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->responsecode(), target);
  }

  // optional string message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // optional bool medalUp = 3;
  if (has_medalup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->medalup(), target);
  }

  // optional bool newMedal = 4;
  if (has_newmedal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->newmedal(), target);
  }

  // optional int64 currentLevel = 5;
  if (has_currentlevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->currentlevel(), target);
  }

  // optional int64 maxLevel = 6;
  if (has_maxlevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->maxlevel(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BINMedalUpResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool responseCode = 1;
    if (has_responsecode()) {
      total_size += 1 + 1;
    }

    // optional string message = 2;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional bool medalUp = 3;
    if (has_medalup()) {
      total_size += 1 + 1;
    }

    // optional bool newMedal = 4;
    if (has_newmedal()) {
      total_size += 1 + 1;
    }

    // optional int64 currentLevel = 5;
    if (has_currentlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->currentlevel());
    }

    // optional int64 maxLevel = 6;
    if (has_maxlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->maxlevel());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BINMedalUpResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BINMedalUpResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BINMedalUpResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BINMedalUpResponse::MergeFrom(const BINMedalUpResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_responsecode()) {
      set_responsecode(from.responsecode());
    }
    if (from.has_message()) {
      set_message(from.message());
    }
    if (from.has_medalup()) {
      set_medalup(from.medalup());
    }
    if (from.has_newmedal()) {
      set_newmedal(from.newmedal());
    }
    if (from.has_currentlevel()) {
      set_currentlevel(from.currentlevel());
    }
    if (from.has_maxlevel()) {
      set_maxlevel(from.maxlevel());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BINMedalUpResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BINMedalUpResponse::CopyFrom(const BINMedalUpResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BINMedalUpResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void BINMedalUpResponse::Swap(BINMedalUpResponse* other) {
  if (other != this) {
    std::swap(responsecode_, other->responsecode_);
    std::swap(message_, other->message_);
    std::swap(medalup_, other->medalup_);
    std::swap(newmedal_, other->newmedal_);
    std::swap(currentlevel_, other->currentlevel_);
    std::swap(maxlevel_, other->maxlevel_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BINMedalUpResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BINMedalUpResponse_descriptor_;
  metadata.reflection = BINMedalUpResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
