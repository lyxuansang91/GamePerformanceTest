// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: change_host.proto

#ifndef PROTOBUF_change_5fhost_2eproto__INCLUDED
#define PROTOBUF_change_5fhost_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_change_5fhost_2eproto();
void protobuf_AssignDesc_change_5fhost_2eproto();
void protobuf_ShutdownFile_change_5fhost_2eproto();

class BINChangeHostRequest;
class BINChangeHostResponse;
class BINHostRegistrationRequest;
class BINHostRegistrationResponse;

// ===================================================================

class BINChangeHostRequest : public ::google::protobuf::Message {
 public:
  BINChangeHostRequest();
  virtual ~BINChangeHostRequest();

  BINChangeHostRequest(const BINChangeHostRequest& from);

  inline BINChangeHostRequest& operator=(const BINChangeHostRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BINChangeHostRequest& default_instance();

  void Swap(BINChangeHostRequest* other);

  // implements Message ----------------------------------------------

  BINChangeHostRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BINChangeHostRequest& from);
  void MergeFrom(const BINChangeHostRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roomIndex = 1;
  inline bool has_roomindex() const;
  inline void clear_roomindex();
  static const int kRoomIndexFieldNumber = 1;
  inline ::google::protobuf::int32 roomindex() const;
  inline void set_roomindex(::google::protobuf::int32 value);

  // required int64 userId = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::int64 userid() const;
  inline void set_userid(::google::protobuf::int64 value);

  // optional bool isAccept = 3;
  inline bool has_isaccept() const;
  inline void clear_isaccept();
  static const int kIsAcceptFieldNumber = 3;
  inline bool isaccept() const;
  inline void set_isaccept(bool value);

  // required int32 requestType = 4;
  inline bool has_requesttype() const;
  inline void clear_requesttype();
  static const int kRequestTypeFieldNumber = 4;
  inline ::google::protobuf::int32 requesttype() const;
  inline void set_requesttype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BINChangeHostRequest)
 private:
  inline void set_has_roomindex();
  inline void clear_has_roomindex();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_isaccept();
  inline void clear_has_isaccept();
  inline void set_has_requesttype();
  inline void clear_has_requesttype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 userid_;
  ::google::protobuf::int32 roomindex_;
  bool isaccept_;
  ::google::protobuf::int32 requesttype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_change_5fhost_2eproto();
  friend void protobuf_AssignDesc_change_5fhost_2eproto();
  friend void protobuf_ShutdownFile_change_5fhost_2eproto();

  void InitAsDefaultInstance();
  static BINChangeHostRequest* default_instance_;
};
// -------------------------------------------------------------------

class BINChangeHostResponse : public ::google::protobuf::Message {
 public:
  BINChangeHostResponse();
  virtual ~BINChangeHostResponse();

  BINChangeHostResponse(const BINChangeHostResponse& from);

  inline BINChangeHostResponse& operator=(const BINChangeHostResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BINChangeHostResponse& default_instance();

  void Swap(BINChangeHostResponse* other);

  // implements Message ----------------------------------------------

  BINChangeHostResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BINChangeHostResponse& from);
  void MergeFrom(const BINChangeHostResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool responseCode = 1;
  inline bool has_responsecode() const;
  inline void clear_responsecode();
  static const int kResponseCodeFieldNumber = 1;
  inline bool responsecode() const;
  inline void set_responsecode(bool value);

  // optional string message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // optional int64 hostId = 3;
  inline bool has_hostid() const;
  inline void clear_hostid();
  static const int kHostIdFieldNumber = 3;
  inline ::google::protobuf::int64 hostid() const;
  inline void set_hostid(::google::protobuf::int64 value);

  // optional int32 responseType = 4;
  inline bool has_responsetype() const;
  inline void clear_responsetype();
  static const int kResponseTypeFieldNumber = 4;
  inline ::google::protobuf::int32 responsetype() const;
  inline void set_responsetype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BINChangeHostResponse)
 private:
  inline void set_has_responsecode();
  inline void clear_has_responsecode();
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_hostid();
  inline void clear_has_hostid();
  inline void set_has_responsetype();
  inline void clear_has_responsetype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* message_;
  bool responsecode_;
  ::google::protobuf::int32 responsetype_;
  ::google::protobuf::int64 hostid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_change_5fhost_2eproto();
  friend void protobuf_AssignDesc_change_5fhost_2eproto();
  friend void protobuf_ShutdownFile_change_5fhost_2eproto();

  void InitAsDefaultInstance();
  static BINChangeHostResponse* default_instance_;
};
// -------------------------------------------------------------------

class BINHostRegistrationRequest : public ::google::protobuf::Message {
 public:
  BINHostRegistrationRequest();
  virtual ~BINHostRegistrationRequest();

  BINHostRegistrationRequest(const BINHostRegistrationRequest& from);

  inline BINHostRegistrationRequest& operator=(const BINHostRegistrationRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BINHostRegistrationRequest& default_instance();

  void Swap(BINHostRegistrationRequest* other);

  // implements Message ----------------------------------------------

  BINHostRegistrationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BINHostRegistrationRequest& from);
  void MergeFrom(const BINHostRegistrationRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roomIndex = 1;
  inline bool has_roomindex() const;
  inline void clear_roomindex();
  static const int kRoomIndexFieldNumber = 1;
  inline ::google::protobuf::int32 roomindex() const;
  inline void set_roomindex(::google::protobuf::int32 value);

  // optional bool cancelRegistration = 2;
  inline bool has_cancelregistration() const;
  inline void clear_cancelregistration();
  static const int kCancelRegistrationFieldNumber = 2;
  inline bool cancelregistration() const;
  inline void set_cancelregistration(bool value);

  // @@protoc_insertion_point(class_scope:BINHostRegistrationRequest)
 private:
  inline void set_has_roomindex();
  inline void clear_has_roomindex();
  inline void set_has_cancelregistration();
  inline void clear_has_cancelregistration();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roomindex_;
  bool cancelregistration_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_change_5fhost_2eproto();
  friend void protobuf_AssignDesc_change_5fhost_2eproto();
  friend void protobuf_ShutdownFile_change_5fhost_2eproto();

  void InitAsDefaultInstance();
  static BINHostRegistrationRequest* default_instance_;
};
// -------------------------------------------------------------------

class BINHostRegistrationResponse : public ::google::protobuf::Message {
 public:
  BINHostRegistrationResponse();
  virtual ~BINHostRegistrationResponse();

  BINHostRegistrationResponse(const BINHostRegistrationResponse& from);

  inline BINHostRegistrationResponse& operator=(const BINHostRegistrationResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BINHostRegistrationResponse& default_instance();

  void Swap(BINHostRegistrationResponse* other);

  // implements Message ----------------------------------------------

  BINHostRegistrationResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BINHostRegistrationResponse& from);
  void MergeFrom(const BINHostRegistrationResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool responseCode = 1;
  inline bool has_responsecode() const;
  inline void clear_responsecode();
  static const int kResponseCodeFieldNumber = 1;
  inline bool responsecode() const;
  inline void set_responsecode(bool value);

  // optional string message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // repeated int64 hostUserIdQueue = 3;
  inline int hostuseridqueue_size() const;
  inline void clear_hostuseridqueue();
  static const int kHostUserIdQueueFieldNumber = 3;
  inline ::google::protobuf::int64 hostuseridqueue(int index) const;
  inline void set_hostuseridqueue(int index, ::google::protobuf::int64 value);
  inline void add_hostuseridqueue(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      hostuseridqueue() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_hostuseridqueue();

  // @@protoc_insertion_point(class_scope:BINHostRegistrationResponse)
 private:
  inline void set_has_responsecode();
  inline void clear_has_responsecode();
  inline void set_has_message();
  inline void clear_has_message();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* message_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > hostuseridqueue_;
  bool responsecode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_change_5fhost_2eproto();
  friend void protobuf_AssignDesc_change_5fhost_2eproto();
  friend void protobuf_ShutdownFile_change_5fhost_2eproto();

  void InitAsDefaultInstance();
  static BINHostRegistrationResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// BINChangeHostRequest

// required int32 roomIndex = 1;
inline bool BINChangeHostRequest::has_roomindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BINChangeHostRequest::set_has_roomindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BINChangeHostRequest::clear_has_roomindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BINChangeHostRequest::clear_roomindex() {
  roomindex_ = 0;
  clear_has_roomindex();
}
inline ::google::protobuf::int32 BINChangeHostRequest::roomindex() const {
  return roomindex_;
}
inline void BINChangeHostRequest::set_roomindex(::google::protobuf::int32 value) {
  set_has_roomindex();
  roomindex_ = value;
}

// required int64 userId = 2;
inline bool BINChangeHostRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BINChangeHostRequest::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BINChangeHostRequest::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BINChangeHostRequest::clear_userid() {
  userid_ = GOOGLE_LONGLONG(0);
  clear_has_userid();
}
inline ::google::protobuf::int64 BINChangeHostRequest::userid() const {
  return userid_;
}
inline void BINChangeHostRequest::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
}

// optional bool isAccept = 3;
inline bool BINChangeHostRequest::has_isaccept() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BINChangeHostRequest::set_has_isaccept() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BINChangeHostRequest::clear_has_isaccept() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BINChangeHostRequest::clear_isaccept() {
  isaccept_ = false;
  clear_has_isaccept();
}
inline bool BINChangeHostRequest::isaccept() const {
  return isaccept_;
}
inline void BINChangeHostRequest::set_isaccept(bool value) {
  set_has_isaccept();
  isaccept_ = value;
}

// required int32 requestType = 4;
inline bool BINChangeHostRequest::has_requesttype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BINChangeHostRequest::set_has_requesttype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BINChangeHostRequest::clear_has_requesttype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BINChangeHostRequest::clear_requesttype() {
  requesttype_ = 0;
  clear_has_requesttype();
}
inline ::google::protobuf::int32 BINChangeHostRequest::requesttype() const {
  return requesttype_;
}
inline void BINChangeHostRequest::set_requesttype(::google::protobuf::int32 value) {
  set_has_requesttype();
  requesttype_ = value;
}

// -------------------------------------------------------------------

// BINChangeHostResponse

// required bool responseCode = 1;
inline bool BINChangeHostResponse::has_responsecode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BINChangeHostResponse::set_has_responsecode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BINChangeHostResponse::clear_has_responsecode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BINChangeHostResponse::clear_responsecode() {
  responsecode_ = false;
  clear_has_responsecode();
}
inline bool BINChangeHostResponse::responsecode() const {
  return responsecode_;
}
inline void BINChangeHostResponse::set_responsecode(bool value) {
  set_has_responsecode();
  responsecode_ = value;
}

// optional string message = 2;
inline bool BINChangeHostResponse::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BINChangeHostResponse::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BINChangeHostResponse::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BINChangeHostResponse::clear_message() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& BINChangeHostResponse::message() const {
  return *message_;
}
inline void BINChangeHostResponse::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void BINChangeHostResponse::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void BINChangeHostResponse::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BINChangeHostResponse::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  return message_;
}
inline ::std::string* BINChangeHostResponse::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BINChangeHostResponse::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 hostId = 3;
inline bool BINChangeHostResponse::has_hostid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BINChangeHostResponse::set_has_hostid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BINChangeHostResponse::clear_has_hostid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BINChangeHostResponse::clear_hostid() {
  hostid_ = GOOGLE_LONGLONG(0);
  clear_has_hostid();
}
inline ::google::protobuf::int64 BINChangeHostResponse::hostid() const {
  return hostid_;
}
inline void BINChangeHostResponse::set_hostid(::google::protobuf::int64 value) {
  set_has_hostid();
  hostid_ = value;
}

// optional int32 responseType = 4;
inline bool BINChangeHostResponse::has_responsetype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BINChangeHostResponse::set_has_responsetype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BINChangeHostResponse::clear_has_responsetype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BINChangeHostResponse::clear_responsetype() {
  responsetype_ = 0;
  clear_has_responsetype();
}
inline ::google::protobuf::int32 BINChangeHostResponse::responsetype() const {
  return responsetype_;
}
inline void BINChangeHostResponse::set_responsetype(::google::protobuf::int32 value) {
  set_has_responsetype();
  responsetype_ = value;
}

// -------------------------------------------------------------------

// BINHostRegistrationRequest

// required int32 roomIndex = 1;
inline bool BINHostRegistrationRequest::has_roomindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BINHostRegistrationRequest::set_has_roomindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BINHostRegistrationRequest::clear_has_roomindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BINHostRegistrationRequest::clear_roomindex() {
  roomindex_ = 0;
  clear_has_roomindex();
}
inline ::google::protobuf::int32 BINHostRegistrationRequest::roomindex() const {
  return roomindex_;
}
inline void BINHostRegistrationRequest::set_roomindex(::google::protobuf::int32 value) {
  set_has_roomindex();
  roomindex_ = value;
}

// optional bool cancelRegistration = 2;
inline bool BINHostRegistrationRequest::has_cancelregistration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BINHostRegistrationRequest::set_has_cancelregistration() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BINHostRegistrationRequest::clear_has_cancelregistration() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BINHostRegistrationRequest::clear_cancelregistration() {
  cancelregistration_ = false;
  clear_has_cancelregistration();
}
inline bool BINHostRegistrationRequest::cancelregistration() const {
  return cancelregistration_;
}
inline void BINHostRegistrationRequest::set_cancelregistration(bool value) {
  set_has_cancelregistration();
  cancelregistration_ = value;
}

// -------------------------------------------------------------------

// BINHostRegistrationResponse

// required bool responseCode = 1;
inline bool BINHostRegistrationResponse::has_responsecode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BINHostRegistrationResponse::set_has_responsecode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BINHostRegistrationResponse::clear_has_responsecode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BINHostRegistrationResponse::clear_responsecode() {
  responsecode_ = false;
  clear_has_responsecode();
}
inline bool BINHostRegistrationResponse::responsecode() const {
  return responsecode_;
}
inline void BINHostRegistrationResponse::set_responsecode(bool value) {
  set_has_responsecode();
  responsecode_ = value;
}

// optional string message = 2;
inline bool BINHostRegistrationResponse::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BINHostRegistrationResponse::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BINHostRegistrationResponse::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BINHostRegistrationResponse::clear_message() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& BINHostRegistrationResponse::message() const {
  return *message_;
}
inline void BINHostRegistrationResponse::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void BINHostRegistrationResponse::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void BINHostRegistrationResponse::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BINHostRegistrationResponse::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  return message_;
}
inline ::std::string* BINHostRegistrationResponse::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BINHostRegistrationResponse::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated int64 hostUserIdQueue = 3;
inline int BINHostRegistrationResponse::hostuseridqueue_size() const {
  return hostuseridqueue_.size();
}
inline void BINHostRegistrationResponse::clear_hostuseridqueue() {
  hostuseridqueue_.Clear();
}
inline ::google::protobuf::int64 BINHostRegistrationResponse::hostuseridqueue(int index) const {
  return hostuseridqueue_.Get(index);
}
inline void BINHostRegistrationResponse::set_hostuseridqueue(int index, ::google::protobuf::int64 value) {
  hostuseridqueue_.Set(index, value);
}
inline void BINHostRegistrationResponse::add_hostuseridqueue(::google::protobuf::int64 value) {
  hostuseridqueue_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
BINHostRegistrationResponse::hostuseridqueue() const {
  return hostuseridqueue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
BINHostRegistrationResponse::mutable_hostuseridqueue() {
  return &hostuseridqueue_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_change_5fhost_2eproto__INCLUDED
