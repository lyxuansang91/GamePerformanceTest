// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: exit_room.proto

#ifndef PROTOBUF_exit_5froom_2eproto__INCLUDED
#define PROTOBUF_exit_5froom_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_exit_5froom_2eproto();
void protobuf_AssignDesc_exit_5froom_2eproto();
void protobuf_ShutdownFile_exit_5froom_2eproto();

class BINExitRoomRequest;
class BINExitRoomResponse;
class BINPlayerExitAfterMatchEndResponse;
class BINPlayerExitRoomResponse;
class BINCancelExitAfterMatchEndRequest;
class BINCancelExitAfterMatchEndResponse;

// ===================================================================

class BINExitRoomRequest : public ::google::protobuf::Message {
 public:
  BINExitRoomRequest();
  virtual ~BINExitRoomRequest();

  BINExitRoomRequest(const BINExitRoomRequest& from);

  inline BINExitRoomRequest& operator=(const BINExitRoomRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BINExitRoomRequest& default_instance();

  void Swap(BINExitRoomRequest* other);

  // implements Message ----------------------------------------------

  BINExitRoomRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BINExitRoomRequest& from);
  void MergeFrom(const BINExitRoomRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roomIndex = 1;
  inline bool has_roomindex() const;
  inline void clear_roomindex();
  static const int kRoomIndexFieldNumber = 1;
  inline ::google::protobuf::int32 roomindex() const;
  inline void set_roomindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BINExitRoomRequest)
 private:
  inline void set_has_roomindex();
  inline void clear_has_roomindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roomindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_exit_5froom_2eproto();
  friend void protobuf_AssignDesc_exit_5froom_2eproto();
  friend void protobuf_ShutdownFile_exit_5froom_2eproto();

  void InitAsDefaultInstance();
  static BINExitRoomRequest* default_instance_;
};
// -------------------------------------------------------------------

class BINExitRoomResponse : public ::google::protobuf::Message {
 public:
  BINExitRoomResponse();
  virtual ~BINExitRoomResponse();

  BINExitRoomResponse(const BINExitRoomResponse& from);

  inline BINExitRoomResponse& operator=(const BINExitRoomResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BINExitRoomResponse& default_instance();

  void Swap(BINExitRoomResponse* other);

  // implements Message ----------------------------------------------

  BINExitRoomResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BINExitRoomResponse& from);
  void MergeFrom(const BINExitRoomResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool responseCode = 1;
  inline bool has_responsecode() const;
  inline void clear_responsecode();
  static const int kResponseCodeFieldNumber = 1;
  inline bool responsecode() const;
  inline void set_responsecode(bool value);

  // optional string message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // optional bool exitAfterMatchEnd = 3;
  inline bool has_exitaftermatchend() const;
  inline void clear_exitaftermatchend();
  static const int kExitAfterMatchEndFieldNumber = 3;
  inline bool exitaftermatchend() const;
  inline void set_exitaftermatchend(bool value);

  // @@protoc_insertion_point(class_scope:BINExitRoomResponse)
 private:
  inline void set_has_responsecode();
  inline void clear_has_responsecode();
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_exitaftermatchend();
  inline void clear_has_exitaftermatchend();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* message_;
  bool responsecode_;
  bool exitaftermatchend_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_exit_5froom_2eproto();
  friend void protobuf_AssignDesc_exit_5froom_2eproto();
  friend void protobuf_ShutdownFile_exit_5froom_2eproto();

  void InitAsDefaultInstance();
  static BINExitRoomResponse* default_instance_;
};
// -------------------------------------------------------------------

class BINPlayerExitAfterMatchEndResponse : public ::google::protobuf::Message {
 public:
  BINPlayerExitAfterMatchEndResponse();
  virtual ~BINPlayerExitAfterMatchEndResponse();

  BINPlayerExitAfterMatchEndResponse(const BINPlayerExitAfterMatchEndResponse& from);

  inline BINPlayerExitAfterMatchEndResponse& operator=(const BINPlayerExitAfterMatchEndResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BINPlayerExitAfterMatchEndResponse& default_instance();

  void Swap(BINPlayerExitAfterMatchEndResponse* other);

  // implements Message ----------------------------------------------

  BINPlayerExitAfterMatchEndResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BINPlayerExitAfterMatchEndResponse& from);
  void MergeFrom(const BINPlayerExitAfterMatchEndResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool responseCode = 1;
  inline bool has_responsecode() const;
  inline void clear_responsecode();
  static const int kResponseCodeFieldNumber = 1;
  inline bool responsecode() const;
  inline void set_responsecode(bool value);

  // optional string message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // optional int64 exitUserId = 3;
  inline bool has_exituserid() const;
  inline void clear_exituserid();
  static const int kExitUserIdFieldNumber = 3;
  inline ::google::protobuf::int64 exituserid() const;
  inline void set_exituserid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:BINPlayerExitAfterMatchEndResponse)
 private:
  inline void set_has_responsecode();
  inline void clear_has_responsecode();
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_exituserid();
  inline void clear_has_exituserid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* message_;
  ::google::protobuf::int64 exituserid_;
  bool responsecode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_exit_5froom_2eproto();
  friend void protobuf_AssignDesc_exit_5froom_2eproto();
  friend void protobuf_ShutdownFile_exit_5froom_2eproto();

  void InitAsDefaultInstance();
  static BINPlayerExitAfterMatchEndResponse* default_instance_;
};
// -------------------------------------------------------------------

class BINPlayerExitRoomResponse : public ::google::protobuf::Message {
 public:
  BINPlayerExitRoomResponse();
  virtual ~BINPlayerExitRoomResponse();

  BINPlayerExitRoomResponse(const BINPlayerExitRoomResponse& from);

  inline BINPlayerExitRoomResponse& operator=(const BINPlayerExitRoomResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BINPlayerExitRoomResponse& default_instance();

  void Swap(BINPlayerExitRoomResponse* other);

  // implements Message ----------------------------------------------

  BINPlayerExitRoomResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BINPlayerExitRoomResponse& from);
  void MergeFrom(const BINPlayerExitRoomResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool responseCode = 1;
  inline bool has_responsecode() const;
  inline void clear_responsecode();
  static const int kResponseCodeFieldNumber = 1;
  inline bool responsecode() const;
  inline void set_responsecode(bool value);

  // optional string message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // optional int64 exitUserId = 3;
  inline bool has_exituserid() const;
  inline void clear_exituserid();
  static const int kExitUserIdFieldNumber = 3;
  inline ::google::protobuf::int64 exituserid() const;
  inline void set_exituserid(::google::protobuf::int64 value);

  // optional int64 ownerUserId = 4;
  inline bool has_owneruserid() const;
  inline void clear_owneruserid();
  static const int kOwnerUserIdFieldNumber = 4;
  inline ::google::protobuf::int64 owneruserid() const;
  inline void set_owneruserid(::google::protobuf::int64 value);

  // optional int32 changeOwnerRoomCd = 5;
  inline bool has_changeownerroomcd() const;
  inline void clear_changeownerroomcd();
  static const int kChangeOwnerRoomCdFieldNumber = 5;
  inline ::google::protobuf::int32 changeownerroomcd() const;
  inline void set_changeownerroomcd(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BINPlayerExitRoomResponse)
 private:
  inline void set_has_responsecode();
  inline void clear_has_responsecode();
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_exituserid();
  inline void clear_has_exituserid();
  inline void set_has_owneruserid();
  inline void clear_has_owneruserid();
  inline void set_has_changeownerroomcd();
  inline void clear_has_changeownerroomcd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* message_;
  ::google::protobuf::int64 exituserid_;
  bool responsecode_;
  ::google::protobuf::int32 changeownerroomcd_;
  ::google::protobuf::int64 owneruserid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_exit_5froom_2eproto();
  friend void protobuf_AssignDesc_exit_5froom_2eproto();
  friend void protobuf_ShutdownFile_exit_5froom_2eproto();

  void InitAsDefaultInstance();
  static BINPlayerExitRoomResponse* default_instance_;
};
// -------------------------------------------------------------------

class BINCancelExitAfterMatchEndRequest : public ::google::protobuf::Message {
 public:
  BINCancelExitAfterMatchEndRequest();
  virtual ~BINCancelExitAfterMatchEndRequest();

  BINCancelExitAfterMatchEndRequest(const BINCancelExitAfterMatchEndRequest& from);

  inline BINCancelExitAfterMatchEndRequest& operator=(const BINCancelExitAfterMatchEndRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BINCancelExitAfterMatchEndRequest& default_instance();

  void Swap(BINCancelExitAfterMatchEndRequest* other);

  // implements Message ----------------------------------------------

  BINCancelExitAfterMatchEndRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BINCancelExitAfterMatchEndRequest& from);
  void MergeFrom(const BINCancelExitAfterMatchEndRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roomIndex = 1;
  inline bool has_roomindex() const;
  inline void clear_roomindex();
  static const int kRoomIndexFieldNumber = 1;
  inline ::google::protobuf::int32 roomindex() const;
  inline void set_roomindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BINCancelExitAfterMatchEndRequest)
 private:
  inline void set_has_roomindex();
  inline void clear_has_roomindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roomindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_exit_5froom_2eproto();
  friend void protobuf_AssignDesc_exit_5froom_2eproto();
  friend void protobuf_ShutdownFile_exit_5froom_2eproto();

  void InitAsDefaultInstance();
  static BINCancelExitAfterMatchEndRequest* default_instance_;
};
// -------------------------------------------------------------------

class BINCancelExitAfterMatchEndResponse : public ::google::protobuf::Message {
 public:
  BINCancelExitAfterMatchEndResponse();
  virtual ~BINCancelExitAfterMatchEndResponse();

  BINCancelExitAfterMatchEndResponse(const BINCancelExitAfterMatchEndResponse& from);

  inline BINCancelExitAfterMatchEndResponse& operator=(const BINCancelExitAfterMatchEndResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BINCancelExitAfterMatchEndResponse& default_instance();

  void Swap(BINCancelExitAfterMatchEndResponse* other);

  // implements Message ----------------------------------------------

  BINCancelExitAfterMatchEndResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BINCancelExitAfterMatchEndResponse& from);
  void MergeFrom(const BINCancelExitAfterMatchEndResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool responseCode = 1;
  inline bool has_responsecode() const;
  inline void clear_responsecode();
  static const int kResponseCodeFieldNumber = 1;
  inline bool responsecode() const;
  inline void set_responsecode(bool value);

  // optional string message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // optional int64 cancelExitUserId = 3;
  inline bool has_cancelexituserid() const;
  inline void clear_cancelexituserid();
  static const int kCancelExitUserIdFieldNumber = 3;
  inline ::google::protobuf::int64 cancelexituserid() const;
  inline void set_cancelexituserid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:BINCancelExitAfterMatchEndResponse)
 private:
  inline void set_has_responsecode();
  inline void clear_has_responsecode();
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_cancelexituserid();
  inline void clear_has_cancelexituserid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* message_;
  ::google::protobuf::int64 cancelexituserid_;
  bool responsecode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_exit_5froom_2eproto();
  friend void protobuf_AssignDesc_exit_5froom_2eproto();
  friend void protobuf_ShutdownFile_exit_5froom_2eproto();

  void InitAsDefaultInstance();
  static BINCancelExitAfterMatchEndResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// BINExitRoomRequest

// required int32 roomIndex = 1;
inline bool BINExitRoomRequest::has_roomindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BINExitRoomRequest::set_has_roomindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BINExitRoomRequest::clear_has_roomindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BINExitRoomRequest::clear_roomindex() {
  roomindex_ = 0;
  clear_has_roomindex();
}
inline ::google::protobuf::int32 BINExitRoomRequest::roomindex() const {
  return roomindex_;
}
inline void BINExitRoomRequest::set_roomindex(::google::protobuf::int32 value) {
  set_has_roomindex();
  roomindex_ = value;
}

// -------------------------------------------------------------------

// BINExitRoomResponse

// required bool responseCode = 1;
inline bool BINExitRoomResponse::has_responsecode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BINExitRoomResponse::set_has_responsecode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BINExitRoomResponse::clear_has_responsecode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BINExitRoomResponse::clear_responsecode() {
  responsecode_ = false;
  clear_has_responsecode();
}
inline bool BINExitRoomResponse::responsecode() const {
  return responsecode_;
}
inline void BINExitRoomResponse::set_responsecode(bool value) {
  set_has_responsecode();
  responsecode_ = value;
}

// optional string message = 2;
inline bool BINExitRoomResponse::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BINExitRoomResponse::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BINExitRoomResponse::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BINExitRoomResponse::clear_message() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& BINExitRoomResponse::message() const {
  return *message_;
}
inline void BINExitRoomResponse::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void BINExitRoomResponse::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void BINExitRoomResponse::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BINExitRoomResponse::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  return message_;
}
inline ::std::string* BINExitRoomResponse::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BINExitRoomResponse::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool exitAfterMatchEnd = 3;
inline bool BINExitRoomResponse::has_exitaftermatchend() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BINExitRoomResponse::set_has_exitaftermatchend() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BINExitRoomResponse::clear_has_exitaftermatchend() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BINExitRoomResponse::clear_exitaftermatchend() {
  exitaftermatchend_ = false;
  clear_has_exitaftermatchend();
}
inline bool BINExitRoomResponse::exitaftermatchend() const {
  return exitaftermatchend_;
}
inline void BINExitRoomResponse::set_exitaftermatchend(bool value) {
  set_has_exitaftermatchend();
  exitaftermatchend_ = value;
}

// -------------------------------------------------------------------

// BINPlayerExitAfterMatchEndResponse

// required bool responseCode = 1;
inline bool BINPlayerExitAfterMatchEndResponse::has_responsecode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BINPlayerExitAfterMatchEndResponse::set_has_responsecode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BINPlayerExitAfterMatchEndResponse::clear_has_responsecode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BINPlayerExitAfterMatchEndResponse::clear_responsecode() {
  responsecode_ = false;
  clear_has_responsecode();
}
inline bool BINPlayerExitAfterMatchEndResponse::responsecode() const {
  return responsecode_;
}
inline void BINPlayerExitAfterMatchEndResponse::set_responsecode(bool value) {
  set_has_responsecode();
  responsecode_ = value;
}

// optional string message = 2;
inline bool BINPlayerExitAfterMatchEndResponse::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BINPlayerExitAfterMatchEndResponse::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BINPlayerExitAfterMatchEndResponse::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BINPlayerExitAfterMatchEndResponse::clear_message() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& BINPlayerExitAfterMatchEndResponse::message() const {
  return *message_;
}
inline void BINPlayerExitAfterMatchEndResponse::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void BINPlayerExitAfterMatchEndResponse::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void BINPlayerExitAfterMatchEndResponse::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BINPlayerExitAfterMatchEndResponse::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  return message_;
}
inline ::std::string* BINPlayerExitAfterMatchEndResponse::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BINPlayerExitAfterMatchEndResponse::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 exitUserId = 3;
inline bool BINPlayerExitAfterMatchEndResponse::has_exituserid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BINPlayerExitAfterMatchEndResponse::set_has_exituserid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BINPlayerExitAfterMatchEndResponse::clear_has_exituserid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BINPlayerExitAfterMatchEndResponse::clear_exituserid() {
  exituserid_ = GOOGLE_LONGLONG(0);
  clear_has_exituserid();
}
inline ::google::protobuf::int64 BINPlayerExitAfterMatchEndResponse::exituserid() const {
  return exituserid_;
}
inline void BINPlayerExitAfterMatchEndResponse::set_exituserid(::google::protobuf::int64 value) {
  set_has_exituserid();
  exituserid_ = value;
}

// -------------------------------------------------------------------

// BINPlayerExitRoomResponse

// required bool responseCode = 1;
inline bool BINPlayerExitRoomResponse::has_responsecode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BINPlayerExitRoomResponse::set_has_responsecode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BINPlayerExitRoomResponse::clear_has_responsecode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BINPlayerExitRoomResponse::clear_responsecode() {
  responsecode_ = false;
  clear_has_responsecode();
}
inline bool BINPlayerExitRoomResponse::responsecode() const {
  return responsecode_;
}
inline void BINPlayerExitRoomResponse::set_responsecode(bool value) {
  set_has_responsecode();
  responsecode_ = value;
}

// optional string message = 2;
inline bool BINPlayerExitRoomResponse::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BINPlayerExitRoomResponse::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BINPlayerExitRoomResponse::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BINPlayerExitRoomResponse::clear_message() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& BINPlayerExitRoomResponse::message() const {
  return *message_;
}
inline void BINPlayerExitRoomResponse::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void BINPlayerExitRoomResponse::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void BINPlayerExitRoomResponse::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BINPlayerExitRoomResponse::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  return message_;
}
inline ::std::string* BINPlayerExitRoomResponse::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BINPlayerExitRoomResponse::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 exitUserId = 3;
inline bool BINPlayerExitRoomResponse::has_exituserid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BINPlayerExitRoomResponse::set_has_exituserid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BINPlayerExitRoomResponse::clear_has_exituserid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BINPlayerExitRoomResponse::clear_exituserid() {
  exituserid_ = GOOGLE_LONGLONG(0);
  clear_has_exituserid();
}
inline ::google::protobuf::int64 BINPlayerExitRoomResponse::exituserid() const {
  return exituserid_;
}
inline void BINPlayerExitRoomResponse::set_exituserid(::google::protobuf::int64 value) {
  set_has_exituserid();
  exituserid_ = value;
}

// optional int64 ownerUserId = 4;
inline bool BINPlayerExitRoomResponse::has_owneruserid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BINPlayerExitRoomResponse::set_has_owneruserid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BINPlayerExitRoomResponse::clear_has_owneruserid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BINPlayerExitRoomResponse::clear_owneruserid() {
  owneruserid_ = GOOGLE_LONGLONG(0);
  clear_has_owneruserid();
}
inline ::google::protobuf::int64 BINPlayerExitRoomResponse::owneruserid() const {
  return owneruserid_;
}
inline void BINPlayerExitRoomResponse::set_owneruserid(::google::protobuf::int64 value) {
  set_has_owneruserid();
  owneruserid_ = value;
}

// optional int32 changeOwnerRoomCd = 5;
inline bool BINPlayerExitRoomResponse::has_changeownerroomcd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BINPlayerExitRoomResponse::set_has_changeownerroomcd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BINPlayerExitRoomResponse::clear_has_changeownerroomcd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BINPlayerExitRoomResponse::clear_changeownerroomcd() {
  changeownerroomcd_ = 0;
  clear_has_changeownerroomcd();
}
inline ::google::protobuf::int32 BINPlayerExitRoomResponse::changeownerroomcd() const {
  return changeownerroomcd_;
}
inline void BINPlayerExitRoomResponse::set_changeownerroomcd(::google::protobuf::int32 value) {
  set_has_changeownerroomcd();
  changeownerroomcd_ = value;
}

// -------------------------------------------------------------------

// BINCancelExitAfterMatchEndRequest

// required int32 roomIndex = 1;
inline bool BINCancelExitAfterMatchEndRequest::has_roomindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BINCancelExitAfterMatchEndRequest::set_has_roomindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BINCancelExitAfterMatchEndRequest::clear_has_roomindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BINCancelExitAfterMatchEndRequest::clear_roomindex() {
  roomindex_ = 0;
  clear_has_roomindex();
}
inline ::google::protobuf::int32 BINCancelExitAfterMatchEndRequest::roomindex() const {
  return roomindex_;
}
inline void BINCancelExitAfterMatchEndRequest::set_roomindex(::google::protobuf::int32 value) {
  set_has_roomindex();
  roomindex_ = value;
}

// -------------------------------------------------------------------

// BINCancelExitAfterMatchEndResponse

// required bool responseCode = 1;
inline bool BINCancelExitAfterMatchEndResponse::has_responsecode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BINCancelExitAfterMatchEndResponse::set_has_responsecode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BINCancelExitAfterMatchEndResponse::clear_has_responsecode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BINCancelExitAfterMatchEndResponse::clear_responsecode() {
  responsecode_ = false;
  clear_has_responsecode();
}
inline bool BINCancelExitAfterMatchEndResponse::responsecode() const {
  return responsecode_;
}
inline void BINCancelExitAfterMatchEndResponse::set_responsecode(bool value) {
  set_has_responsecode();
  responsecode_ = value;
}

// optional string message = 2;
inline bool BINCancelExitAfterMatchEndResponse::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BINCancelExitAfterMatchEndResponse::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BINCancelExitAfterMatchEndResponse::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BINCancelExitAfterMatchEndResponse::clear_message() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& BINCancelExitAfterMatchEndResponse::message() const {
  return *message_;
}
inline void BINCancelExitAfterMatchEndResponse::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void BINCancelExitAfterMatchEndResponse::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void BINCancelExitAfterMatchEndResponse::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BINCancelExitAfterMatchEndResponse::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  return message_;
}
inline ::std::string* BINCancelExitAfterMatchEndResponse::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BINCancelExitAfterMatchEndResponse::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 cancelExitUserId = 3;
inline bool BINCancelExitAfterMatchEndResponse::has_cancelexituserid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BINCancelExitAfterMatchEndResponse::set_has_cancelexituserid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BINCancelExitAfterMatchEndResponse::clear_has_cancelexituserid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BINCancelExitAfterMatchEndResponse::clear_cancelexituserid() {
  cancelexituserid_ = GOOGLE_LONGLONG(0);
  clear_has_cancelexituserid();
}
inline ::google::protobuf::int64 BINCancelExitAfterMatchEndResponse::cancelexituserid() const {
  return cancelexituserid_;
}
inline void BINCancelExitAfterMatchEndResponse::set_cancelexituserid(::google::protobuf::int64 value) {
  set_has_cancelexituserid();
  cancelexituserid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_exit_5froom_2eproto__INCLUDED
