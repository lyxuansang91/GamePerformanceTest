// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enter_zone.proto

#ifndef PROTOBUF_enter_5fzone_2eproto__INCLUDED
#define PROTOBUF_enter_5fzone_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_enter_5fzone_2eproto();
void protobuf_AssignDesc_enter_5fzone_2eproto();
void protobuf_ShutdownFile_enter_5fzone_2eproto();

class BINEnterZoneRequest;
class BINRoomConfig;
class BINEnterZoneResponse;
class BINExitZoneRequest;
class BINExitZoneResponse;

// ===================================================================

class BINEnterZoneRequest : public ::google::protobuf::Message {
 public:
  BINEnterZoneRequest();
  virtual ~BINEnterZoneRequest();

  BINEnterZoneRequest(const BINEnterZoneRequest& from);

  inline BINEnterZoneRequest& operator=(const BINEnterZoneRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BINEnterZoneRequest& default_instance();

  void Swap(BINEnterZoneRequest* other);

  // implements Message ----------------------------------------------

  BINEnterZoneRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BINEnterZoneRequest& from);
  void MergeFrom(const BINEnterZoneRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 zoneId = 1;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneIdFieldNumber = 1;
  inline ::google::protobuf::int32 zoneid() const;
  inline void set_zoneid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BINEnterZoneRequest)
 private:
  inline void set_has_zoneid();
  inline void clear_has_zoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 zoneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_enter_5fzone_2eproto();
  friend void protobuf_AssignDesc_enter_5fzone_2eproto();
  friend void protobuf_ShutdownFile_enter_5fzone_2eproto();

  void InitAsDefaultInstance();
  static BINEnterZoneRequest* default_instance_;
};
// -------------------------------------------------------------------

class BINRoomConfig : public ::google::protobuf::Message {
 public:
  BINRoomConfig();
  virtual ~BINRoomConfig();

  BINRoomConfig(const BINRoomConfig& from);

  inline BINRoomConfig& operator=(const BINRoomConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BINRoomConfig& default_instance();

  void Swap(BINRoomConfig* other);

  // implements Message ----------------------------------------------

  BINRoomConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BINRoomConfig& from);
  void MergeFrom(const BINRoomConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roomGroupId = 1;
  inline bool has_roomgroupid() const;
  inline void clear_roomgroupid();
  static const int kRoomGroupIdFieldNumber = 1;
  inline ::google::protobuf::int32 roomgroupid() const;
  inline void set_roomgroupid(::google::protobuf::int32 value);

  // optional string roomName = 2;
  inline bool has_roomname() const;
  inline void clear_roomname();
  static const int kRoomNameFieldNumber = 2;
  inline const ::std::string& roomname() const;
  inline void set_roomname(const ::std::string& value);
  inline void set_roomname(const char* value);
  inline void set_roomname(const char* value, size_t size);
  inline ::std::string* mutable_roomname();
  inline ::std::string* release_roomname();
  inline void set_allocated_roomname(::std::string* roomname);

  // required bool vipRoom = 3;
  inline bool has_viproom() const;
  inline void clear_viproom();
  static const int kVipRoomFieldNumber = 3;
  inline bool viproom() const;
  inline void set_viproom(bool value);

  // required int32 minCash = 4;
  inline bool has_mincash() const;
  inline void clear_mincash();
  static const int kMinCashFieldNumber = 4;
  inline ::google::protobuf::int32 mincash() const;
  inline void set_mincash(::google::protobuf::int32 value);

  // required int32 minGold = 5;
  inline bool has_mingold() const;
  inline void clear_mingold();
  static const int kMinGoldFieldNumber = 5;
  inline ::google::protobuf::int32 mingold() const;
  inline void set_mingold(::google::protobuf::int32 value);

  // required int32 minLevel = 6;
  inline bool has_minlevel() const;
  inline void clear_minlevel();
  static const int kMinLevelFieldNumber = 6;
  inline ::google::protobuf::int32 minlevel() const;
  inline void set_minlevel(::google::protobuf::int32 value);

  // required int32 roomCapacity = 7;
  inline bool has_roomcapacity() const;
  inline void clear_roomcapacity();
  static const int kRoomCapacityFieldNumber = 7;
  inline ::google::protobuf::int32 roomcapacity() const;
  inline void set_roomcapacity(::google::protobuf::int32 value);

  // required int32 playerSize = 8;
  inline bool has_playersize() const;
  inline void clear_playersize();
  static const int kPlayerSizeFieldNumber = 8;
  inline ::google::protobuf::int32 playersize() const;
  inline void set_playersize(::google::protobuf::int32 value);

  // required int32 minBet = 9;
  inline bool has_minbet() const;
  inline void clear_minbet();
  static const int kMinBetFieldNumber = 9;
  inline ::google::protobuf::int32 minbet() const;
  inline void set_minbet(::google::protobuf::int32 value);

  // required int32 tax = 10;
  inline bool has_tax() const;
  inline void clear_tax();
  static const int kTaxFieldNumber = 10;
  inline ::google::protobuf::int32 tax() const;
  inline void set_tax(::google::protobuf::int32 value);

  // required bool active = 11;
  inline bool has_active() const;
  inline void clear_active();
  static const int kActiveFieldNumber = 11;
  inline bool active() const;
  inline void set_active(bool value);

  // @@protoc_insertion_point(class_scope:BINRoomConfig)
 private:
  inline void set_has_roomgroupid();
  inline void clear_has_roomgroupid();
  inline void set_has_roomname();
  inline void clear_has_roomname();
  inline void set_has_viproom();
  inline void clear_has_viproom();
  inline void set_has_mincash();
  inline void clear_has_mincash();
  inline void set_has_mingold();
  inline void clear_has_mingold();
  inline void set_has_minlevel();
  inline void clear_has_minlevel();
  inline void set_has_roomcapacity();
  inline void clear_has_roomcapacity();
  inline void set_has_playersize();
  inline void clear_has_playersize();
  inline void set_has_minbet();
  inline void clear_has_minbet();
  inline void set_has_tax();
  inline void clear_has_tax();
  inline void set_has_active();
  inline void clear_has_active();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* roomname_;
  ::google::protobuf::int32 roomgroupid_;
  ::google::protobuf::int32 mincash_;
  ::google::protobuf::int32 mingold_;
  ::google::protobuf::int32 minlevel_;
  ::google::protobuf::int32 roomcapacity_;
  bool viproom_;
  bool active_;
  ::google::protobuf::int32 playersize_;
  ::google::protobuf::int32 minbet_;
  ::google::protobuf::int32 tax_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_enter_5fzone_2eproto();
  friend void protobuf_AssignDesc_enter_5fzone_2eproto();
  friend void protobuf_ShutdownFile_enter_5fzone_2eproto();

  void InitAsDefaultInstance();
  static BINRoomConfig* default_instance_;
};
// -------------------------------------------------------------------

class BINEnterZoneResponse : public ::google::protobuf::Message {
 public:
  BINEnterZoneResponse();
  virtual ~BINEnterZoneResponse();

  BINEnterZoneResponse(const BINEnterZoneResponse& from);

  inline BINEnterZoneResponse& operator=(const BINEnterZoneResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BINEnterZoneResponse& default_instance();

  void Swap(BINEnterZoneResponse* other);

  // implements Message ----------------------------------------------

  BINEnterZoneResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BINEnterZoneResponse& from);
  void MergeFrom(const BINEnterZoneResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool responseCode = 1;
  inline bool has_responsecode() const;
  inline void clear_responsecode();
  static const int kResponseCodeFieldNumber = 1;
  inline bool responsecode() const;
  inline void set_responsecode(bool value);

  // optional string message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // optional bool enableDisplayRoomList = 3;
  inline bool has_enabledisplayroomlist() const;
  inline void clear_enabledisplayroomlist();
  static const int kEnableDisplayRoomListFieldNumber = 3;
  inline bool enabledisplayroomlist() const;
  inline void set_enabledisplayroomlist(bool value);

  // repeated .BINRoomConfig cashRoomConfigs = 4;
  inline int cashroomconfigs_size() const;
  inline void clear_cashroomconfigs();
  static const int kCashRoomConfigsFieldNumber = 4;
  inline const ::BINRoomConfig& cashroomconfigs(int index) const;
  inline ::BINRoomConfig* mutable_cashroomconfigs(int index);
  inline ::BINRoomConfig* add_cashroomconfigs();
  inline const ::google::protobuf::RepeatedPtrField< ::BINRoomConfig >&
      cashroomconfigs() const;
  inline ::google::protobuf::RepeatedPtrField< ::BINRoomConfig >*
      mutable_cashroomconfigs();

  // repeated .BINRoomConfig goldRoomConfigs = 5;
  inline int goldroomconfigs_size() const;
  inline void clear_goldroomconfigs();
  static const int kGoldRoomConfigsFieldNumber = 5;
  inline const ::BINRoomConfig& goldroomconfigs(int index) const;
  inline ::BINRoomConfig* mutable_goldroomconfigs(int index);
  inline ::BINRoomConfig* add_goldroomconfigs();
  inline const ::google::protobuf::RepeatedPtrField< ::BINRoomConfig >&
      goldroomconfigs() const;
  inline ::google::protobuf::RepeatedPtrField< ::BINRoomConfig >*
      mutable_goldroomconfigs();

  // @@protoc_insertion_point(class_scope:BINEnterZoneResponse)
 private:
  inline void set_has_responsecode();
  inline void clear_has_responsecode();
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_enabledisplayroomlist();
  inline void clear_has_enabledisplayroomlist();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* message_;
  ::google::protobuf::RepeatedPtrField< ::BINRoomConfig > cashroomconfigs_;
  ::google::protobuf::RepeatedPtrField< ::BINRoomConfig > goldroomconfigs_;
  bool responsecode_;
  bool enabledisplayroomlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_enter_5fzone_2eproto();
  friend void protobuf_AssignDesc_enter_5fzone_2eproto();
  friend void protobuf_ShutdownFile_enter_5fzone_2eproto();

  void InitAsDefaultInstance();
  static BINEnterZoneResponse* default_instance_;
};
// -------------------------------------------------------------------

class BINExitZoneRequest : public ::google::protobuf::Message {
 public:
  BINExitZoneRequest();
  virtual ~BINExitZoneRequest();

  BINExitZoneRequest(const BINExitZoneRequest& from);

  inline BINExitZoneRequest& operator=(const BINExitZoneRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BINExitZoneRequest& default_instance();

  void Swap(BINExitZoneRequest* other);

  // implements Message ----------------------------------------------

  BINExitZoneRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BINExitZoneRequest& from);
  void MergeFrom(const BINExitZoneRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 zoneId = 1;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneIdFieldNumber = 1;
  inline ::google::protobuf::int32 zoneid() const;
  inline void set_zoneid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BINExitZoneRequest)
 private:
  inline void set_has_zoneid();
  inline void clear_has_zoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 zoneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_enter_5fzone_2eproto();
  friend void protobuf_AssignDesc_enter_5fzone_2eproto();
  friend void protobuf_ShutdownFile_enter_5fzone_2eproto();

  void InitAsDefaultInstance();
  static BINExitZoneRequest* default_instance_;
};
// -------------------------------------------------------------------

class BINExitZoneResponse : public ::google::protobuf::Message {
 public:
  BINExitZoneResponse();
  virtual ~BINExitZoneResponse();

  BINExitZoneResponse(const BINExitZoneResponse& from);

  inline BINExitZoneResponse& operator=(const BINExitZoneResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BINExitZoneResponse& default_instance();

  void Swap(BINExitZoneResponse* other);

  // implements Message ----------------------------------------------

  BINExitZoneResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BINExitZoneResponse& from);
  void MergeFrom(const BINExitZoneResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool responseCode = 1;
  inline bool has_responsecode() const;
  inline void clear_responsecode();
  static const int kResponseCodeFieldNumber = 1;
  inline bool responsecode() const;
  inline void set_responsecode(bool value);

  // optional string message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:BINExitZoneResponse)
 private:
  inline void set_has_responsecode();
  inline void clear_has_responsecode();
  inline void set_has_message();
  inline void clear_has_message();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* message_;
  bool responsecode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_enter_5fzone_2eproto();
  friend void protobuf_AssignDesc_enter_5fzone_2eproto();
  friend void protobuf_ShutdownFile_enter_5fzone_2eproto();

  void InitAsDefaultInstance();
  static BINExitZoneResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// BINEnterZoneRequest

// required int32 zoneId = 1;
inline bool BINEnterZoneRequest::has_zoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BINEnterZoneRequest::set_has_zoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BINEnterZoneRequest::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BINEnterZoneRequest::clear_zoneid() {
  zoneid_ = 0;
  clear_has_zoneid();
}
inline ::google::protobuf::int32 BINEnterZoneRequest::zoneid() const {
  return zoneid_;
}
inline void BINEnterZoneRequest::set_zoneid(::google::protobuf::int32 value) {
  set_has_zoneid();
  zoneid_ = value;
}

// -------------------------------------------------------------------

// BINRoomConfig

// required int32 roomGroupId = 1;
inline bool BINRoomConfig::has_roomgroupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BINRoomConfig::set_has_roomgroupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BINRoomConfig::clear_has_roomgroupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BINRoomConfig::clear_roomgroupid() {
  roomgroupid_ = 0;
  clear_has_roomgroupid();
}
inline ::google::protobuf::int32 BINRoomConfig::roomgroupid() const {
  return roomgroupid_;
}
inline void BINRoomConfig::set_roomgroupid(::google::protobuf::int32 value) {
  set_has_roomgroupid();
  roomgroupid_ = value;
}

// optional string roomName = 2;
inline bool BINRoomConfig::has_roomname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BINRoomConfig::set_has_roomname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BINRoomConfig::clear_has_roomname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BINRoomConfig::clear_roomname() {
  if (roomname_ != &::google::protobuf::internal::kEmptyString) {
    roomname_->clear();
  }
  clear_has_roomname();
}
inline const ::std::string& BINRoomConfig::roomname() const {
  return *roomname_;
}
inline void BINRoomConfig::set_roomname(const ::std::string& value) {
  set_has_roomname();
  if (roomname_ == &::google::protobuf::internal::kEmptyString) {
    roomname_ = new ::std::string;
  }
  roomname_->assign(value);
}
inline void BINRoomConfig::set_roomname(const char* value) {
  set_has_roomname();
  if (roomname_ == &::google::protobuf::internal::kEmptyString) {
    roomname_ = new ::std::string;
  }
  roomname_->assign(value);
}
inline void BINRoomConfig::set_roomname(const char* value, size_t size) {
  set_has_roomname();
  if (roomname_ == &::google::protobuf::internal::kEmptyString) {
    roomname_ = new ::std::string;
  }
  roomname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BINRoomConfig::mutable_roomname() {
  set_has_roomname();
  if (roomname_ == &::google::protobuf::internal::kEmptyString) {
    roomname_ = new ::std::string;
  }
  return roomname_;
}
inline ::std::string* BINRoomConfig::release_roomname() {
  clear_has_roomname();
  if (roomname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = roomname_;
    roomname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BINRoomConfig::set_allocated_roomname(::std::string* roomname) {
  if (roomname_ != &::google::protobuf::internal::kEmptyString) {
    delete roomname_;
  }
  if (roomname) {
    set_has_roomname();
    roomname_ = roomname;
  } else {
    clear_has_roomname();
    roomname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bool vipRoom = 3;
inline bool BINRoomConfig::has_viproom() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BINRoomConfig::set_has_viproom() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BINRoomConfig::clear_has_viproom() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BINRoomConfig::clear_viproom() {
  viproom_ = false;
  clear_has_viproom();
}
inline bool BINRoomConfig::viproom() const {
  return viproom_;
}
inline void BINRoomConfig::set_viproom(bool value) {
  set_has_viproom();
  viproom_ = value;
}

// required int32 minCash = 4;
inline bool BINRoomConfig::has_mincash() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BINRoomConfig::set_has_mincash() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BINRoomConfig::clear_has_mincash() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BINRoomConfig::clear_mincash() {
  mincash_ = 0;
  clear_has_mincash();
}
inline ::google::protobuf::int32 BINRoomConfig::mincash() const {
  return mincash_;
}
inline void BINRoomConfig::set_mincash(::google::protobuf::int32 value) {
  set_has_mincash();
  mincash_ = value;
}

// required int32 minGold = 5;
inline bool BINRoomConfig::has_mingold() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BINRoomConfig::set_has_mingold() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BINRoomConfig::clear_has_mingold() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BINRoomConfig::clear_mingold() {
  mingold_ = 0;
  clear_has_mingold();
}
inline ::google::protobuf::int32 BINRoomConfig::mingold() const {
  return mingold_;
}
inline void BINRoomConfig::set_mingold(::google::protobuf::int32 value) {
  set_has_mingold();
  mingold_ = value;
}

// required int32 minLevel = 6;
inline bool BINRoomConfig::has_minlevel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BINRoomConfig::set_has_minlevel() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BINRoomConfig::clear_has_minlevel() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BINRoomConfig::clear_minlevel() {
  minlevel_ = 0;
  clear_has_minlevel();
}
inline ::google::protobuf::int32 BINRoomConfig::minlevel() const {
  return minlevel_;
}
inline void BINRoomConfig::set_minlevel(::google::protobuf::int32 value) {
  set_has_minlevel();
  minlevel_ = value;
}

// required int32 roomCapacity = 7;
inline bool BINRoomConfig::has_roomcapacity() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BINRoomConfig::set_has_roomcapacity() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BINRoomConfig::clear_has_roomcapacity() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BINRoomConfig::clear_roomcapacity() {
  roomcapacity_ = 0;
  clear_has_roomcapacity();
}
inline ::google::protobuf::int32 BINRoomConfig::roomcapacity() const {
  return roomcapacity_;
}
inline void BINRoomConfig::set_roomcapacity(::google::protobuf::int32 value) {
  set_has_roomcapacity();
  roomcapacity_ = value;
}

// required int32 playerSize = 8;
inline bool BINRoomConfig::has_playersize() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BINRoomConfig::set_has_playersize() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BINRoomConfig::clear_has_playersize() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BINRoomConfig::clear_playersize() {
  playersize_ = 0;
  clear_has_playersize();
}
inline ::google::protobuf::int32 BINRoomConfig::playersize() const {
  return playersize_;
}
inline void BINRoomConfig::set_playersize(::google::protobuf::int32 value) {
  set_has_playersize();
  playersize_ = value;
}

// required int32 minBet = 9;
inline bool BINRoomConfig::has_minbet() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BINRoomConfig::set_has_minbet() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BINRoomConfig::clear_has_minbet() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BINRoomConfig::clear_minbet() {
  minbet_ = 0;
  clear_has_minbet();
}
inline ::google::protobuf::int32 BINRoomConfig::minbet() const {
  return minbet_;
}
inline void BINRoomConfig::set_minbet(::google::protobuf::int32 value) {
  set_has_minbet();
  minbet_ = value;
}

// required int32 tax = 10;
inline bool BINRoomConfig::has_tax() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BINRoomConfig::set_has_tax() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BINRoomConfig::clear_has_tax() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BINRoomConfig::clear_tax() {
  tax_ = 0;
  clear_has_tax();
}
inline ::google::protobuf::int32 BINRoomConfig::tax() const {
  return tax_;
}
inline void BINRoomConfig::set_tax(::google::protobuf::int32 value) {
  set_has_tax();
  tax_ = value;
}

// required bool active = 11;
inline bool BINRoomConfig::has_active() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BINRoomConfig::set_has_active() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BINRoomConfig::clear_has_active() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BINRoomConfig::clear_active() {
  active_ = false;
  clear_has_active();
}
inline bool BINRoomConfig::active() const {
  return active_;
}
inline void BINRoomConfig::set_active(bool value) {
  set_has_active();
  active_ = value;
}

// -------------------------------------------------------------------

// BINEnterZoneResponse

// required bool responseCode = 1;
inline bool BINEnterZoneResponse::has_responsecode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BINEnterZoneResponse::set_has_responsecode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BINEnterZoneResponse::clear_has_responsecode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BINEnterZoneResponse::clear_responsecode() {
  responsecode_ = false;
  clear_has_responsecode();
}
inline bool BINEnterZoneResponse::responsecode() const {
  return responsecode_;
}
inline void BINEnterZoneResponse::set_responsecode(bool value) {
  set_has_responsecode();
  responsecode_ = value;
}

// optional string message = 2;
inline bool BINEnterZoneResponse::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BINEnterZoneResponse::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BINEnterZoneResponse::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BINEnterZoneResponse::clear_message() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& BINEnterZoneResponse::message() const {
  return *message_;
}
inline void BINEnterZoneResponse::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void BINEnterZoneResponse::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void BINEnterZoneResponse::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BINEnterZoneResponse::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  return message_;
}
inline ::std::string* BINEnterZoneResponse::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BINEnterZoneResponse::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool enableDisplayRoomList = 3;
inline bool BINEnterZoneResponse::has_enabledisplayroomlist() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BINEnterZoneResponse::set_has_enabledisplayroomlist() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BINEnterZoneResponse::clear_has_enabledisplayroomlist() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BINEnterZoneResponse::clear_enabledisplayroomlist() {
  enabledisplayroomlist_ = false;
  clear_has_enabledisplayroomlist();
}
inline bool BINEnterZoneResponse::enabledisplayroomlist() const {
  return enabledisplayroomlist_;
}
inline void BINEnterZoneResponse::set_enabledisplayroomlist(bool value) {
  set_has_enabledisplayroomlist();
  enabledisplayroomlist_ = value;
}

// repeated .BINRoomConfig cashRoomConfigs = 4;
inline int BINEnterZoneResponse::cashroomconfigs_size() const {
  return cashroomconfigs_.size();
}
inline void BINEnterZoneResponse::clear_cashroomconfigs() {
  cashroomconfigs_.Clear();
}
inline const ::BINRoomConfig& BINEnterZoneResponse::cashroomconfigs(int index) const {
  return cashroomconfigs_.Get(index);
}
inline ::BINRoomConfig* BINEnterZoneResponse::mutable_cashroomconfigs(int index) {
  return cashroomconfigs_.Mutable(index);
}
inline ::BINRoomConfig* BINEnterZoneResponse::add_cashroomconfigs() {
  return cashroomconfigs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BINRoomConfig >&
BINEnterZoneResponse::cashroomconfigs() const {
  return cashroomconfigs_;
}
inline ::google::protobuf::RepeatedPtrField< ::BINRoomConfig >*
BINEnterZoneResponse::mutable_cashroomconfigs() {
  return &cashroomconfigs_;
}

// repeated .BINRoomConfig goldRoomConfigs = 5;
inline int BINEnterZoneResponse::goldroomconfigs_size() const {
  return goldroomconfigs_.size();
}
inline void BINEnterZoneResponse::clear_goldroomconfigs() {
  goldroomconfigs_.Clear();
}
inline const ::BINRoomConfig& BINEnterZoneResponse::goldroomconfigs(int index) const {
  return goldroomconfigs_.Get(index);
}
inline ::BINRoomConfig* BINEnterZoneResponse::mutable_goldroomconfigs(int index) {
  return goldroomconfigs_.Mutable(index);
}
inline ::BINRoomConfig* BINEnterZoneResponse::add_goldroomconfigs() {
  return goldroomconfigs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BINRoomConfig >&
BINEnterZoneResponse::goldroomconfigs() const {
  return goldroomconfigs_;
}
inline ::google::protobuf::RepeatedPtrField< ::BINRoomConfig >*
BINEnterZoneResponse::mutable_goldroomconfigs() {
  return &goldroomconfigs_;
}

// -------------------------------------------------------------------

// BINExitZoneRequest

// required int32 zoneId = 1;
inline bool BINExitZoneRequest::has_zoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BINExitZoneRequest::set_has_zoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BINExitZoneRequest::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BINExitZoneRequest::clear_zoneid() {
  zoneid_ = 0;
  clear_has_zoneid();
}
inline ::google::protobuf::int32 BINExitZoneRequest::zoneid() const {
  return zoneid_;
}
inline void BINExitZoneRequest::set_zoneid(::google::protobuf::int32 value) {
  set_has_zoneid();
  zoneid_ = value;
}

// -------------------------------------------------------------------

// BINExitZoneResponse

// required bool responseCode = 1;
inline bool BINExitZoneResponse::has_responsecode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BINExitZoneResponse::set_has_responsecode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BINExitZoneResponse::clear_has_responsecode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BINExitZoneResponse::clear_responsecode() {
  responsecode_ = false;
  clear_has_responsecode();
}
inline bool BINExitZoneResponse::responsecode() const {
  return responsecode_;
}
inline void BINExitZoneResponse::set_responsecode(bool value) {
  set_has_responsecode();
  responsecode_ = value;
}

// optional string message = 2;
inline bool BINExitZoneResponse::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BINExitZoneResponse::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BINExitZoneResponse::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BINExitZoneResponse::clear_message() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& BINExitZoneResponse::message() const {
  return *message_;
}
inline void BINExitZoneResponse::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void BINExitZoneResponse::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void BINExitZoneResponse::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BINExitZoneResponse::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  return message_;
}
inline ::std::string* BINExitZoneResponse::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BINExitZoneResponse::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_enter_5fzone_2eproto__INCLUDED
