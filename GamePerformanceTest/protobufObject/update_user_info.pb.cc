// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: update_user_info.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "update_user_info.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* BINEditingInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BINEditingInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* BINUpdateUserInfoRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BINUpdateUserInfoRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* BINUpdateUserInfoResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BINUpdateUserInfoResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_update_5fuser_5finfo_2eproto() {
  protobuf_AddDesc_update_5fuser_5finfo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "update_user_info.proto");
  GOOGLE_CHECK(file != NULL);
  BINEditingInfo_descriptor_ = file->message_type(0);
  static const int BINEditingInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINEditingInfo, infofield_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINEditingInfo, oldvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINEditingInfo, newvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINEditingInfo, confirmvalue_),
  };
  BINEditingInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BINEditingInfo_descriptor_,
      BINEditingInfo::default_instance_,
      BINEditingInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINEditingInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINEditingInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BINEditingInfo));
  BINUpdateUserInfoRequest_descriptor_ = file->message_type(1);
  static const int BINUpdateUserInfoRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINUpdateUserInfoRequest, userinfos_),
  };
  BINUpdateUserInfoRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BINUpdateUserInfoRequest_descriptor_,
      BINUpdateUserInfoRequest::default_instance_,
      BINUpdateUserInfoRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINUpdateUserInfoRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINUpdateUserInfoRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BINUpdateUserInfoRequest));
  BINUpdateUserInfoResponse_descriptor_ = file->message_type(2);
  static const int BINUpdateUserInfoResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINUpdateUserInfoResponse, responsecode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINUpdateUserInfoResponse, message_),
  };
  BINUpdateUserInfoResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BINUpdateUserInfoResponse_descriptor_,
      BINUpdateUserInfoResponse::default_instance_,
      BINUpdateUserInfoResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINUpdateUserInfoResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINUpdateUserInfoResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BINUpdateUserInfoResponse));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_update_5fuser_5finfo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BINEditingInfo_descriptor_, &BINEditingInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BINUpdateUserInfoRequest_descriptor_, &BINUpdateUserInfoRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BINUpdateUserInfoResponse_descriptor_, &BINUpdateUserInfoResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_update_5fuser_5finfo_2eproto() {
  delete BINEditingInfo::default_instance_;
  delete BINEditingInfo_reflection_;
  delete BINUpdateUserInfoRequest::default_instance_;
  delete BINUpdateUserInfoRequest_reflection_;
  delete BINUpdateUserInfoResponse::default_instance_;
  delete BINUpdateUserInfoResponse_reflection_;
}

void protobuf_AddDesc_update_5fuser_5finfo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026update_user_info.proto\"]\n\016BINEditingIn"
    "fo\022\021\n\tinfoField\030\001 \002(\005\022\020\n\010oldValue\030\002 \001(\t\022"
    "\020\n\010newValue\030\003 \002(\t\022\024\n\014confirmValue\030\004 \001(\t\""
    ">\n\030BINUpdateUserInfoRequest\022\"\n\tuserInfos"
    "\030\001 \003(\0132\017.BINEditingInfo\"B\n\031BINUpdateUser"
    "InfoResponse\022\024\n\014responseCode\030\001 \002(\010\022\017\n\007me"
    "ssage\030\002 \001(\tB\036\n\034com.mi.game.network.data."
    "bin", 283);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "update_user_info.proto", &protobuf_RegisterTypes);
  BINEditingInfo::default_instance_ = new BINEditingInfo();
  BINUpdateUserInfoRequest::default_instance_ = new BINUpdateUserInfoRequest();
  BINUpdateUserInfoResponse::default_instance_ = new BINUpdateUserInfoResponse();
  BINEditingInfo::default_instance_->InitAsDefaultInstance();
  BINUpdateUserInfoRequest::default_instance_->InitAsDefaultInstance();
  BINUpdateUserInfoResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_update_5fuser_5finfo_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_update_5fuser_5finfo_2eproto {
  StaticDescriptorInitializer_update_5fuser_5finfo_2eproto() {
    protobuf_AddDesc_update_5fuser_5finfo_2eproto();
  }
} static_descriptor_initializer_update_5fuser_5finfo_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int BINEditingInfo::kInfoFieldFieldNumber;
const int BINEditingInfo::kOldValueFieldNumber;
const int BINEditingInfo::kNewValueFieldNumber;
const int BINEditingInfo::kConfirmValueFieldNumber;
#endif  // !_MSC_VER

BINEditingInfo::BINEditingInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BINEditingInfo::InitAsDefaultInstance() {
}

BINEditingInfo::BINEditingInfo(const BINEditingInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BINEditingInfo::SharedCtor() {
  _cached_size_ = 0;
  infofield_ = 0;
  oldvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  newvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  confirmvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BINEditingInfo::~BINEditingInfo() {
  SharedDtor();
}

void BINEditingInfo::SharedDtor() {
  if (oldvalue_ != &::google::protobuf::internal::kEmptyString) {
    delete oldvalue_;
  }
  if (newvalue_ != &::google::protobuf::internal::kEmptyString) {
    delete newvalue_;
  }
  if (confirmvalue_ != &::google::protobuf::internal::kEmptyString) {
    delete confirmvalue_;
  }
  if (this != default_instance_) {
  }
}

void BINEditingInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BINEditingInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BINEditingInfo_descriptor_;
}

const BINEditingInfo& BINEditingInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_update_5fuser_5finfo_2eproto();
  return *default_instance_;
}

BINEditingInfo* BINEditingInfo::default_instance_ = NULL;

BINEditingInfo* BINEditingInfo::New() const {
  return new BINEditingInfo;
}

void BINEditingInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    infofield_ = 0;
    if (has_oldvalue()) {
      if (oldvalue_ != &::google::protobuf::internal::kEmptyString) {
        oldvalue_->clear();
      }
    }
    if (has_newvalue()) {
      if (newvalue_ != &::google::protobuf::internal::kEmptyString) {
        newvalue_->clear();
      }
    }
    if (has_confirmvalue()) {
      if (confirmvalue_ != &::google::protobuf::internal::kEmptyString) {
        confirmvalue_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BINEditingInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 infoField = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &infofield_)));
          set_has_infofield();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_oldValue;
        break;
      }

      // optional string oldValue = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_oldValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oldvalue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->oldvalue().data(), this->oldvalue().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_newValue;
        break;
      }

      // required string newValue = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_newValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_newvalue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->newvalue().data(), this->newvalue().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_confirmValue;
        break;
      }

      // optional string confirmValue = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_confirmValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_confirmvalue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->confirmvalue().data(), this->confirmvalue().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BINEditingInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 infoField = 1;
  if (has_infofield()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->infofield(), output);
  }

  // optional string oldValue = 2;
  if (has_oldvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->oldvalue().data(), this->oldvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->oldvalue(), output);
  }

  // required string newValue = 3;
  if (has_newvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->newvalue().data(), this->newvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->newvalue(), output);
  }

  // optional string confirmValue = 4;
  if (has_confirmvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->confirmvalue().data(), this->confirmvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->confirmvalue(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BINEditingInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 infoField = 1;
  if (has_infofield()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->infofield(), target);
  }

  // optional string oldValue = 2;
  if (has_oldvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->oldvalue().data(), this->oldvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->oldvalue(), target);
  }

  // required string newValue = 3;
  if (has_newvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->newvalue().data(), this->newvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->newvalue(), target);
  }

  // optional string confirmValue = 4;
  if (has_confirmvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->confirmvalue().data(), this->confirmvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->confirmvalue(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BINEditingInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 infoField = 1;
    if (has_infofield()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->infofield());
    }

    // optional string oldValue = 2;
    if (has_oldvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->oldvalue());
    }

    // required string newValue = 3;
    if (has_newvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->newvalue());
    }

    // optional string confirmValue = 4;
    if (has_confirmvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->confirmvalue());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BINEditingInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BINEditingInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BINEditingInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BINEditingInfo::MergeFrom(const BINEditingInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_infofield()) {
      set_infofield(from.infofield());
    }
    if (from.has_oldvalue()) {
      set_oldvalue(from.oldvalue());
    }
    if (from.has_newvalue()) {
      set_newvalue(from.newvalue());
    }
    if (from.has_confirmvalue()) {
      set_confirmvalue(from.confirmvalue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BINEditingInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BINEditingInfo::CopyFrom(const BINEditingInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BINEditingInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;

  return true;
}

void BINEditingInfo::Swap(BINEditingInfo* other) {
  if (other != this) {
    std::swap(infofield_, other->infofield_);
    std::swap(oldvalue_, other->oldvalue_);
    std::swap(newvalue_, other->newvalue_);
    std::swap(confirmvalue_, other->confirmvalue_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BINEditingInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BINEditingInfo_descriptor_;
  metadata.reflection = BINEditingInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BINUpdateUserInfoRequest::kUserInfosFieldNumber;
#endif  // !_MSC_VER

BINUpdateUserInfoRequest::BINUpdateUserInfoRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BINUpdateUserInfoRequest::InitAsDefaultInstance() {
}

BINUpdateUserInfoRequest::BINUpdateUserInfoRequest(const BINUpdateUserInfoRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BINUpdateUserInfoRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BINUpdateUserInfoRequest::~BINUpdateUserInfoRequest() {
  SharedDtor();
}

void BINUpdateUserInfoRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BINUpdateUserInfoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BINUpdateUserInfoRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BINUpdateUserInfoRequest_descriptor_;
}

const BINUpdateUserInfoRequest& BINUpdateUserInfoRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_update_5fuser_5finfo_2eproto();
  return *default_instance_;
}

BINUpdateUserInfoRequest* BINUpdateUserInfoRequest::default_instance_ = NULL;

BINUpdateUserInfoRequest* BINUpdateUserInfoRequest::New() const {
  return new BINUpdateUserInfoRequest;
}

void BINUpdateUserInfoRequest::Clear() {
  userinfos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BINUpdateUserInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .BINEditingInfo userInfos = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_userInfos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_userinfos()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_userInfos;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BINUpdateUserInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .BINEditingInfo userInfos = 1;
  for (int i = 0; i < this->userinfos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->userinfos(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BINUpdateUserInfoRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .BINEditingInfo userInfos = 1;
  for (int i = 0; i < this->userinfos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->userinfos(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BINUpdateUserInfoRequest::ByteSize() const {
  int total_size = 0;

  // repeated .BINEditingInfo userInfos = 1;
  total_size += 1 * this->userinfos_size();
  for (int i = 0; i < this->userinfos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->userinfos(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BINUpdateUserInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BINUpdateUserInfoRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BINUpdateUserInfoRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BINUpdateUserInfoRequest::MergeFrom(const BINUpdateUserInfoRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  userinfos_.MergeFrom(from.userinfos_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BINUpdateUserInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BINUpdateUserInfoRequest::CopyFrom(const BINUpdateUserInfoRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BINUpdateUserInfoRequest::IsInitialized() const {

  for (int i = 0; i < userinfos_size(); i++) {
    if (!this->userinfos(i).IsInitialized()) return false;
  }
  return true;
}

void BINUpdateUserInfoRequest::Swap(BINUpdateUserInfoRequest* other) {
  if (other != this) {
    userinfos_.Swap(&other->userinfos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BINUpdateUserInfoRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BINUpdateUserInfoRequest_descriptor_;
  metadata.reflection = BINUpdateUserInfoRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BINUpdateUserInfoResponse::kResponseCodeFieldNumber;
const int BINUpdateUserInfoResponse::kMessageFieldNumber;
#endif  // !_MSC_VER

BINUpdateUserInfoResponse::BINUpdateUserInfoResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BINUpdateUserInfoResponse::InitAsDefaultInstance() {
}

BINUpdateUserInfoResponse::BINUpdateUserInfoResponse(const BINUpdateUserInfoResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BINUpdateUserInfoResponse::SharedCtor() {
  _cached_size_ = 0;
  responsecode_ = false;
  message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BINUpdateUserInfoResponse::~BINUpdateUserInfoResponse() {
  SharedDtor();
}

void BINUpdateUserInfoResponse::SharedDtor() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (this != default_instance_) {
  }
}

void BINUpdateUserInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BINUpdateUserInfoResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BINUpdateUserInfoResponse_descriptor_;
}

const BINUpdateUserInfoResponse& BINUpdateUserInfoResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_update_5fuser_5finfo_2eproto();
  return *default_instance_;
}

BINUpdateUserInfoResponse* BINUpdateUserInfoResponse::default_instance_ = NULL;

BINUpdateUserInfoResponse* BINUpdateUserInfoResponse::New() const {
  return new BINUpdateUserInfoResponse;
}

void BINUpdateUserInfoResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    responsecode_ = false;
    if (has_message()) {
      if (message_ != &::google::protobuf::internal::kEmptyString) {
        message_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BINUpdateUserInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool responseCode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &responsecode_)));
          set_has_responsecode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_message;
        break;
      }

      // optional string message = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BINUpdateUserInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bool responseCode = 1;
  if (has_responsecode()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->responsecode(), output);
  }

  // optional string message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->message(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BINUpdateUserInfoResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool responseCode = 1;
  if (has_responsecode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->responsecode(), target);
  }

  // optional string message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BINUpdateUserInfoResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool responseCode = 1;
    if (has_responsecode()) {
      total_size += 1 + 1;
    }

    // optional string message = 2;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BINUpdateUserInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BINUpdateUserInfoResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BINUpdateUserInfoResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BINUpdateUserInfoResponse::MergeFrom(const BINUpdateUserInfoResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_responsecode()) {
      set_responsecode(from.responsecode());
    }
    if (from.has_message()) {
      set_message(from.message());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BINUpdateUserInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BINUpdateUserInfoResponse::CopyFrom(const BINUpdateUserInfoResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BINUpdateUserInfoResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void BINUpdateUserInfoResponse::Swap(BINUpdateUserInfoResponse* other) {
  if (other != this) {
    std::swap(responsecode_, other->responsecode_);
    std::swap(message_, other->message_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BINUpdateUserInfoResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BINUpdateUserInfoResponse_descriptor_;
  metadata.reflection = BINUpdateUserInfoResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
