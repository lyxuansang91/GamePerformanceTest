// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ping.proto

#ifndef PROTOBUF_ping_2eproto__INCLUDED
#define PROTOBUF_ping_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ping_2eproto();
void protobuf_AssignDesc_ping_2eproto();
void protobuf_ShutdownFile_ping_2eproto();

class BINPingRequest;
class BINPingResponse;

// ===================================================================

class BINPingRequest : public ::google::protobuf::Message {
 public:
  BINPingRequest();
  virtual ~BINPingRequest();

  BINPingRequest(const BINPingRequest& from);

  inline BINPingRequest& operator=(const BINPingRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BINPingRequest& default_instance();

  void Swap(BINPingRequest* other);

  // implements Message ----------------------------------------------

  BINPingRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BINPingRequest& from);
  void MergeFrom(const BINPingRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 disconectTime = 1;
  inline bool has_disconecttime() const;
  inline void clear_disconecttime();
  static const int kDisconectTimeFieldNumber = 1;
  inline ::google::protobuf::int32 disconecttime() const;
  inline void set_disconecttime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BINPingRequest)
 private:
  inline void set_has_disconecttime();
  inline void clear_has_disconecttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 disconecttime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ping_2eproto();
  friend void protobuf_AssignDesc_ping_2eproto();
  friend void protobuf_ShutdownFile_ping_2eproto();

  void InitAsDefaultInstance();
  static BINPingRequest* default_instance_;
};
// -------------------------------------------------------------------

class BINPingResponse : public ::google::protobuf::Message {
 public:
  BINPingResponse();
  virtual ~BINPingResponse();

  BINPingResponse(const BINPingResponse& from);

  inline BINPingResponse& operator=(const BINPingResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BINPingResponse& default_instance();

  void Swap(BINPingResponse* other);

  // implements Message ----------------------------------------------

  BINPingResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BINPingResponse& from);
  void MergeFrom(const BINPingResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool responseCode = 1;
  inline bool has_responsecode() const;
  inline void clear_responsecode();
  static const int kResponseCodeFieldNumber = 1;
  inline bool responsecode() const;
  inline void set_responsecode(bool value);

  // optional string message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // optional bool disconnect = 3;
  inline bool has_disconnect() const;
  inline void clear_disconnect();
  static const int kDisconnectFieldNumber = 3;
  inline bool disconnect() const;
  inline void set_disconnect(bool value);

  // @@protoc_insertion_point(class_scope:BINPingResponse)
 private:
  inline void set_has_responsecode();
  inline void clear_has_responsecode();
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_disconnect();
  inline void clear_has_disconnect();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* message_;
  bool responsecode_;
  bool disconnect_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ping_2eproto();
  friend void protobuf_AssignDesc_ping_2eproto();
  friend void protobuf_ShutdownFile_ping_2eproto();

  void InitAsDefaultInstance();
  static BINPingResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// BINPingRequest

// optional int32 disconectTime = 1;
inline bool BINPingRequest::has_disconecttime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BINPingRequest::set_has_disconecttime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BINPingRequest::clear_has_disconecttime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BINPingRequest::clear_disconecttime() {
  disconecttime_ = 0;
  clear_has_disconecttime();
}
inline ::google::protobuf::int32 BINPingRequest::disconecttime() const {
  return disconecttime_;
}
inline void BINPingRequest::set_disconecttime(::google::protobuf::int32 value) {
  set_has_disconecttime();
  disconecttime_ = value;
}

// -------------------------------------------------------------------

// BINPingResponse

// required bool responseCode = 1;
inline bool BINPingResponse::has_responsecode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BINPingResponse::set_has_responsecode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BINPingResponse::clear_has_responsecode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BINPingResponse::clear_responsecode() {
  responsecode_ = false;
  clear_has_responsecode();
}
inline bool BINPingResponse::responsecode() const {
  return responsecode_;
}
inline void BINPingResponse::set_responsecode(bool value) {
  set_has_responsecode();
  responsecode_ = value;
}

// optional string message = 2;
inline bool BINPingResponse::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BINPingResponse::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BINPingResponse::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BINPingResponse::clear_message() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& BINPingResponse::message() const {
  return *message_;
}
inline void BINPingResponse::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void BINPingResponse::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void BINPingResponse::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BINPingResponse::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  return message_;
}
inline ::std::string* BINPingResponse::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BINPingResponse::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool disconnect = 3;
inline bool BINPingResponse::has_disconnect() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BINPingResponse::set_has_disconnect() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BINPingResponse::clear_has_disconnect() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BINPingResponse::clear_disconnect() {
  disconnect_ = false;
  clear_has_disconnect();
}
inline bool BINPingResponse::disconnect() const {
  return disconnect_;
}
inline void BINPingResponse::set_disconnect(bool value) {
  set_has_disconnect();
  disconnect_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ping_2eproto__INCLUDED
