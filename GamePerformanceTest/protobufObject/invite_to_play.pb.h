// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: invite_to_play.proto

#ifndef PROTOBUF_invite_5fto_5fplay_2eproto__INCLUDED
#define PROTOBUF_invite_5fto_5fplay_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "filter_room.pb.h"
#include "user_info.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_invite_5fto_5fplay_2eproto();
void protobuf_AssignDesc_invite_5fto_5fplay_2eproto();
void protobuf_ShutdownFile_invite_5fto_5fplay_2eproto();

class BINLookUpUserToInviteRequest;
class BINLookUpUserToInviteResponse;
class BINInviteToRoomRequest;
class BINInviteToRoomResponse;
class BINCancelInvitationRequest;
class BINCancelInvitationResponse;
class BINRelyInvitationRequest;
class BINRelyInvitationResponse;

// ===================================================================

class BINLookUpUserToInviteRequest : public ::google::protobuf::Message {
 public:
  BINLookUpUserToInviteRequest();
  virtual ~BINLookUpUserToInviteRequest();

  BINLookUpUserToInviteRequest(const BINLookUpUserToInviteRequest& from);

  inline BINLookUpUserToInviteRequest& operator=(const BINLookUpUserToInviteRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BINLookUpUserToInviteRequest& default_instance();

  void Swap(BINLookUpUserToInviteRequest* other);

  // implements Message ----------------------------------------------

  BINLookUpUserToInviteRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BINLookUpUserToInviteRequest& from);
  void MergeFrom(const BINLookUpUserToInviteRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roomIndex = 1;
  inline bool has_roomindex() const;
  inline void clear_roomindex();
  static const int kRoomIndexFieldNumber = 1;
  inline ::google::protobuf::int32 roomindex() const;
  inline void set_roomindex(::google::protobuf::int32 value);

  // optional int32 maxResult = 2;
  inline bool has_maxresult() const;
  inline void clear_maxresult();
  static const int kMaxResultFieldNumber = 2;
  inline ::google::protobuf::int32 maxresult() const;
  inline void set_maxresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BINLookUpUserToInviteRequest)
 private:
  inline void set_has_roomindex();
  inline void clear_has_roomindex();
  inline void set_has_maxresult();
  inline void clear_has_maxresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roomindex_;
  ::google::protobuf::int32 maxresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_invite_5fto_5fplay_2eproto();
  friend void protobuf_AssignDesc_invite_5fto_5fplay_2eproto();
  friend void protobuf_ShutdownFile_invite_5fto_5fplay_2eproto();

  void InitAsDefaultInstance();
  static BINLookUpUserToInviteRequest* default_instance_;
};
// -------------------------------------------------------------------

class BINLookUpUserToInviteResponse : public ::google::protobuf::Message {
 public:
  BINLookUpUserToInviteResponse();
  virtual ~BINLookUpUserToInviteResponse();

  BINLookUpUserToInviteResponse(const BINLookUpUserToInviteResponse& from);

  inline BINLookUpUserToInviteResponse& operator=(const BINLookUpUserToInviteResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BINLookUpUserToInviteResponse& default_instance();

  void Swap(BINLookUpUserToInviteResponse* other);

  // implements Message ----------------------------------------------

  BINLookUpUserToInviteResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BINLookUpUserToInviteResponse& from);
  void MergeFrom(const BINLookUpUserToInviteResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool responseCode = 1;
  inline bool has_responsecode() const;
  inline void clear_responsecode();
  static const int kResponseCodeFieldNumber = 1;
  inline bool responsecode() const;
  inline void set_responsecode(bool value);

  // optional string message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // repeated .BINUserInfo suggestUsers = 3;
  inline int suggestusers_size() const;
  inline void clear_suggestusers();
  static const int kSuggestUsersFieldNumber = 3;
  inline const ::BINUserInfo& suggestusers(int index) const;
  inline ::BINUserInfo* mutable_suggestusers(int index);
  inline ::BINUserInfo* add_suggestusers();
  inline const ::google::protobuf::RepeatedPtrField< ::BINUserInfo >&
      suggestusers() const;
  inline ::google::protobuf::RepeatedPtrField< ::BINUserInfo >*
      mutable_suggestusers();

  // @@protoc_insertion_point(class_scope:BINLookUpUserToInviteResponse)
 private:
  inline void set_has_responsecode();
  inline void clear_has_responsecode();
  inline void set_has_message();
  inline void clear_has_message();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* message_;
  ::google::protobuf::RepeatedPtrField< ::BINUserInfo > suggestusers_;
  bool responsecode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_invite_5fto_5fplay_2eproto();
  friend void protobuf_AssignDesc_invite_5fto_5fplay_2eproto();
  friend void protobuf_ShutdownFile_invite_5fto_5fplay_2eproto();

  void InitAsDefaultInstance();
  static BINLookUpUserToInviteResponse* default_instance_;
};
// -------------------------------------------------------------------

class BINInviteToRoomRequest : public ::google::protobuf::Message {
 public:
  BINInviteToRoomRequest();
  virtual ~BINInviteToRoomRequest();

  BINInviteToRoomRequest(const BINInviteToRoomRequest& from);

  inline BINInviteToRoomRequest& operator=(const BINInviteToRoomRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BINInviteToRoomRequest& default_instance();

  void Swap(BINInviteToRoomRequest* other);

  // implements Message ----------------------------------------------

  BINInviteToRoomRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BINInviteToRoomRequest& from);
  void MergeFrom(const BINInviteToRoomRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roomIndex = 1;
  inline bool has_roomindex() const;
  inline void clear_roomindex();
  static const int kRoomIndexFieldNumber = 1;
  inline ::google::protobuf::int32 roomindex() const;
  inline void set_roomindex(::google::protobuf::int32 value);

  // repeated int64 targetUserIds = 2;
  inline int targetuserids_size() const;
  inline void clear_targetuserids();
  static const int kTargetUserIdsFieldNumber = 2;
  inline ::google::protobuf::int64 targetuserids(int index) const;
  inline void set_targetuserids(int index, ::google::protobuf::int64 value);
  inline void add_targetuserids(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      targetuserids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_targetuserids();

  // @@protoc_insertion_point(class_scope:BINInviteToRoomRequest)
 private:
  inline void set_has_roomindex();
  inline void clear_has_roomindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > targetuserids_;
  ::google::protobuf::int32 roomindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_invite_5fto_5fplay_2eproto();
  friend void protobuf_AssignDesc_invite_5fto_5fplay_2eproto();
  friend void protobuf_ShutdownFile_invite_5fto_5fplay_2eproto();

  void InitAsDefaultInstance();
  static BINInviteToRoomRequest* default_instance_;
};
// -------------------------------------------------------------------

class BINInviteToRoomResponse : public ::google::protobuf::Message {
 public:
  BINInviteToRoomResponse();
  virtual ~BINInviteToRoomResponse();

  BINInviteToRoomResponse(const BINInviteToRoomResponse& from);

  inline BINInviteToRoomResponse& operator=(const BINInviteToRoomResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BINInviteToRoomResponse& default_instance();

  void Swap(BINInviteToRoomResponse* other);

  // implements Message ----------------------------------------------

  BINInviteToRoomResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BINInviteToRoomResponse& from);
  void MergeFrom(const BINInviteToRoomResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool responseCode = 1;
  inline bool has_responsecode() const;
  inline void clear_responsecode();
  static const int kResponseCodeFieldNumber = 1;
  inline bool responsecode() const;
  inline void set_responsecode(bool value);

  // optional string message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // optional int64 inviterUserId = 3;
  inline bool has_inviteruserid() const;
  inline void clear_inviteruserid();
  static const int kInviterUserIdFieldNumber = 3;
  inline ::google::protobuf::int64 inviteruserid() const;
  inline void set_inviteruserid(::google::protobuf::int64 value);

  // optional string inviterUserName = 4;
  inline bool has_inviterusername() const;
  inline void clear_inviterusername();
  static const int kInviterUserNameFieldNumber = 4;
  inline const ::std::string& inviterusername() const;
  inline void set_inviterusername(const ::std::string& value);
  inline void set_inviterusername(const char* value);
  inline void set_inviterusername(const char* value, size_t size);
  inline ::std::string* mutable_inviterusername();
  inline ::std::string* release_inviterusername();
  inline void set_allocated_inviterusername(::std::string* inviterusername);

  // optional .BINRoomPlay roomPlay = 5;
  inline bool has_roomplay() const;
  inline void clear_roomplay();
  static const int kRoomPlayFieldNumber = 5;
  inline const ::BINRoomPlay& roomplay() const;
  inline ::BINRoomPlay* mutable_roomplay();
  inline ::BINRoomPlay* release_roomplay();
  inline void set_allocated_roomplay(::BINRoomPlay* roomplay);

  // @@protoc_insertion_point(class_scope:BINInviteToRoomResponse)
 private:
  inline void set_has_responsecode();
  inline void clear_has_responsecode();
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_inviteruserid();
  inline void clear_has_inviteruserid();
  inline void set_has_inviterusername();
  inline void clear_has_inviterusername();
  inline void set_has_roomplay();
  inline void clear_has_roomplay();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* message_;
  ::google::protobuf::int64 inviteruserid_;
  ::std::string* inviterusername_;
  ::BINRoomPlay* roomplay_;
  bool responsecode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_invite_5fto_5fplay_2eproto();
  friend void protobuf_AssignDesc_invite_5fto_5fplay_2eproto();
  friend void protobuf_ShutdownFile_invite_5fto_5fplay_2eproto();

  void InitAsDefaultInstance();
  static BINInviteToRoomResponse* default_instance_;
};
// -------------------------------------------------------------------

class BINCancelInvitationRequest : public ::google::protobuf::Message {
 public:
  BINCancelInvitationRequest();
  virtual ~BINCancelInvitationRequest();

  BINCancelInvitationRequest(const BINCancelInvitationRequest& from);

  inline BINCancelInvitationRequest& operator=(const BINCancelInvitationRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BINCancelInvitationRequest& default_instance();

  void Swap(BINCancelInvitationRequest* other);

  // implements Message ----------------------------------------------

  BINCancelInvitationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BINCancelInvitationRequest& from);
  void MergeFrom(const BINCancelInvitationRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roomIndex = 1;
  inline bool has_roomindex() const;
  inline void clear_roomindex();
  static const int kRoomIndexFieldNumber = 1;
  inline ::google::protobuf::int32 roomindex() const;
  inline void set_roomindex(::google::protobuf::int32 value);

  // optional int64 targetUserId = 2;
  inline bool has_targetuserid() const;
  inline void clear_targetuserid();
  static const int kTargetUserIdFieldNumber = 2;
  inline ::google::protobuf::int64 targetuserid() const;
  inline void set_targetuserid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:BINCancelInvitationRequest)
 private:
  inline void set_has_roomindex();
  inline void clear_has_roomindex();
  inline void set_has_targetuserid();
  inline void clear_has_targetuserid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 targetuserid_;
  ::google::protobuf::int32 roomindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_invite_5fto_5fplay_2eproto();
  friend void protobuf_AssignDesc_invite_5fto_5fplay_2eproto();
  friend void protobuf_ShutdownFile_invite_5fto_5fplay_2eproto();

  void InitAsDefaultInstance();
  static BINCancelInvitationRequest* default_instance_;
};
// -------------------------------------------------------------------

class BINCancelInvitationResponse : public ::google::protobuf::Message {
 public:
  BINCancelInvitationResponse();
  virtual ~BINCancelInvitationResponse();

  BINCancelInvitationResponse(const BINCancelInvitationResponse& from);

  inline BINCancelInvitationResponse& operator=(const BINCancelInvitationResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BINCancelInvitationResponse& default_instance();

  void Swap(BINCancelInvitationResponse* other);

  // implements Message ----------------------------------------------

  BINCancelInvitationResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BINCancelInvitationResponse& from);
  void MergeFrom(const BINCancelInvitationResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool responseCode = 1;
  inline bool has_responsecode() const;
  inline void clear_responsecode();
  static const int kResponseCodeFieldNumber = 1;
  inline bool responsecode() const;
  inline void set_responsecode(bool value);

  // optional string message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // optional int64 inviterUserId = 3;
  inline bool has_inviteruserid() const;
  inline void clear_inviteruserid();
  static const int kInviterUserIdFieldNumber = 3;
  inline ::google::protobuf::int64 inviteruserid() const;
  inline void set_inviteruserid(::google::protobuf::int64 value);

  // optional int32 roomIndex = 4;
  inline bool has_roomindex() const;
  inline void clear_roomindex();
  static const int kRoomIndexFieldNumber = 4;
  inline ::google::protobuf::int32 roomindex() const;
  inline void set_roomindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BINCancelInvitationResponse)
 private:
  inline void set_has_responsecode();
  inline void clear_has_responsecode();
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_inviteruserid();
  inline void clear_has_inviteruserid();
  inline void set_has_roomindex();
  inline void clear_has_roomindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* message_;
  bool responsecode_;
  ::google::protobuf::int32 roomindex_;
  ::google::protobuf::int64 inviteruserid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_invite_5fto_5fplay_2eproto();
  friend void protobuf_AssignDesc_invite_5fto_5fplay_2eproto();
  friend void protobuf_ShutdownFile_invite_5fto_5fplay_2eproto();

  void InitAsDefaultInstance();
  static BINCancelInvitationResponse* default_instance_;
};
// -------------------------------------------------------------------

class BINRelyInvitationRequest : public ::google::protobuf::Message {
 public:
  BINRelyInvitationRequest();
  virtual ~BINRelyInvitationRequest();

  BINRelyInvitationRequest(const BINRelyInvitationRequest& from);

  inline BINRelyInvitationRequest& operator=(const BINRelyInvitationRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BINRelyInvitationRequest& default_instance();

  void Swap(BINRelyInvitationRequest* other);

  // implements Message ----------------------------------------------

  BINRelyInvitationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BINRelyInvitationRequest& from);
  void MergeFrom(const BINRelyInvitationRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 zoneId = 1;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneIdFieldNumber = 1;
  inline ::google::protobuf::int32 zoneid() const;
  inline void set_zoneid(::google::protobuf::int32 value);

  // required int32 roomIndex = 2;
  inline bool has_roomindex() const;
  inline void clear_roomindex();
  static const int kRoomIndexFieldNumber = 2;
  inline ::google::protobuf::int32 roomindex() const;
  inline void set_roomindex(::google::protobuf::int32 value);

  // optional bool accept = 3;
  inline bool has_accept() const;
  inline void clear_accept();
  static const int kAcceptFieldNumber = 3;
  inline bool accept() const;
  inline void set_accept(bool value);

  // @@protoc_insertion_point(class_scope:BINRelyInvitationRequest)
 private:
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_roomindex();
  inline void clear_has_roomindex();
  inline void set_has_accept();
  inline void clear_has_accept();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 zoneid_;
  ::google::protobuf::int32 roomindex_;
  bool accept_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_invite_5fto_5fplay_2eproto();
  friend void protobuf_AssignDesc_invite_5fto_5fplay_2eproto();
  friend void protobuf_ShutdownFile_invite_5fto_5fplay_2eproto();

  void InitAsDefaultInstance();
  static BINRelyInvitationRequest* default_instance_;
};
// -------------------------------------------------------------------

class BINRelyInvitationResponse : public ::google::protobuf::Message {
 public:
  BINRelyInvitationResponse();
  virtual ~BINRelyInvitationResponse();

  BINRelyInvitationResponse(const BINRelyInvitationResponse& from);

  inline BINRelyInvitationResponse& operator=(const BINRelyInvitationResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BINRelyInvitationResponse& default_instance();

  void Swap(BINRelyInvitationResponse* other);

  // implements Message ----------------------------------------------

  BINRelyInvitationResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BINRelyInvitationResponse& from);
  void MergeFrom(const BINRelyInvitationResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool responseCode = 1;
  inline bool has_responsecode() const;
  inline void clear_responsecode();
  static const int kResponseCodeFieldNumber = 1;
  inline bool responsecode() const;
  inline void set_responsecode(bool value);

  // optional string message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // optional bool accept = 3;
  inline bool has_accept() const;
  inline void clear_accept();
  static const int kAcceptFieldNumber = 3;
  inline bool accept() const;
  inline void set_accept(bool value);

  // @@protoc_insertion_point(class_scope:BINRelyInvitationResponse)
 private:
  inline void set_has_responsecode();
  inline void clear_has_responsecode();
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_accept();
  inline void clear_has_accept();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* message_;
  bool responsecode_;
  bool accept_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_invite_5fto_5fplay_2eproto();
  friend void protobuf_AssignDesc_invite_5fto_5fplay_2eproto();
  friend void protobuf_ShutdownFile_invite_5fto_5fplay_2eproto();

  void InitAsDefaultInstance();
  static BINRelyInvitationResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// BINLookUpUserToInviteRequest

// required int32 roomIndex = 1;
inline bool BINLookUpUserToInviteRequest::has_roomindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BINLookUpUserToInviteRequest::set_has_roomindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BINLookUpUserToInviteRequest::clear_has_roomindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BINLookUpUserToInviteRequest::clear_roomindex() {
  roomindex_ = 0;
  clear_has_roomindex();
}
inline ::google::protobuf::int32 BINLookUpUserToInviteRequest::roomindex() const {
  return roomindex_;
}
inline void BINLookUpUserToInviteRequest::set_roomindex(::google::protobuf::int32 value) {
  set_has_roomindex();
  roomindex_ = value;
}

// optional int32 maxResult = 2;
inline bool BINLookUpUserToInviteRequest::has_maxresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BINLookUpUserToInviteRequest::set_has_maxresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BINLookUpUserToInviteRequest::clear_has_maxresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BINLookUpUserToInviteRequest::clear_maxresult() {
  maxresult_ = 0;
  clear_has_maxresult();
}
inline ::google::protobuf::int32 BINLookUpUserToInviteRequest::maxresult() const {
  return maxresult_;
}
inline void BINLookUpUserToInviteRequest::set_maxresult(::google::protobuf::int32 value) {
  set_has_maxresult();
  maxresult_ = value;
}

// -------------------------------------------------------------------

// BINLookUpUserToInviteResponse

// required bool responseCode = 1;
inline bool BINLookUpUserToInviteResponse::has_responsecode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BINLookUpUserToInviteResponse::set_has_responsecode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BINLookUpUserToInviteResponse::clear_has_responsecode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BINLookUpUserToInviteResponse::clear_responsecode() {
  responsecode_ = false;
  clear_has_responsecode();
}
inline bool BINLookUpUserToInviteResponse::responsecode() const {
  return responsecode_;
}
inline void BINLookUpUserToInviteResponse::set_responsecode(bool value) {
  set_has_responsecode();
  responsecode_ = value;
}

// optional string message = 2;
inline bool BINLookUpUserToInviteResponse::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BINLookUpUserToInviteResponse::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BINLookUpUserToInviteResponse::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BINLookUpUserToInviteResponse::clear_message() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& BINLookUpUserToInviteResponse::message() const {
  return *message_;
}
inline void BINLookUpUserToInviteResponse::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void BINLookUpUserToInviteResponse::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void BINLookUpUserToInviteResponse::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BINLookUpUserToInviteResponse::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  return message_;
}
inline ::std::string* BINLookUpUserToInviteResponse::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BINLookUpUserToInviteResponse::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .BINUserInfo suggestUsers = 3;
inline int BINLookUpUserToInviteResponse::suggestusers_size() const {
  return suggestusers_.size();
}
inline void BINLookUpUserToInviteResponse::clear_suggestusers() {
  suggestusers_.Clear();
}
inline const ::BINUserInfo& BINLookUpUserToInviteResponse::suggestusers(int index) const {
  return suggestusers_.Get(index);
}
inline ::BINUserInfo* BINLookUpUserToInviteResponse::mutable_suggestusers(int index) {
  return suggestusers_.Mutable(index);
}
inline ::BINUserInfo* BINLookUpUserToInviteResponse::add_suggestusers() {
  return suggestusers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BINUserInfo >&
BINLookUpUserToInviteResponse::suggestusers() const {
  return suggestusers_;
}
inline ::google::protobuf::RepeatedPtrField< ::BINUserInfo >*
BINLookUpUserToInviteResponse::mutable_suggestusers() {
  return &suggestusers_;
}

// -------------------------------------------------------------------

// BINInviteToRoomRequest

// required int32 roomIndex = 1;
inline bool BINInviteToRoomRequest::has_roomindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BINInviteToRoomRequest::set_has_roomindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BINInviteToRoomRequest::clear_has_roomindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BINInviteToRoomRequest::clear_roomindex() {
  roomindex_ = 0;
  clear_has_roomindex();
}
inline ::google::protobuf::int32 BINInviteToRoomRequest::roomindex() const {
  return roomindex_;
}
inline void BINInviteToRoomRequest::set_roomindex(::google::protobuf::int32 value) {
  set_has_roomindex();
  roomindex_ = value;
}

// repeated int64 targetUserIds = 2;
inline int BINInviteToRoomRequest::targetuserids_size() const {
  return targetuserids_.size();
}
inline void BINInviteToRoomRequest::clear_targetuserids() {
  targetuserids_.Clear();
}
inline ::google::protobuf::int64 BINInviteToRoomRequest::targetuserids(int index) const {
  return targetuserids_.Get(index);
}
inline void BINInviteToRoomRequest::set_targetuserids(int index, ::google::protobuf::int64 value) {
  targetuserids_.Set(index, value);
}
inline void BINInviteToRoomRequest::add_targetuserids(::google::protobuf::int64 value) {
  targetuserids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
BINInviteToRoomRequest::targetuserids() const {
  return targetuserids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
BINInviteToRoomRequest::mutable_targetuserids() {
  return &targetuserids_;
}

// -------------------------------------------------------------------

// BINInviteToRoomResponse

// required bool responseCode = 1;
inline bool BINInviteToRoomResponse::has_responsecode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BINInviteToRoomResponse::set_has_responsecode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BINInviteToRoomResponse::clear_has_responsecode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BINInviteToRoomResponse::clear_responsecode() {
  responsecode_ = false;
  clear_has_responsecode();
}
inline bool BINInviteToRoomResponse::responsecode() const {
  return responsecode_;
}
inline void BINInviteToRoomResponse::set_responsecode(bool value) {
  set_has_responsecode();
  responsecode_ = value;
}

// optional string message = 2;
inline bool BINInviteToRoomResponse::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BINInviteToRoomResponse::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BINInviteToRoomResponse::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BINInviteToRoomResponse::clear_message() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& BINInviteToRoomResponse::message() const {
  return *message_;
}
inline void BINInviteToRoomResponse::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void BINInviteToRoomResponse::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void BINInviteToRoomResponse::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BINInviteToRoomResponse::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  return message_;
}
inline ::std::string* BINInviteToRoomResponse::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BINInviteToRoomResponse::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 inviterUserId = 3;
inline bool BINInviteToRoomResponse::has_inviteruserid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BINInviteToRoomResponse::set_has_inviteruserid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BINInviteToRoomResponse::clear_has_inviteruserid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BINInviteToRoomResponse::clear_inviteruserid() {
  inviteruserid_ = GOOGLE_LONGLONG(0);
  clear_has_inviteruserid();
}
inline ::google::protobuf::int64 BINInviteToRoomResponse::inviteruserid() const {
  return inviteruserid_;
}
inline void BINInviteToRoomResponse::set_inviteruserid(::google::protobuf::int64 value) {
  set_has_inviteruserid();
  inviteruserid_ = value;
}

// optional string inviterUserName = 4;
inline bool BINInviteToRoomResponse::has_inviterusername() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BINInviteToRoomResponse::set_has_inviterusername() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BINInviteToRoomResponse::clear_has_inviterusername() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BINInviteToRoomResponse::clear_inviterusername() {
  if (inviterusername_ != &::google::protobuf::internal::kEmptyString) {
    inviterusername_->clear();
  }
  clear_has_inviterusername();
}
inline const ::std::string& BINInviteToRoomResponse::inviterusername() const {
  return *inviterusername_;
}
inline void BINInviteToRoomResponse::set_inviterusername(const ::std::string& value) {
  set_has_inviterusername();
  if (inviterusername_ == &::google::protobuf::internal::kEmptyString) {
    inviterusername_ = new ::std::string;
  }
  inviterusername_->assign(value);
}
inline void BINInviteToRoomResponse::set_inviterusername(const char* value) {
  set_has_inviterusername();
  if (inviterusername_ == &::google::protobuf::internal::kEmptyString) {
    inviterusername_ = new ::std::string;
  }
  inviterusername_->assign(value);
}
inline void BINInviteToRoomResponse::set_inviterusername(const char* value, size_t size) {
  set_has_inviterusername();
  if (inviterusername_ == &::google::protobuf::internal::kEmptyString) {
    inviterusername_ = new ::std::string;
  }
  inviterusername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BINInviteToRoomResponse::mutable_inviterusername() {
  set_has_inviterusername();
  if (inviterusername_ == &::google::protobuf::internal::kEmptyString) {
    inviterusername_ = new ::std::string;
  }
  return inviterusername_;
}
inline ::std::string* BINInviteToRoomResponse::release_inviterusername() {
  clear_has_inviterusername();
  if (inviterusername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = inviterusername_;
    inviterusername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BINInviteToRoomResponse::set_allocated_inviterusername(::std::string* inviterusername) {
  if (inviterusername_ != &::google::protobuf::internal::kEmptyString) {
    delete inviterusername_;
  }
  if (inviterusername) {
    set_has_inviterusername();
    inviterusername_ = inviterusername;
  } else {
    clear_has_inviterusername();
    inviterusername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .BINRoomPlay roomPlay = 5;
inline bool BINInviteToRoomResponse::has_roomplay() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BINInviteToRoomResponse::set_has_roomplay() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BINInviteToRoomResponse::clear_has_roomplay() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BINInviteToRoomResponse::clear_roomplay() {
  if (roomplay_ != NULL) roomplay_->::BINRoomPlay::Clear();
  clear_has_roomplay();
}
inline const ::BINRoomPlay& BINInviteToRoomResponse::roomplay() const {
  return roomplay_ != NULL ? *roomplay_ : *default_instance_->roomplay_;
}
inline ::BINRoomPlay* BINInviteToRoomResponse::mutable_roomplay() {
  set_has_roomplay();
  if (roomplay_ == NULL) roomplay_ = new ::BINRoomPlay;
  return roomplay_;
}
inline ::BINRoomPlay* BINInviteToRoomResponse::release_roomplay() {
  clear_has_roomplay();
  ::BINRoomPlay* temp = roomplay_;
  roomplay_ = NULL;
  return temp;
}
inline void BINInviteToRoomResponse::set_allocated_roomplay(::BINRoomPlay* roomplay) {
  delete roomplay_;
  roomplay_ = roomplay;
  if (roomplay) {
    set_has_roomplay();
  } else {
    clear_has_roomplay();
  }
}

// -------------------------------------------------------------------

// BINCancelInvitationRequest

// required int32 roomIndex = 1;
inline bool BINCancelInvitationRequest::has_roomindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BINCancelInvitationRequest::set_has_roomindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BINCancelInvitationRequest::clear_has_roomindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BINCancelInvitationRequest::clear_roomindex() {
  roomindex_ = 0;
  clear_has_roomindex();
}
inline ::google::protobuf::int32 BINCancelInvitationRequest::roomindex() const {
  return roomindex_;
}
inline void BINCancelInvitationRequest::set_roomindex(::google::protobuf::int32 value) {
  set_has_roomindex();
  roomindex_ = value;
}

// optional int64 targetUserId = 2;
inline bool BINCancelInvitationRequest::has_targetuserid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BINCancelInvitationRequest::set_has_targetuserid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BINCancelInvitationRequest::clear_has_targetuserid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BINCancelInvitationRequest::clear_targetuserid() {
  targetuserid_ = GOOGLE_LONGLONG(0);
  clear_has_targetuserid();
}
inline ::google::protobuf::int64 BINCancelInvitationRequest::targetuserid() const {
  return targetuserid_;
}
inline void BINCancelInvitationRequest::set_targetuserid(::google::protobuf::int64 value) {
  set_has_targetuserid();
  targetuserid_ = value;
}

// -------------------------------------------------------------------

// BINCancelInvitationResponse

// required bool responseCode = 1;
inline bool BINCancelInvitationResponse::has_responsecode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BINCancelInvitationResponse::set_has_responsecode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BINCancelInvitationResponse::clear_has_responsecode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BINCancelInvitationResponse::clear_responsecode() {
  responsecode_ = false;
  clear_has_responsecode();
}
inline bool BINCancelInvitationResponse::responsecode() const {
  return responsecode_;
}
inline void BINCancelInvitationResponse::set_responsecode(bool value) {
  set_has_responsecode();
  responsecode_ = value;
}

// optional string message = 2;
inline bool BINCancelInvitationResponse::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BINCancelInvitationResponse::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BINCancelInvitationResponse::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BINCancelInvitationResponse::clear_message() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& BINCancelInvitationResponse::message() const {
  return *message_;
}
inline void BINCancelInvitationResponse::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void BINCancelInvitationResponse::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void BINCancelInvitationResponse::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BINCancelInvitationResponse::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  return message_;
}
inline ::std::string* BINCancelInvitationResponse::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BINCancelInvitationResponse::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 inviterUserId = 3;
inline bool BINCancelInvitationResponse::has_inviteruserid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BINCancelInvitationResponse::set_has_inviteruserid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BINCancelInvitationResponse::clear_has_inviteruserid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BINCancelInvitationResponse::clear_inviteruserid() {
  inviteruserid_ = GOOGLE_LONGLONG(0);
  clear_has_inviteruserid();
}
inline ::google::protobuf::int64 BINCancelInvitationResponse::inviteruserid() const {
  return inviteruserid_;
}
inline void BINCancelInvitationResponse::set_inviteruserid(::google::protobuf::int64 value) {
  set_has_inviteruserid();
  inviteruserid_ = value;
}

// optional int32 roomIndex = 4;
inline bool BINCancelInvitationResponse::has_roomindex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BINCancelInvitationResponse::set_has_roomindex() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BINCancelInvitationResponse::clear_has_roomindex() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BINCancelInvitationResponse::clear_roomindex() {
  roomindex_ = 0;
  clear_has_roomindex();
}
inline ::google::protobuf::int32 BINCancelInvitationResponse::roomindex() const {
  return roomindex_;
}
inline void BINCancelInvitationResponse::set_roomindex(::google::protobuf::int32 value) {
  set_has_roomindex();
  roomindex_ = value;
}

// -------------------------------------------------------------------

// BINRelyInvitationRequest

// required int32 zoneId = 1;
inline bool BINRelyInvitationRequest::has_zoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BINRelyInvitationRequest::set_has_zoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BINRelyInvitationRequest::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BINRelyInvitationRequest::clear_zoneid() {
  zoneid_ = 0;
  clear_has_zoneid();
}
inline ::google::protobuf::int32 BINRelyInvitationRequest::zoneid() const {
  return zoneid_;
}
inline void BINRelyInvitationRequest::set_zoneid(::google::protobuf::int32 value) {
  set_has_zoneid();
  zoneid_ = value;
}

// required int32 roomIndex = 2;
inline bool BINRelyInvitationRequest::has_roomindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BINRelyInvitationRequest::set_has_roomindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BINRelyInvitationRequest::clear_has_roomindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BINRelyInvitationRequest::clear_roomindex() {
  roomindex_ = 0;
  clear_has_roomindex();
}
inline ::google::protobuf::int32 BINRelyInvitationRequest::roomindex() const {
  return roomindex_;
}
inline void BINRelyInvitationRequest::set_roomindex(::google::protobuf::int32 value) {
  set_has_roomindex();
  roomindex_ = value;
}

// optional bool accept = 3;
inline bool BINRelyInvitationRequest::has_accept() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BINRelyInvitationRequest::set_has_accept() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BINRelyInvitationRequest::clear_has_accept() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BINRelyInvitationRequest::clear_accept() {
  accept_ = false;
  clear_has_accept();
}
inline bool BINRelyInvitationRequest::accept() const {
  return accept_;
}
inline void BINRelyInvitationRequest::set_accept(bool value) {
  set_has_accept();
  accept_ = value;
}

// -------------------------------------------------------------------

// BINRelyInvitationResponse

// required bool responseCode = 1;
inline bool BINRelyInvitationResponse::has_responsecode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BINRelyInvitationResponse::set_has_responsecode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BINRelyInvitationResponse::clear_has_responsecode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BINRelyInvitationResponse::clear_responsecode() {
  responsecode_ = false;
  clear_has_responsecode();
}
inline bool BINRelyInvitationResponse::responsecode() const {
  return responsecode_;
}
inline void BINRelyInvitationResponse::set_responsecode(bool value) {
  set_has_responsecode();
  responsecode_ = value;
}

// optional string message = 2;
inline bool BINRelyInvitationResponse::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BINRelyInvitationResponse::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BINRelyInvitationResponse::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BINRelyInvitationResponse::clear_message() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& BINRelyInvitationResponse::message() const {
  return *message_;
}
inline void BINRelyInvitationResponse::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void BINRelyInvitationResponse::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void BINRelyInvitationResponse::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BINRelyInvitationResponse::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  return message_;
}
inline ::std::string* BINRelyInvitationResponse::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BINRelyInvitationResponse::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool accept = 3;
inline bool BINRelyInvitationResponse::has_accept() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BINRelyInvitationResponse::set_has_accept() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BINRelyInvitationResponse::clear_has_accept() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BINRelyInvitationResponse::clear_accept() {
  accept_ = false;
  clear_has_accept();
}
inline bool BINRelyInvitationResponse::accept() const {
  return accept_;
}
inline void BINRelyInvitationResponse::set_accept(bool value) {
  set_has_accept();
  accept_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_invite_5fto_5fplay_2eproto__INCLUDED
