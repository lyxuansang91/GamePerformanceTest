// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: update_money.proto

#ifndef PROTOBUF_update_5fmoney_2eproto__INCLUDED
#define PROTOBUF_update_5fmoney_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_update_5fmoney_2eproto();
void protobuf_AssignDesc_update_5fmoney_2eproto();
void protobuf_ShutdownFile_update_5fmoney_2eproto();

class BINMoneyBox;
class BINUpdateMoneyResponse;

// ===================================================================

class BINMoneyBox : public ::google::protobuf::Message {
 public:
  BINMoneyBox();
  virtual ~BINMoneyBox();

  BINMoneyBox(const BINMoneyBox& from);

  inline BINMoneyBox& operator=(const BINMoneyBox& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BINMoneyBox& default_instance();

  void Swap(BINMoneyBox* other);

  // implements Message ----------------------------------------------

  BINMoneyBox* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BINMoneyBox& from);
  void MergeFrom(const BINMoneyBox& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 userId = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::int64 userid() const;
  inline void set_userid(::google::protobuf::int64 value);

  // required bool isCash = 2;
  inline bool has_iscash() const;
  inline void clear_iscash();
  static const int kIsCashFieldNumber = 2;
  inline bool iscash() const;
  inline void set_iscash(bool value);

  // required int64 changeMoney = 3;
  inline bool has_changemoney() const;
  inline void clear_changemoney();
  static const int kChangeMoneyFieldNumber = 3;
  inline ::google::protobuf::int64 changemoney() const;
  inline void set_changemoney(::google::protobuf::int64 value);

  // required int64 currentMoney = 4;
  inline bool has_currentmoney() const;
  inline void clear_currentmoney();
  static const int kCurrentMoneyFieldNumber = 4;
  inline ::google::protobuf::int64 currentmoney() const;
  inline void set_currentmoney(::google::protobuf::int64 value);

  // optional int64 displayChangeMoney = 5;
  inline bool has_displaychangemoney() const;
  inline void clear_displaychangemoney();
  static const int kDisplayChangeMoneyFieldNumber = 5;
  inline ::google::protobuf::int64 displaychangemoney() const;
  inline void set_displaychangemoney(::google::protobuf::int64 value);

  // optional string reason = 6;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 6;
  inline const ::std::string& reason() const;
  inline void set_reason(const ::std::string& value);
  inline void set_reason(const char* value);
  inline void set_reason(const char* value, size_t size);
  inline ::std::string* mutable_reason();
  inline ::std::string* release_reason();
  inline void set_allocated_reason(::std::string* reason);

  // @@protoc_insertion_point(class_scope:BINMoneyBox)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_iscash();
  inline void clear_has_iscash();
  inline void set_has_changemoney();
  inline void clear_has_changemoney();
  inline void set_has_currentmoney();
  inline void clear_has_currentmoney();
  inline void set_has_displaychangemoney();
  inline void clear_has_displaychangemoney();
  inline void set_has_reason();
  inline void clear_has_reason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 userid_;
  ::google::protobuf::int64 changemoney_;
  ::google::protobuf::int64 currentmoney_;
  ::google::protobuf::int64 displaychangemoney_;
  ::std::string* reason_;
  bool iscash_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_update_5fmoney_2eproto();
  friend void protobuf_AssignDesc_update_5fmoney_2eproto();
  friend void protobuf_ShutdownFile_update_5fmoney_2eproto();

  void InitAsDefaultInstance();
  static BINMoneyBox* default_instance_;
};
// -------------------------------------------------------------------

class BINUpdateMoneyResponse : public ::google::protobuf::Message {
 public:
  BINUpdateMoneyResponse();
  virtual ~BINUpdateMoneyResponse();

  BINUpdateMoneyResponse(const BINUpdateMoneyResponse& from);

  inline BINUpdateMoneyResponse& operator=(const BINUpdateMoneyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BINUpdateMoneyResponse& default_instance();

  void Swap(BINUpdateMoneyResponse* other);

  // implements Message ----------------------------------------------

  BINUpdateMoneyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BINUpdateMoneyResponse& from);
  void MergeFrom(const BINUpdateMoneyResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool responseCode = 1;
  inline bool has_responsecode() const;
  inline void clear_responsecode();
  static const int kResponseCodeFieldNumber = 1;
  inline bool responsecode() const;
  inline void set_responsecode(bool value);

  // optional string message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // repeated .BINMoneyBox moneyBoxes = 3;
  inline int moneyboxes_size() const;
  inline void clear_moneyboxes();
  static const int kMoneyBoxesFieldNumber = 3;
  inline const ::BINMoneyBox& moneyboxes(int index) const;
  inline ::BINMoneyBox* mutable_moneyboxes(int index);
  inline ::BINMoneyBox* add_moneyboxes();
  inline const ::google::protobuf::RepeatedPtrField< ::BINMoneyBox >&
      moneyboxes() const;
  inline ::google::protobuf::RepeatedPtrField< ::BINMoneyBox >*
      mutable_moneyboxes();

  // @@protoc_insertion_point(class_scope:BINUpdateMoneyResponse)
 private:
  inline void set_has_responsecode();
  inline void clear_has_responsecode();
  inline void set_has_message();
  inline void clear_has_message();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* message_;
  ::google::protobuf::RepeatedPtrField< ::BINMoneyBox > moneyboxes_;
  bool responsecode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_update_5fmoney_2eproto();
  friend void protobuf_AssignDesc_update_5fmoney_2eproto();
  friend void protobuf_ShutdownFile_update_5fmoney_2eproto();

  void InitAsDefaultInstance();
  static BINUpdateMoneyResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// BINMoneyBox

// required int64 userId = 1;
inline bool BINMoneyBox::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BINMoneyBox::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BINMoneyBox::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BINMoneyBox::clear_userid() {
  userid_ = GOOGLE_LONGLONG(0);
  clear_has_userid();
}
inline ::google::protobuf::int64 BINMoneyBox::userid() const {
  return userid_;
}
inline void BINMoneyBox::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
}

// required bool isCash = 2;
inline bool BINMoneyBox::has_iscash() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BINMoneyBox::set_has_iscash() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BINMoneyBox::clear_has_iscash() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BINMoneyBox::clear_iscash() {
  iscash_ = false;
  clear_has_iscash();
}
inline bool BINMoneyBox::iscash() const {
  return iscash_;
}
inline void BINMoneyBox::set_iscash(bool value) {
  set_has_iscash();
  iscash_ = value;
}

// required int64 changeMoney = 3;
inline bool BINMoneyBox::has_changemoney() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BINMoneyBox::set_has_changemoney() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BINMoneyBox::clear_has_changemoney() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BINMoneyBox::clear_changemoney() {
  changemoney_ = GOOGLE_LONGLONG(0);
  clear_has_changemoney();
}
inline ::google::protobuf::int64 BINMoneyBox::changemoney() const {
  return changemoney_;
}
inline void BINMoneyBox::set_changemoney(::google::protobuf::int64 value) {
  set_has_changemoney();
  changemoney_ = value;
}

// required int64 currentMoney = 4;
inline bool BINMoneyBox::has_currentmoney() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BINMoneyBox::set_has_currentmoney() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BINMoneyBox::clear_has_currentmoney() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BINMoneyBox::clear_currentmoney() {
  currentmoney_ = GOOGLE_LONGLONG(0);
  clear_has_currentmoney();
}
inline ::google::protobuf::int64 BINMoneyBox::currentmoney() const {
  return currentmoney_;
}
inline void BINMoneyBox::set_currentmoney(::google::protobuf::int64 value) {
  set_has_currentmoney();
  currentmoney_ = value;
}

// optional int64 displayChangeMoney = 5;
inline bool BINMoneyBox::has_displaychangemoney() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BINMoneyBox::set_has_displaychangemoney() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BINMoneyBox::clear_has_displaychangemoney() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BINMoneyBox::clear_displaychangemoney() {
  displaychangemoney_ = GOOGLE_LONGLONG(0);
  clear_has_displaychangemoney();
}
inline ::google::protobuf::int64 BINMoneyBox::displaychangemoney() const {
  return displaychangemoney_;
}
inline void BINMoneyBox::set_displaychangemoney(::google::protobuf::int64 value) {
  set_has_displaychangemoney();
  displaychangemoney_ = value;
}

// optional string reason = 6;
inline bool BINMoneyBox::has_reason() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BINMoneyBox::set_has_reason() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BINMoneyBox::clear_has_reason() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BINMoneyBox::clear_reason() {
  if (reason_ != &::google::protobuf::internal::kEmptyString) {
    reason_->clear();
  }
  clear_has_reason();
}
inline const ::std::string& BINMoneyBox::reason() const {
  return *reason_;
}
inline void BINMoneyBox::set_reason(const ::std::string& value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::kEmptyString) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
}
inline void BINMoneyBox::set_reason(const char* value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::kEmptyString) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
}
inline void BINMoneyBox::set_reason(const char* value, size_t size) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::kEmptyString) {
    reason_ = new ::std::string;
  }
  reason_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BINMoneyBox::mutable_reason() {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::kEmptyString) {
    reason_ = new ::std::string;
  }
  return reason_;
}
inline ::std::string* BINMoneyBox::release_reason() {
  clear_has_reason();
  if (reason_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = reason_;
    reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BINMoneyBox::set_allocated_reason(::std::string* reason) {
  if (reason_ != &::google::protobuf::internal::kEmptyString) {
    delete reason_;
  }
  if (reason) {
    set_has_reason();
    reason_ = reason;
  } else {
    clear_has_reason();
    reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// BINUpdateMoneyResponse

// required bool responseCode = 1;
inline bool BINUpdateMoneyResponse::has_responsecode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BINUpdateMoneyResponse::set_has_responsecode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BINUpdateMoneyResponse::clear_has_responsecode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BINUpdateMoneyResponse::clear_responsecode() {
  responsecode_ = false;
  clear_has_responsecode();
}
inline bool BINUpdateMoneyResponse::responsecode() const {
  return responsecode_;
}
inline void BINUpdateMoneyResponse::set_responsecode(bool value) {
  set_has_responsecode();
  responsecode_ = value;
}

// optional string message = 2;
inline bool BINUpdateMoneyResponse::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BINUpdateMoneyResponse::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BINUpdateMoneyResponse::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BINUpdateMoneyResponse::clear_message() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& BINUpdateMoneyResponse::message() const {
  return *message_;
}
inline void BINUpdateMoneyResponse::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void BINUpdateMoneyResponse::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void BINUpdateMoneyResponse::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BINUpdateMoneyResponse::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  return message_;
}
inline ::std::string* BINUpdateMoneyResponse::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BINUpdateMoneyResponse::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .BINMoneyBox moneyBoxes = 3;
inline int BINUpdateMoneyResponse::moneyboxes_size() const {
  return moneyboxes_.size();
}
inline void BINUpdateMoneyResponse::clear_moneyboxes() {
  moneyboxes_.Clear();
}
inline const ::BINMoneyBox& BINUpdateMoneyResponse::moneyboxes(int index) const {
  return moneyboxes_.Get(index);
}
inline ::BINMoneyBox* BINUpdateMoneyResponse::mutable_moneyboxes(int index) {
  return moneyboxes_.Mutable(index);
}
inline ::BINMoneyBox* BINUpdateMoneyResponse::add_moneyboxes() {
  return moneyboxes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BINMoneyBox >&
BINUpdateMoneyResponse::moneyboxes() const {
  return moneyboxes_;
}
inline ::google::protobuf::RepeatedPtrField< ::BINMoneyBox >*
BINUpdateMoneyResponse::mutable_moneyboxes() {
  return &moneyboxes_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_update_5fmoney_2eproto__INCLUDED
