// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: filter_top_user.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "filter_top_user.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* BINFilterTopUserRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BINFilterTopUserRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* BINFilterTopUserResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BINFilterTopUserResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_filter_5ftop_5fuser_2eproto() {
  protobuf_AddDesc_filter_5ftop_5fuser_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "filter_top_user.proto");
  GOOGLE_CHECK(file != NULL);
  BINFilterTopUserRequest_descriptor_ = file->message_type(0);
  static const int BINFilterTopUserRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINFilterTopUserRequest, firstresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINFilterTopUserRequest, maxresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINFilterTopUserRequest, orderbyfield_),
  };
  BINFilterTopUserRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BINFilterTopUserRequest_descriptor_,
      BINFilterTopUserRequest::default_instance_,
      BINFilterTopUserRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINFilterTopUserRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINFilterTopUserRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BINFilterTopUserRequest));
  BINFilterTopUserResponse_descriptor_ = file->message_type(1);
  static const int BINFilterTopUserResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINFilterTopUserResponse, responsecode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINFilterTopUserResponse, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINFilterTopUserResponse, topusers_),
  };
  BINFilterTopUserResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BINFilterTopUserResponse_descriptor_,
      BINFilterTopUserResponse::default_instance_,
      BINFilterTopUserResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINFilterTopUserResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINFilterTopUserResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BINFilterTopUserResponse));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_filter_5ftop_5fuser_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BINFilterTopUserRequest_descriptor_, &BINFilterTopUserRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BINFilterTopUserResponse_descriptor_, &BINFilterTopUserResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_filter_5ftop_5fuser_2eproto() {
  delete BINFilterTopUserRequest::default_instance_;
  delete BINFilterTopUserRequest_reflection_;
  delete BINFilterTopUserResponse::default_instance_;
  delete BINFilterTopUserResponse_reflection_;
}

void protobuf_AddDesc_filter_5ftop_5fuser_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_user_5finfo_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025filter_top_user.proto\032\017user_info.proto"
    "\"W\n\027BINFilterTopUserRequest\022\023\n\013firstResu"
    "lt\030\001 \002(\005\022\021\n\tmaxResult\030\002 \002(\005\022\024\n\014orderByFi"
    "eld\030\003 \001(\005\"a\n\030BINFilterTopUserResponse\022\024\n"
    "\014responseCode\030\001 \002(\010\022\017\n\007message\030\002 \001(\t\022\036\n\010"
    "topUsers\030\003 \003(\0132\014.BINUserInfoB\036\n\034com.mi.g"
    "ame.network.data.bin", 260);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "filter_top_user.proto", &protobuf_RegisterTypes);
  BINFilterTopUserRequest::default_instance_ = new BINFilterTopUserRequest();
  BINFilterTopUserResponse::default_instance_ = new BINFilterTopUserResponse();
  BINFilterTopUserRequest::default_instance_->InitAsDefaultInstance();
  BINFilterTopUserResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_filter_5ftop_5fuser_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_filter_5ftop_5fuser_2eproto {
  StaticDescriptorInitializer_filter_5ftop_5fuser_2eproto() {
    protobuf_AddDesc_filter_5ftop_5fuser_2eproto();
  }
} static_descriptor_initializer_filter_5ftop_5fuser_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int BINFilterTopUserRequest::kFirstResultFieldNumber;
const int BINFilterTopUserRequest::kMaxResultFieldNumber;
const int BINFilterTopUserRequest::kOrderByFieldFieldNumber;
#endif  // !_MSC_VER

BINFilterTopUserRequest::BINFilterTopUserRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BINFilterTopUserRequest::InitAsDefaultInstance() {
}

BINFilterTopUserRequest::BINFilterTopUserRequest(const BINFilterTopUserRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BINFilterTopUserRequest::SharedCtor() {
  _cached_size_ = 0;
  firstresult_ = 0;
  maxresult_ = 0;
  orderbyfield_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BINFilterTopUserRequest::~BINFilterTopUserRequest() {
  SharedDtor();
}

void BINFilterTopUserRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BINFilterTopUserRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BINFilterTopUserRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BINFilterTopUserRequest_descriptor_;
}

const BINFilterTopUserRequest& BINFilterTopUserRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_filter_5ftop_5fuser_2eproto();
  return *default_instance_;
}

BINFilterTopUserRequest* BINFilterTopUserRequest::default_instance_ = NULL;

BINFilterTopUserRequest* BINFilterTopUserRequest::New() const {
  return new BINFilterTopUserRequest;
}

void BINFilterTopUserRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    firstresult_ = 0;
    maxresult_ = 0;
    orderbyfield_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BINFilterTopUserRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 firstResult = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &firstresult_)));
          set_has_firstresult();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_maxResult;
        break;
      }

      // required int32 maxResult = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_maxResult:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxresult_)));
          set_has_maxresult();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_orderByField;
        break;
      }

      // optional int32 orderByField = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_orderByField:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &orderbyfield_)));
          set_has_orderbyfield();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BINFilterTopUserRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 firstResult = 1;
  if (has_firstresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->firstresult(), output);
  }

  // required int32 maxResult = 2;
  if (has_maxresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->maxresult(), output);
  }

  // optional int32 orderByField = 3;
  if (has_orderbyfield()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->orderbyfield(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BINFilterTopUserRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 firstResult = 1;
  if (has_firstresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->firstresult(), target);
  }

  // required int32 maxResult = 2;
  if (has_maxresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->maxresult(), target);
  }

  // optional int32 orderByField = 3;
  if (has_orderbyfield()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->orderbyfield(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BINFilterTopUserRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 firstResult = 1;
    if (has_firstresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->firstresult());
    }

    // required int32 maxResult = 2;
    if (has_maxresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maxresult());
    }

    // optional int32 orderByField = 3;
    if (has_orderbyfield()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->orderbyfield());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BINFilterTopUserRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BINFilterTopUserRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BINFilterTopUserRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BINFilterTopUserRequest::MergeFrom(const BINFilterTopUserRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_firstresult()) {
      set_firstresult(from.firstresult());
    }
    if (from.has_maxresult()) {
      set_maxresult(from.maxresult());
    }
    if (from.has_orderbyfield()) {
      set_orderbyfield(from.orderbyfield());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BINFilterTopUserRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BINFilterTopUserRequest::CopyFrom(const BINFilterTopUserRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BINFilterTopUserRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void BINFilterTopUserRequest::Swap(BINFilterTopUserRequest* other) {
  if (other != this) {
    std::swap(firstresult_, other->firstresult_);
    std::swap(maxresult_, other->maxresult_);
    std::swap(orderbyfield_, other->orderbyfield_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BINFilterTopUserRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BINFilterTopUserRequest_descriptor_;
  metadata.reflection = BINFilterTopUserRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BINFilterTopUserResponse::kResponseCodeFieldNumber;
const int BINFilterTopUserResponse::kMessageFieldNumber;
const int BINFilterTopUserResponse::kTopUsersFieldNumber;
#endif  // !_MSC_VER

BINFilterTopUserResponse::BINFilterTopUserResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BINFilterTopUserResponse::InitAsDefaultInstance() {
}

BINFilterTopUserResponse::BINFilterTopUserResponse(const BINFilterTopUserResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BINFilterTopUserResponse::SharedCtor() {
  _cached_size_ = 0;
  responsecode_ = false;
  message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BINFilterTopUserResponse::~BINFilterTopUserResponse() {
  SharedDtor();
}

void BINFilterTopUserResponse::SharedDtor() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (this != default_instance_) {
  }
}

void BINFilterTopUserResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BINFilterTopUserResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BINFilterTopUserResponse_descriptor_;
}

const BINFilterTopUserResponse& BINFilterTopUserResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_filter_5ftop_5fuser_2eproto();
  return *default_instance_;
}

BINFilterTopUserResponse* BINFilterTopUserResponse::default_instance_ = NULL;

BINFilterTopUserResponse* BINFilterTopUserResponse::New() const {
  return new BINFilterTopUserResponse;
}

void BINFilterTopUserResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    responsecode_ = false;
    if (has_message()) {
      if (message_ != &::google::protobuf::internal::kEmptyString) {
        message_->clear();
      }
    }
  }
  topusers_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BINFilterTopUserResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool responseCode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &responsecode_)));
          set_has_responsecode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_message;
        break;
      }

      // optional string message = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_topUsers;
        break;
      }

      // repeated .BINUserInfo topUsers = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_topUsers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_topusers()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_topUsers;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BINFilterTopUserResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bool responseCode = 1;
  if (has_responsecode()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->responsecode(), output);
  }

  // optional string message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->message(), output);
  }

  // repeated .BINUserInfo topUsers = 3;
  for (int i = 0; i < this->topusers_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->topusers(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BINFilterTopUserResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool responseCode = 1;
  if (has_responsecode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->responsecode(), target);
  }

  // optional string message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // repeated .BINUserInfo topUsers = 3;
  for (int i = 0; i < this->topusers_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->topusers(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BINFilterTopUserResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool responseCode = 1;
    if (has_responsecode()) {
      total_size += 1 + 1;
    }

    // optional string message = 2;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

  }
  // repeated .BINUserInfo topUsers = 3;
  total_size += 1 * this->topusers_size();
  for (int i = 0; i < this->topusers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->topusers(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BINFilterTopUserResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BINFilterTopUserResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BINFilterTopUserResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BINFilterTopUserResponse::MergeFrom(const BINFilterTopUserResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  topusers_.MergeFrom(from.topusers_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_responsecode()) {
      set_responsecode(from.responsecode());
    }
    if (from.has_message()) {
      set_message(from.message());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BINFilterTopUserResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BINFilterTopUserResponse::CopyFrom(const BINFilterTopUserResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BINFilterTopUserResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < topusers_size(); i++) {
    if (!this->topusers(i).IsInitialized()) return false;
  }
  return true;
}

void BINFilterTopUserResponse::Swap(BINFilterTopUserResponse* other) {
  if (other != this) {
    std::swap(responsecode_, other->responsecode_);
    std::swap(message_, other->message_);
    topusers_.Swap(&other->topusers_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BINFilterTopUserResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BINFilterTopUserResponse_descriptor_;
  metadata.reflection = BINFilterTopUserResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
