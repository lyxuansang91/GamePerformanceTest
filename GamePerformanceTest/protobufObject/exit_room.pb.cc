// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: exit_room.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "exit_room.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* BINExitRoomRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BINExitRoomRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* BINExitRoomResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BINExitRoomResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* BINPlayerExitAfterMatchEndResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BINPlayerExitAfterMatchEndResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* BINPlayerExitRoomResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BINPlayerExitRoomResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* BINCancelExitAfterMatchEndRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BINCancelExitAfterMatchEndRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* BINCancelExitAfterMatchEndResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BINCancelExitAfterMatchEndResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_exit_5froom_2eproto() {
  protobuf_AddDesc_exit_5froom_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "exit_room.proto");
  GOOGLE_CHECK(file != NULL);
  BINExitRoomRequest_descriptor_ = file->message_type(0);
  static const int BINExitRoomRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINExitRoomRequest, roomindex_),
  };
  BINExitRoomRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BINExitRoomRequest_descriptor_,
      BINExitRoomRequest::default_instance_,
      BINExitRoomRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINExitRoomRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINExitRoomRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BINExitRoomRequest));
  BINExitRoomResponse_descriptor_ = file->message_type(1);
  static const int BINExitRoomResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINExitRoomResponse, responsecode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINExitRoomResponse, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINExitRoomResponse, exitaftermatchend_),
  };
  BINExitRoomResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BINExitRoomResponse_descriptor_,
      BINExitRoomResponse::default_instance_,
      BINExitRoomResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINExitRoomResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINExitRoomResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BINExitRoomResponse));
  BINPlayerExitAfterMatchEndResponse_descriptor_ = file->message_type(2);
  static const int BINPlayerExitAfterMatchEndResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINPlayerExitAfterMatchEndResponse, responsecode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINPlayerExitAfterMatchEndResponse, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINPlayerExitAfterMatchEndResponse, exituserid_),
  };
  BINPlayerExitAfterMatchEndResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BINPlayerExitAfterMatchEndResponse_descriptor_,
      BINPlayerExitAfterMatchEndResponse::default_instance_,
      BINPlayerExitAfterMatchEndResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINPlayerExitAfterMatchEndResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINPlayerExitAfterMatchEndResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BINPlayerExitAfterMatchEndResponse));
  BINPlayerExitRoomResponse_descriptor_ = file->message_type(3);
  static const int BINPlayerExitRoomResponse_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINPlayerExitRoomResponse, responsecode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINPlayerExitRoomResponse, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINPlayerExitRoomResponse, exituserid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINPlayerExitRoomResponse, owneruserid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINPlayerExitRoomResponse, changeownerroomcd_),
  };
  BINPlayerExitRoomResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BINPlayerExitRoomResponse_descriptor_,
      BINPlayerExitRoomResponse::default_instance_,
      BINPlayerExitRoomResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINPlayerExitRoomResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINPlayerExitRoomResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BINPlayerExitRoomResponse));
  BINCancelExitAfterMatchEndRequest_descriptor_ = file->message_type(4);
  static const int BINCancelExitAfterMatchEndRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINCancelExitAfterMatchEndRequest, roomindex_),
  };
  BINCancelExitAfterMatchEndRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BINCancelExitAfterMatchEndRequest_descriptor_,
      BINCancelExitAfterMatchEndRequest::default_instance_,
      BINCancelExitAfterMatchEndRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINCancelExitAfterMatchEndRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINCancelExitAfterMatchEndRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BINCancelExitAfterMatchEndRequest));
  BINCancelExitAfterMatchEndResponse_descriptor_ = file->message_type(5);
  static const int BINCancelExitAfterMatchEndResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINCancelExitAfterMatchEndResponse, responsecode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINCancelExitAfterMatchEndResponse, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINCancelExitAfterMatchEndResponse, cancelexituserid_),
  };
  BINCancelExitAfterMatchEndResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BINCancelExitAfterMatchEndResponse_descriptor_,
      BINCancelExitAfterMatchEndResponse::default_instance_,
      BINCancelExitAfterMatchEndResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINCancelExitAfterMatchEndResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINCancelExitAfterMatchEndResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BINCancelExitAfterMatchEndResponse));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_exit_5froom_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BINExitRoomRequest_descriptor_, &BINExitRoomRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BINExitRoomResponse_descriptor_, &BINExitRoomResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BINPlayerExitAfterMatchEndResponse_descriptor_, &BINPlayerExitAfterMatchEndResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BINPlayerExitRoomResponse_descriptor_, &BINPlayerExitRoomResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BINCancelExitAfterMatchEndRequest_descriptor_, &BINCancelExitAfterMatchEndRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BINCancelExitAfterMatchEndResponse_descriptor_, &BINCancelExitAfterMatchEndResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_exit_5froom_2eproto() {
  delete BINExitRoomRequest::default_instance_;
  delete BINExitRoomRequest_reflection_;
  delete BINExitRoomResponse::default_instance_;
  delete BINExitRoomResponse_reflection_;
  delete BINPlayerExitAfterMatchEndResponse::default_instance_;
  delete BINPlayerExitAfterMatchEndResponse_reflection_;
  delete BINPlayerExitRoomResponse::default_instance_;
  delete BINPlayerExitRoomResponse_reflection_;
  delete BINCancelExitAfterMatchEndRequest::default_instance_;
  delete BINCancelExitAfterMatchEndRequest_reflection_;
  delete BINCancelExitAfterMatchEndResponse::default_instance_;
  delete BINCancelExitAfterMatchEndResponse_reflection_;
}

void protobuf_AddDesc_exit_5froom_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017exit_room.proto\"\'\n\022BINExitRoomRequest\022"
    "\021\n\troomIndex\030\001 \002(\005\"W\n\023BINExitRoomRespons"
    "e\022\024\n\014responseCode\030\001 \002(\010\022\017\n\007message\030\002 \001(\t"
    "\022\031\n\021exitAfterMatchEnd\030\003 \001(\010\"_\n\"BINPlayer"
    "ExitAfterMatchEndResponse\022\024\n\014responseCod"
    "e\030\001 \002(\010\022\017\n\007message\030\002 \001(\t\022\022\n\nexitUserId\030\003"
    " \001(\003\"\206\001\n\031BINPlayerExitRoomResponse\022\024\n\014re"
    "sponseCode\030\001 \002(\010\022\017\n\007message\030\002 \001(\t\022\022\n\nexi"
    "tUserId\030\003 \001(\003\022\023\n\013ownerUserId\030\004 \001(\003\022\031\n\021ch"
    "angeOwnerRoomCd\030\005 \001(\005\"6\n!BINCancelExitAf"
    "terMatchEndRequest\022\021\n\troomIndex\030\001 \002(\005\"e\n"
    "\"BINCancelExitAfterMatchEndResponse\022\024\n\014r"
    "esponseCode\030\001 \002(\010\022\017\n\007message\030\002 \001(\t\022\030\n\020ca"
    "ncelExitUserId\030\003 \001(\003B\036\n\034com.mi.game.netw"
    "ork.data.bin", 572);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "exit_room.proto", &protobuf_RegisterTypes);
  BINExitRoomRequest::default_instance_ = new BINExitRoomRequest();
  BINExitRoomResponse::default_instance_ = new BINExitRoomResponse();
  BINPlayerExitAfterMatchEndResponse::default_instance_ = new BINPlayerExitAfterMatchEndResponse();
  BINPlayerExitRoomResponse::default_instance_ = new BINPlayerExitRoomResponse();
  BINCancelExitAfterMatchEndRequest::default_instance_ = new BINCancelExitAfterMatchEndRequest();
  BINCancelExitAfterMatchEndResponse::default_instance_ = new BINCancelExitAfterMatchEndResponse();
  BINExitRoomRequest::default_instance_->InitAsDefaultInstance();
  BINExitRoomResponse::default_instance_->InitAsDefaultInstance();
  BINPlayerExitAfterMatchEndResponse::default_instance_->InitAsDefaultInstance();
  BINPlayerExitRoomResponse::default_instance_->InitAsDefaultInstance();
  BINCancelExitAfterMatchEndRequest::default_instance_->InitAsDefaultInstance();
  BINCancelExitAfterMatchEndResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_exit_5froom_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_exit_5froom_2eproto {
  StaticDescriptorInitializer_exit_5froom_2eproto() {
    protobuf_AddDesc_exit_5froom_2eproto();
  }
} static_descriptor_initializer_exit_5froom_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int BINExitRoomRequest::kRoomIndexFieldNumber;
#endif  // !_MSC_VER

BINExitRoomRequest::BINExitRoomRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BINExitRoomRequest::InitAsDefaultInstance() {
}

BINExitRoomRequest::BINExitRoomRequest(const BINExitRoomRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BINExitRoomRequest::SharedCtor() {
  _cached_size_ = 0;
  roomindex_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BINExitRoomRequest::~BINExitRoomRequest() {
  SharedDtor();
}

void BINExitRoomRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BINExitRoomRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BINExitRoomRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BINExitRoomRequest_descriptor_;
}

const BINExitRoomRequest& BINExitRoomRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_exit_5froom_2eproto();
  return *default_instance_;
}

BINExitRoomRequest* BINExitRoomRequest::default_instance_ = NULL;

BINExitRoomRequest* BINExitRoomRequest::New() const {
  return new BINExitRoomRequest;
}

void BINExitRoomRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    roomindex_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BINExitRoomRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 roomIndex = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomindex_)));
          set_has_roomindex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BINExitRoomRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 roomIndex = 1;
  if (has_roomindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roomindex(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BINExitRoomRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 roomIndex = 1;
  if (has_roomindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roomindex(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BINExitRoomRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 roomIndex = 1;
    if (has_roomindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roomindex());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BINExitRoomRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BINExitRoomRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BINExitRoomRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BINExitRoomRequest::MergeFrom(const BINExitRoomRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roomindex()) {
      set_roomindex(from.roomindex());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BINExitRoomRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BINExitRoomRequest::CopyFrom(const BINExitRoomRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BINExitRoomRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void BINExitRoomRequest::Swap(BINExitRoomRequest* other) {
  if (other != this) {
    std::swap(roomindex_, other->roomindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BINExitRoomRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BINExitRoomRequest_descriptor_;
  metadata.reflection = BINExitRoomRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BINExitRoomResponse::kResponseCodeFieldNumber;
const int BINExitRoomResponse::kMessageFieldNumber;
const int BINExitRoomResponse::kExitAfterMatchEndFieldNumber;
#endif  // !_MSC_VER

BINExitRoomResponse::BINExitRoomResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BINExitRoomResponse::InitAsDefaultInstance() {
}

BINExitRoomResponse::BINExitRoomResponse(const BINExitRoomResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BINExitRoomResponse::SharedCtor() {
  _cached_size_ = 0;
  responsecode_ = false;
  message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  exitaftermatchend_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BINExitRoomResponse::~BINExitRoomResponse() {
  SharedDtor();
}

void BINExitRoomResponse::SharedDtor() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (this != default_instance_) {
  }
}

void BINExitRoomResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BINExitRoomResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BINExitRoomResponse_descriptor_;
}

const BINExitRoomResponse& BINExitRoomResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_exit_5froom_2eproto();
  return *default_instance_;
}

BINExitRoomResponse* BINExitRoomResponse::default_instance_ = NULL;

BINExitRoomResponse* BINExitRoomResponse::New() const {
  return new BINExitRoomResponse;
}

void BINExitRoomResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    responsecode_ = false;
    if (has_message()) {
      if (message_ != &::google::protobuf::internal::kEmptyString) {
        message_->clear();
      }
    }
    exitaftermatchend_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BINExitRoomResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool responseCode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &responsecode_)));
          set_has_responsecode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_message;
        break;
      }

      // optional string message = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_exitAfterMatchEnd;
        break;
      }

      // optional bool exitAfterMatchEnd = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exitAfterMatchEnd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &exitaftermatchend_)));
          set_has_exitaftermatchend();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BINExitRoomResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bool responseCode = 1;
  if (has_responsecode()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->responsecode(), output);
  }

  // optional string message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->message(), output);
  }

  // optional bool exitAfterMatchEnd = 3;
  if (has_exitaftermatchend()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->exitaftermatchend(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BINExitRoomResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool responseCode = 1;
  if (has_responsecode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->responsecode(), target);
  }

  // optional string message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // optional bool exitAfterMatchEnd = 3;
  if (has_exitaftermatchend()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->exitaftermatchend(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BINExitRoomResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool responseCode = 1;
    if (has_responsecode()) {
      total_size += 1 + 1;
    }

    // optional string message = 2;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional bool exitAfterMatchEnd = 3;
    if (has_exitaftermatchend()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BINExitRoomResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BINExitRoomResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BINExitRoomResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BINExitRoomResponse::MergeFrom(const BINExitRoomResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_responsecode()) {
      set_responsecode(from.responsecode());
    }
    if (from.has_message()) {
      set_message(from.message());
    }
    if (from.has_exitaftermatchend()) {
      set_exitaftermatchend(from.exitaftermatchend());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BINExitRoomResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BINExitRoomResponse::CopyFrom(const BINExitRoomResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BINExitRoomResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void BINExitRoomResponse::Swap(BINExitRoomResponse* other) {
  if (other != this) {
    std::swap(responsecode_, other->responsecode_);
    std::swap(message_, other->message_);
    std::swap(exitaftermatchend_, other->exitaftermatchend_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BINExitRoomResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BINExitRoomResponse_descriptor_;
  metadata.reflection = BINExitRoomResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BINPlayerExitAfterMatchEndResponse::kResponseCodeFieldNumber;
const int BINPlayerExitAfterMatchEndResponse::kMessageFieldNumber;
const int BINPlayerExitAfterMatchEndResponse::kExitUserIdFieldNumber;
#endif  // !_MSC_VER

BINPlayerExitAfterMatchEndResponse::BINPlayerExitAfterMatchEndResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BINPlayerExitAfterMatchEndResponse::InitAsDefaultInstance() {
}

BINPlayerExitAfterMatchEndResponse::BINPlayerExitAfterMatchEndResponse(const BINPlayerExitAfterMatchEndResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BINPlayerExitAfterMatchEndResponse::SharedCtor() {
  _cached_size_ = 0;
  responsecode_ = false;
  message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  exituserid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BINPlayerExitAfterMatchEndResponse::~BINPlayerExitAfterMatchEndResponse() {
  SharedDtor();
}

void BINPlayerExitAfterMatchEndResponse::SharedDtor() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (this != default_instance_) {
  }
}

void BINPlayerExitAfterMatchEndResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BINPlayerExitAfterMatchEndResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BINPlayerExitAfterMatchEndResponse_descriptor_;
}

const BINPlayerExitAfterMatchEndResponse& BINPlayerExitAfterMatchEndResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_exit_5froom_2eproto();
  return *default_instance_;
}

BINPlayerExitAfterMatchEndResponse* BINPlayerExitAfterMatchEndResponse::default_instance_ = NULL;

BINPlayerExitAfterMatchEndResponse* BINPlayerExitAfterMatchEndResponse::New() const {
  return new BINPlayerExitAfterMatchEndResponse;
}

void BINPlayerExitAfterMatchEndResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    responsecode_ = false;
    if (has_message()) {
      if (message_ != &::google::protobuf::internal::kEmptyString) {
        message_->clear();
      }
    }
    exituserid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BINPlayerExitAfterMatchEndResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool responseCode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &responsecode_)));
          set_has_responsecode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_message;
        break;
      }

      // optional string message = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_exitUserId;
        break;
      }

      // optional int64 exitUserId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exitUserId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &exituserid_)));
          set_has_exituserid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BINPlayerExitAfterMatchEndResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bool responseCode = 1;
  if (has_responsecode()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->responsecode(), output);
  }

  // optional string message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->message(), output);
  }

  // optional int64 exitUserId = 3;
  if (has_exituserid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->exituserid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BINPlayerExitAfterMatchEndResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool responseCode = 1;
  if (has_responsecode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->responsecode(), target);
  }

  // optional string message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // optional int64 exitUserId = 3;
  if (has_exituserid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->exituserid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BINPlayerExitAfterMatchEndResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool responseCode = 1;
    if (has_responsecode()) {
      total_size += 1 + 1;
    }

    // optional string message = 2;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional int64 exitUserId = 3;
    if (has_exituserid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->exituserid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BINPlayerExitAfterMatchEndResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BINPlayerExitAfterMatchEndResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BINPlayerExitAfterMatchEndResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BINPlayerExitAfterMatchEndResponse::MergeFrom(const BINPlayerExitAfterMatchEndResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_responsecode()) {
      set_responsecode(from.responsecode());
    }
    if (from.has_message()) {
      set_message(from.message());
    }
    if (from.has_exituserid()) {
      set_exituserid(from.exituserid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BINPlayerExitAfterMatchEndResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BINPlayerExitAfterMatchEndResponse::CopyFrom(const BINPlayerExitAfterMatchEndResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BINPlayerExitAfterMatchEndResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void BINPlayerExitAfterMatchEndResponse::Swap(BINPlayerExitAfterMatchEndResponse* other) {
  if (other != this) {
    std::swap(responsecode_, other->responsecode_);
    std::swap(message_, other->message_);
    std::swap(exituserid_, other->exituserid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BINPlayerExitAfterMatchEndResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BINPlayerExitAfterMatchEndResponse_descriptor_;
  metadata.reflection = BINPlayerExitAfterMatchEndResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BINPlayerExitRoomResponse::kResponseCodeFieldNumber;
const int BINPlayerExitRoomResponse::kMessageFieldNumber;
const int BINPlayerExitRoomResponse::kExitUserIdFieldNumber;
const int BINPlayerExitRoomResponse::kOwnerUserIdFieldNumber;
const int BINPlayerExitRoomResponse::kChangeOwnerRoomCdFieldNumber;
#endif  // !_MSC_VER

BINPlayerExitRoomResponse::BINPlayerExitRoomResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BINPlayerExitRoomResponse::InitAsDefaultInstance() {
}

BINPlayerExitRoomResponse::BINPlayerExitRoomResponse(const BINPlayerExitRoomResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BINPlayerExitRoomResponse::SharedCtor() {
  _cached_size_ = 0;
  responsecode_ = false;
  message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  exituserid_ = GOOGLE_LONGLONG(0);
  owneruserid_ = GOOGLE_LONGLONG(0);
  changeownerroomcd_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BINPlayerExitRoomResponse::~BINPlayerExitRoomResponse() {
  SharedDtor();
}

void BINPlayerExitRoomResponse::SharedDtor() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (this != default_instance_) {
  }
}

void BINPlayerExitRoomResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BINPlayerExitRoomResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BINPlayerExitRoomResponse_descriptor_;
}

const BINPlayerExitRoomResponse& BINPlayerExitRoomResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_exit_5froom_2eproto();
  return *default_instance_;
}

BINPlayerExitRoomResponse* BINPlayerExitRoomResponse::default_instance_ = NULL;

BINPlayerExitRoomResponse* BINPlayerExitRoomResponse::New() const {
  return new BINPlayerExitRoomResponse;
}

void BINPlayerExitRoomResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    responsecode_ = false;
    if (has_message()) {
      if (message_ != &::google::protobuf::internal::kEmptyString) {
        message_->clear();
      }
    }
    exituserid_ = GOOGLE_LONGLONG(0);
    owneruserid_ = GOOGLE_LONGLONG(0);
    changeownerroomcd_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BINPlayerExitRoomResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool responseCode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &responsecode_)));
          set_has_responsecode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_message;
        break;
      }

      // optional string message = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_exitUserId;
        break;
      }

      // optional int64 exitUserId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exitUserId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &exituserid_)));
          set_has_exituserid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_ownerUserId;
        break;
      }

      // optional int64 ownerUserId = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ownerUserId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &owneruserid_)));
          set_has_owneruserid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_changeOwnerRoomCd;
        break;
      }

      // optional int32 changeOwnerRoomCd = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_changeOwnerRoomCd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &changeownerroomcd_)));
          set_has_changeownerroomcd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BINPlayerExitRoomResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bool responseCode = 1;
  if (has_responsecode()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->responsecode(), output);
  }

  // optional string message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->message(), output);
  }

  // optional int64 exitUserId = 3;
  if (has_exituserid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->exituserid(), output);
  }

  // optional int64 ownerUserId = 4;
  if (has_owneruserid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->owneruserid(), output);
  }

  // optional int32 changeOwnerRoomCd = 5;
  if (has_changeownerroomcd()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->changeownerroomcd(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BINPlayerExitRoomResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool responseCode = 1;
  if (has_responsecode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->responsecode(), target);
  }

  // optional string message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // optional int64 exitUserId = 3;
  if (has_exituserid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->exituserid(), target);
  }

  // optional int64 ownerUserId = 4;
  if (has_owneruserid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->owneruserid(), target);
  }

  // optional int32 changeOwnerRoomCd = 5;
  if (has_changeownerroomcd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->changeownerroomcd(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BINPlayerExitRoomResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool responseCode = 1;
    if (has_responsecode()) {
      total_size += 1 + 1;
    }

    // optional string message = 2;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional int64 exitUserId = 3;
    if (has_exituserid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->exituserid());
    }

    // optional int64 ownerUserId = 4;
    if (has_owneruserid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->owneruserid());
    }

    // optional int32 changeOwnerRoomCd = 5;
    if (has_changeownerroomcd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->changeownerroomcd());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BINPlayerExitRoomResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BINPlayerExitRoomResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BINPlayerExitRoomResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BINPlayerExitRoomResponse::MergeFrom(const BINPlayerExitRoomResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_responsecode()) {
      set_responsecode(from.responsecode());
    }
    if (from.has_message()) {
      set_message(from.message());
    }
    if (from.has_exituserid()) {
      set_exituserid(from.exituserid());
    }
    if (from.has_owneruserid()) {
      set_owneruserid(from.owneruserid());
    }
    if (from.has_changeownerroomcd()) {
      set_changeownerroomcd(from.changeownerroomcd());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BINPlayerExitRoomResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BINPlayerExitRoomResponse::CopyFrom(const BINPlayerExitRoomResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BINPlayerExitRoomResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void BINPlayerExitRoomResponse::Swap(BINPlayerExitRoomResponse* other) {
  if (other != this) {
    std::swap(responsecode_, other->responsecode_);
    std::swap(message_, other->message_);
    std::swap(exituserid_, other->exituserid_);
    std::swap(owneruserid_, other->owneruserid_);
    std::swap(changeownerroomcd_, other->changeownerroomcd_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BINPlayerExitRoomResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BINPlayerExitRoomResponse_descriptor_;
  metadata.reflection = BINPlayerExitRoomResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BINCancelExitAfterMatchEndRequest::kRoomIndexFieldNumber;
#endif  // !_MSC_VER

BINCancelExitAfterMatchEndRequest::BINCancelExitAfterMatchEndRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BINCancelExitAfterMatchEndRequest::InitAsDefaultInstance() {
}

BINCancelExitAfterMatchEndRequest::BINCancelExitAfterMatchEndRequest(const BINCancelExitAfterMatchEndRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BINCancelExitAfterMatchEndRequest::SharedCtor() {
  _cached_size_ = 0;
  roomindex_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BINCancelExitAfterMatchEndRequest::~BINCancelExitAfterMatchEndRequest() {
  SharedDtor();
}

void BINCancelExitAfterMatchEndRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BINCancelExitAfterMatchEndRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BINCancelExitAfterMatchEndRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BINCancelExitAfterMatchEndRequest_descriptor_;
}

const BINCancelExitAfterMatchEndRequest& BINCancelExitAfterMatchEndRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_exit_5froom_2eproto();
  return *default_instance_;
}

BINCancelExitAfterMatchEndRequest* BINCancelExitAfterMatchEndRequest::default_instance_ = NULL;

BINCancelExitAfterMatchEndRequest* BINCancelExitAfterMatchEndRequest::New() const {
  return new BINCancelExitAfterMatchEndRequest;
}

void BINCancelExitAfterMatchEndRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    roomindex_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BINCancelExitAfterMatchEndRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 roomIndex = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomindex_)));
          set_has_roomindex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BINCancelExitAfterMatchEndRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 roomIndex = 1;
  if (has_roomindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roomindex(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BINCancelExitAfterMatchEndRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 roomIndex = 1;
  if (has_roomindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roomindex(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BINCancelExitAfterMatchEndRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 roomIndex = 1;
    if (has_roomindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roomindex());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BINCancelExitAfterMatchEndRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BINCancelExitAfterMatchEndRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BINCancelExitAfterMatchEndRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BINCancelExitAfterMatchEndRequest::MergeFrom(const BINCancelExitAfterMatchEndRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roomindex()) {
      set_roomindex(from.roomindex());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BINCancelExitAfterMatchEndRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BINCancelExitAfterMatchEndRequest::CopyFrom(const BINCancelExitAfterMatchEndRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BINCancelExitAfterMatchEndRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void BINCancelExitAfterMatchEndRequest::Swap(BINCancelExitAfterMatchEndRequest* other) {
  if (other != this) {
    std::swap(roomindex_, other->roomindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BINCancelExitAfterMatchEndRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BINCancelExitAfterMatchEndRequest_descriptor_;
  metadata.reflection = BINCancelExitAfterMatchEndRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BINCancelExitAfterMatchEndResponse::kResponseCodeFieldNumber;
const int BINCancelExitAfterMatchEndResponse::kMessageFieldNumber;
const int BINCancelExitAfterMatchEndResponse::kCancelExitUserIdFieldNumber;
#endif  // !_MSC_VER

BINCancelExitAfterMatchEndResponse::BINCancelExitAfterMatchEndResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BINCancelExitAfterMatchEndResponse::InitAsDefaultInstance() {
}

BINCancelExitAfterMatchEndResponse::BINCancelExitAfterMatchEndResponse(const BINCancelExitAfterMatchEndResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BINCancelExitAfterMatchEndResponse::SharedCtor() {
  _cached_size_ = 0;
  responsecode_ = false;
  message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cancelexituserid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BINCancelExitAfterMatchEndResponse::~BINCancelExitAfterMatchEndResponse() {
  SharedDtor();
}

void BINCancelExitAfterMatchEndResponse::SharedDtor() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (this != default_instance_) {
  }
}

void BINCancelExitAfterMatchEndResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BINCancelExitAfterMatchEndResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BINCancelExitAfterMatchEndResponse_descriptor_;
}

const BINCancelExitAfterMatchEndResponse& BINCancelExitAfterMatchEndResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_exit_5froom_2eproto();
  return *default_instance_;
}

BINCancelExitAfterMatchEndResponse* BINCancelExitAfterMatchEndResponse::default_instance_ = NULL;

BINCancelExitAfterMatchEndResponse* BINCancelExitAfterMatchEndResponse::New() const {
  return new BINCancelExitAfterMatchEndResponse;
}

void BINCancelExitAfterMatchEndResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    responsecode_ = false;
    if (has_message()) {
      if (message_ != &::google::protobuf::internal::kEmptyString) {
        message_->clear();
      }
    }
    cancelexituserid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BINCancelExitAfterMatchEndResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool responseCode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &responsecode_)));
          set_has_responsecode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_message;
        break;
      }

      // optional string message = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_cancelExitUserId;
        break;
      }

      // optional int64 cancelExitUserId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cancelExitUserId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &cancelexituserid_)));
          set_has_cancelexituserid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BINCancelExitAfterMatchEndResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bool responseCode = 1;
  if (has_responsecode()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->responsecode(), output);
  }

  // optional string message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->message(), output);
  }

  // optional int64 cancelExitUserId = 3;
  if (has_cancelexituserid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->cancelexituserid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BINCancelExitAfterMatchEndResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool responseCode = 1;
  if (has_responsecode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->responsecode(), target);
  }

  // optional string message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // optional int64 cancelExitUserId = 3;
  if (has_cancelexituserid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->cancelexituserid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BINCancelExitAfterMatchEndResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool responseCode = 1;
    if (has_responsecode()) {
      total_size += 1 + 1;
    }

    // optional string message = 2;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional int64 cancelExitUserId = 3;
    if (has_cancelexituserid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->cancelexituserid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BINCancelExitAfterMatchEndResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BINCancelExitAfterMatchEndResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BINCancelExitAfterMatchEndResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BINCancelExitAfterMatchEndResponse::MergeFrom(const BINCancelExitAfterMatchEndResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_responsecode()) {
      set_responsecode(from.responsecode());
    }
    if (from.has_message()) {
      set_message(from.message());
    }
    if (from.has_cancelexituserid()) {
      set_cancelexituserid(from.cancelexituserid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BINCancelExitAfterMatchEndResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BINCancelExitAfterMatchEndResponse::CopyFrom(const BINCancelExitAfterMatchEndResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BINCancelExitAfterMatchEndResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void BINCancelExitAfterMatchEndResponse::Swap(BINCancelExitAfterMatchEndResponse* other) {
  if (other != this) {
    std::swap(responsecode_, other->responsecode_);
    std::swap(message_, other->message_);
    std::swap(cancelexituserid_, other->cancelexituserid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BINCancelExitAfterMatchEndResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BINCancelExitAfterMatchEndResponse_descriptor_;
  metadata.reflection = BINCancelExitAfterMatchEndResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
