// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: purchase_money.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "purchase_money.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* BINPurchaseMoneyRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BINPurchaseMoneyRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* BINPurchaseMoneyResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BINPurchaseMoneyResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_purchase_5fmoney_2eproto() {
  protobuf_AddDesc_purchase_5fmoney_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "purchase_money.proto");
  GOOGLE_CHECK(file != NULL);
  BINPurchaseMoneyRequest_descriptor_ = file->message_type(0);
  static const int BINPurchaseMoneyRequest_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINPurchaseMoneyRequest, provider_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINPurchaseMoneyRequest, cardserial_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINPurchaseMoneyRequest, cardpin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINPurchaseMoneyRequest, securitykey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINPurchaseMoneyRequest, captcha_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINPurchaseMoneyRequest, tocash_),
  };
  BINPurchaseMoneyRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BINPurchaseMoneyRequest_descriptor_,
      BINPurchaseMoneyRequest::default_instance_,
      BINPurchaseMoneyRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINPurchaseMoneyRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINPurchaseMoneyRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BINPurchaseMoneyRequest));
  BINPurchaseMoneyResponse_descriptor_ = file->message_type(1);
  static const int BINPurchaseMoneyResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINPurchaseMoneyResponse, responsecode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINPurchaseMoneyResponse, message_),
  };
  BINPurchaseMoneyResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BINPurchaseMoneyResponse_descriptor_,
      BINPurchaseMoneyResponse::default_instance_,
      BINPurchaseMoneyResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINPurchaseMoneyResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINPurchaseMoneyResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BINPurchaseMoneyResponse));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_purchase_5fmoney_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BINPurchaseMoneyRequest_descriptor_, &BINPurchaseMoneyRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BINPurchaseMoneyResponse_descriptor_, &BINPurchaseMoneyResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_purchase_5fmoney_2eproto() {
  delete BINPurchaseMoneyRequest::default_instance_;
  delete BINPurchaseMoneyRequest_reflection_;
  delete BINPurchaseMoneyResponse::default_instance_;
  delete BINPurchaseMoneyResponse_reflection_;
}

void protobuf_AddDesc_purchase_5fmoney_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024purchase_money.proto\"\206\001\n\027BINPurchaseMo"
    "neyRequest\022\020\n\010provider\030\001 \002(\t\022\022\n\ncardSeri"
    "al\030\002 \002(\t\022\017\n\007cardPin\030\003 \002(\t\022\023\n\013securityKey"
    "\030\004 \002(\t\022\017\n\007captcha\030\005 \002(\t\022\016\n\006toCash\030\006 \001(\010\""
    "A\n\030BINPurchaseMoneyResponse\022\024\n\014responseC"
    "ode\030\001 \002(\010\022\017\n\007message\030\002 \001(\tB\036\n\034com.mi.gam"
    "e.network.data.bin", 258);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "purchase_money.proto", &protobuf_RegisterTypes);
  BINPurchaseMoneyRequest::default_instance_ = new BINPurchaseMoneyRequest();
  BINPurchaseMoneyResponse::default_instance_ = new BINPurchaseMoneyResponse();
  BINPurchaseMoneyRequest::default_instance_->InitAsDefaultInstance();
  BINPurchaseMoneyResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_purchase_5fmoney_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_purchase_5fmoney_2eproto {
  StaticDescriptorInitializer_purchase_5fmoney_2eproto() {
    protobuf_AddDesc_purchase_5fmoney_2eproto();
  }
} static_descriptor_initializer_purchase_5fmoney_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int BINPurchaseMoneyRequest::kProviderFieldNumber;
const int BINPurchaseMoneyRequest::kCardSerialFieldNumber;
const int BINPurchaseMoneyRequest::kCardPinFieldNumber;
const int BINPurchaseMoneyRequest::kSecurityKeyFieldNumber;
const int BINPurchaseMoneyRequest::kCaptchaFieldNumber;
const int BINPurchaseMoneyRequest::kToCashFieldNumber;
#endif  // !_MSC_VER

BINPurchaseMoneyRequest::BINPurchaseMoneyRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BINPurchaseMoneyRequest::InitAsDefaultInstance() {
}

BINPurchaseMoneyRequest::BINPurchaseMoneyRequest(const BINPurchaseMoneyRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BINPurchaseMoneyRequest::SharedCtor() {
  _cached_size_ = 0;
  provider_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cardserial_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  cardpin_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  securitykey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  captcha_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  tocash_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BINPurchaseMoneyRequest::~BINPurchaseMoneyRequest() {
  SharedDtor();
}

void BINPurchaseMoneyRequest::SharedDtor() {
  if (provider_ != &::google::protobuf::internal::kEmptyString) {
    delete provider_;
  }
  if (cardserial_ != &::google::protobuf::internal::kEmptyString) {
    delete cardserial_;
  }
  if (cardpin_ != &::google::protobuf::internal::kEmptyString) {
    delete cardpin_;
  }
  if (securitykey_ != &::google::protobuf::internal::kEmptyString) {
    delete securitykey_;
  }
  if (captcha_ != &::google::protobuf::internal::kEmptyString) {
    delete captcha_;
  }
  if (this != default_instance_) {
  }
}

void BINPurchaseMoneyRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BINPurchaseMoneyRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BINPurchaseMoneyRequest_descriptor_;
}

const BINPurchaseMoneyRequest& BINPurchaseMoneyRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_purchase_5fmoney_2eproto();
  return *default_instance_;
}

BINPurchaseMoneyRequest* BINPurchaseMoneyRequest::default_instance_ = NULL;

BINPurchaseMoneyRequest* BINPurchaseMoneyRequest::New() const {
  return new BINPurchaseMoneyRequest;
}

void BINPurchaseMoneyRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_provider()) {
      if (provider_ != &::google::protobuf::internal::kEmptyString) {
        provider_->clear();
      }
    }
    if (has_cardserial()) {
      if (cardserial_ != &::google::protobuf::internal::kEmptyString) {
        cardserial_->clear();
      }
    }
    if (has_cardpin()) {
      if (cardpin_ != &::google::protobuf::internal::kEmptyString) {
        cardpin_->clear();
      }
    }
    if (has_securitykey()) {
      if (securitykey_ != &::google::protobuf::internal::kEmptyString) {
        securitykey_->clear();
      }
    }
    if (has_captcha()) {
      if (captcha_ != &::google::protobuf::internal::kEmptyString) {
        captcha_->clear();
      }
    }
    tocash_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BINPurchaseMoneyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string provider = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_provider()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->provider().data(), this->provider().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_cardSerial;
        break;
      }

      // required string cardSerial = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cardSerial:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cardserial()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cardserial().data(), this->cardserial().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_cardPin;
        break;
      }

      // required string cardPin = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cardPin:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cardpin()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->cardpin().data(), this->cardpin().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_securityKey;
        break;
      }

      // required string securityKey = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_securityKey:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_securitykey()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->securitykey().data(), this->securitykey().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_captcha;
        break;
      }

      // required string captcha = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_captcha:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_captcha()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->captcha().data(), this->captcha().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_toCash;
        break;
      }

      // optional bool toCash = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_toCash:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &tocash_)));
          set_has_tocash();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BINPurchaseMoneyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string provider = 1;
  if (has_provider()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->provider().data(), this->provider().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->provider(), output);
  }

  // required string cardSerial = 2;
  if (has_cardserial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cardserial().data(), this->cardserial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cardserial(), output);
  }

  // required string cardPin = 3;
  if (has_cardpin()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cardpin().data(), this->cardpin().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->cardpin(), output);
  }

  // required string securityKey = 4;
  if (has_securitykey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securitykey().data(), this->securitykey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->securitykey(), output);
  }

  // required string captcha = 5;
  if (has_captcha()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->captcha().data(), this->captcha().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->captcha(), output);
  }

  // optional bool toCash = 6;
  if (has_tocash()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->tocash(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BINPurchaseMoneyRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string provider = 1;
  if (has_provider()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->provider().data(), this->provider().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->provider(), target);
  }

  // required string cardSerial = 2;
  if (has_cardserial()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cardserial().data(), this->cardserial().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cardserial(), target);
  }

  // required string cardPin = 3;
  if (has_cardpin()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->cardpin().data(), this->cardpin().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cardpin(), target);
  }

  // required string securityKey = 4;
  if (has_securitykey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->securitykey().data(), this->securitykey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->securitykey(), target);
  }

  // required string captcha = 5;
  if (has_captcha()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->captcha().data(), this->captcha().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->captcha(), target);
  }

  // optional bool toCash = 6;
  if (has_tocash()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->tocash(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BINPurchaseMoneyRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string provider = 1;
    if (has_provider()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->provider());
    }

    // required string cardSerial = 2;
    if (has_cardserial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cardserial());
    }

    // required string cardPin = 3;
    if (has_cardpin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cardpin());
    }

    // required string securityKey = 4;
    if (has_securitykey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->securitykey());
    }

    // required string captcha = 5;
    if (has_captcha()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->captcha());
    }

    // optional bool toCash = 6;
    if (has_tocash()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BINPurchaseMoneyRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BINPurchaseMoneyRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BINPurchaseMoneyRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BINPurchaseMoneyRequest::MergeFrom(const BINPurchaseMoneyRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_provider()) {
      set_provider(from.provider());
    }
    if (from.has_cardserial()) {
      set_cardserial(from.cardserial());
    }
    if (from.has_cardpin()) {
      set_cardpin(from.cardpin());
    }
    if (from.has_securitykey()) {
      set_securitykey(from.securitykey());
    }
    if (from.has_captcha()) {
      set_captcha(from.captcha());
    }
    if (from.has_tocash()) {
      set_tocash(from.tocash());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BINPurchaseMoneyRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BINPurchaseMoneyRequest::CopyFrom(const BINPurchaseMoneyRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BINPurchaseMoneyRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void BINPurchaseMoneyRequest::Swap(BINPurchaseMoneyRequest* other) {
  if (other != this) {
    std::swap(provider_, other->provider_);
    std::swap(cardserial_, other->cardserial_);
    std::swap(cardpin_, other->cardpin_);
    std::swap(securitykey_, other->securitykey_);
    std::swap(captcha_, other->captcha_);
    std::swap(tocash_, other->tocash_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BINPurchaseMoneyRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BINPurchaseMoneyRequest_descriptor_;
  metadata.reflection = BINPurchaseMoneyRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BINPurchaseMoneyResponse::kResponseCodeFieldNumber;
const int BINPurchaseMoneyResponse::kMessageFieldNumber;
#endif  // !_MSC_VER

BINPurchaseMoneyResponse::BINPurchaseMoneyResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BINPurchaseMoneyResponse::InitAsDefaultInstance() {
}

BINPurchaseMoneyResponse::BINPurchaseMoneyResponse(const BINPurchaseMoneyResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BINPurchaseMoneyResponse::SharedCtor() {
  _cached_size_ = 0;
  responsecode_ = false;
  message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BINPurchaseMoneyResponse::~BINPurchaseMoneyResponse() {
  SharedDtor();
}

void BINPurchaseMoneyResponse::SharedDtor() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (this != default_instance_) {
  }
}

void BINPurchaseMoneyResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BINPurchaseMoneyResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BINPurchaseMoneyResponse_descriptor_;
}

const BINPurchaseMoneyResponse& BINPurchaseMoneyResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_purchase_5fmoney_2eproto();
  return *default_instance_;
}

BINPurchaseMoneyResponse* BINPurchaseMoneyResponse::default_instance_ = NULL;

BINPurchaseMoneyResponse* BINPurchaseMoneyResponse::New() const {
  return new BINPurchaseMoneyResponse;
}

void BINPurchaseMoneyResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    responsecode_ = false;
    if (has_message()) {
      if (message_ != &::google::protobuf::internal::kEmptyString) {
        message_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BINPurchaseMoneyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool responseCode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &responsecode_)));
          set_has_responsecode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_message;
        break;
      }

      // optional string message = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BINPurchaseMoneyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bool responseCode = 1;
  if (has_responsecode()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->responsecode(), output);
  }

  // optional string message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->message(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BINPurchaseMoneyResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool responseCode = 1;
  if (has_responsecode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->responsecode(), target);
  }

  // optional string message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BINPurchaseMoneyResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool responseCode = 1;
    if (has_responsecode()) {
      total_size += 1 + 1;
    }

    // optional string message = 2;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BINPurchaseMoneyResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BINPurchaseMoneyResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BINPurchaseMoneyResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BINPurchaseMoneyResponse::MergeFrom(const BINPurchaseMoneyResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_responsecode()) {
      set_responsecode(from.responsecode());
    }
    if (from.has_message()) {
      set_message(from.message());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BINPurchaseMoneyResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BINPurchaseMoneyResponse::CopyFrom(const BINPurchaseMoneyResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BINPurchaseMoneyResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void BINPurchaseMoneyResponse::Swap(BINPurchaseMoneyResponse* other) {
  if (other != this) {
    std::swap(responsecode_, other->responsecode_);
    std::swap(message_, other->message_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BINPurchaseMoneyResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BINPurchaseMoneyResponse_descriptor_;
  metadata.reflection = BINPurchaseMoneyResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
