// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: match_begin.proto

#ifndef PROTOBUF_match_5fbegin_2eproto__INCLUDED
#define PROTOBUF_match_5fbegin_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_match_5fbegin_2eproto();
void protobuf_AssignDesc_match_5fbegin_2eproto();
void protobuf_ShutdownFile_match_5fbegin_2eproto();

class BINMatchBeginRequest;
class BINMatchBeginResponse;

// ===================================================================

class BINMatchBeginRequest : public ::google::protobuf::Message {
 public:
  BINMatchBeginRequest();
  virtual ~BINMatchBeginRequest();

  BINMatchBeginRequest(const BINMatchBeginRequest& from);

  inline BINMatchBeginRequest& operator=(const BINMatchBeginRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BINMatchBeginRequest& default_instance();

  void Swap(BINMatchBeginRequest* other);

  // implements Message ----------------------------------------------

  BINMatchBeginRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BINMatchBeginRequest& from);
  void MergeFrom(const BINMatchBeginRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roomIndex = 1;
  inline bool has_roomindex() const;
  inline void clear_roomindex();
  static const int kRoomIndexFieldNumber = 1;
  inline ::google::protobuf::int32 roomindex() const;
  inline void set_roomindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BINMatchBeginRequest)
 private:
  inline void set_has_roomindex();
  inline void clear_has_roomindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roomindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_match_5fbegin_2eproto();
  friend void protobuf_AssignDesc_match_5fbegin_2eproto();
  friend void protobuf_ShutdownFile_match_5fbegin_2eproto();

  void InitAsDefaultInstance();
  static BINMatchBeginRequest* default_instance_;
};
// -------------------------------------------------------------------

class BINMatchBeginResponse : public ::google::protobuf::Message {
 public:
  BINMatchBeginResponse();
  virtual ~BINMatchBeginResponse();

  BINMatchBeginResponse(const BINMatchBeginResponse& from);

  inline BINMatchBeginResponse& operator=(const BINMatchBeginResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BINMatchBeginResponse& default_instance();

  void Swap(BINMatchBeginResponse* other);

  // implements Message ----------------------------------------------

  BINMatchBeginResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BINMatchBeginResponse& from);
  void MergeFrom(const BINMatchBeginResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool responseCode = 1;
  inline bool has_responsecode() const;
  inline void clear_responsecode();
  static const int kResponseCodeFieldNumber = 1;
  inline bool responsecode() const;
  inline void set_responsecode(bool value);

  // optional string message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // optional int32 countDownTimer = 3;
  inline bool has_countdowntimer() const;
  inline void clear_countdowntimer();
  static const int kCountDownTimerFieldNumber = 3;
  inline ::google::protobuf::int32 countdowntimer() const;
  inline void set_countdowntimer(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BINMatchBeginResponse)
 private:
  inline void set_has_responsecode();
  inline void clear_has_responsecode();
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_countdowntimer();
  inline void clear_has_countdowntimer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* message_;
  bool responsecode_;
  ::google::protobuf::int32 countdowntimer_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_match_5fbegin_2eproto();
  friend void protobuf_AssignDesc_match_5fbegin_2eproto();
  friend void protobuf_ShutdownFile_match_5fbegin_2eproto();

  void InitAsDefaultInstance();
  static BINMatchBeginResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// BINMatchBeginRequest

// required int32 roomIndex = 1;
inline bool BINMatchBeginRequest::has_roomindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BINMatchBeginRequest::set_has_roomindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BINMatchBeginRequest::clear_has_roomindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BINMatchBeginRequest::clear_roomindex() {
  roomindex_ = 0;
  clear_has_roomindex();
}
inline ::google::protobuf::int32 BINMatchBeginRequest::roomindex() const {
  return roomindex_;
}
inline void BINMatchBeginRequest::set_roomindex(::google::protobuf::int32 value) {
  set_has_roomindex();
  roomindex_ = value;
}

// -------------------------------------------------------------------

// BINMatchBeginResponse

// required bool responseCode = 1;
inline bool BINMatchBeginResponse::has_responsecode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BINMatchBeginResponse::set_has_responsecode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BINMatchBeginResponse::clear_has_responsecode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BINMatchBeginResponse::clear_responsecode() {
  responsecode_ = false;
  clear_has_responsecode();
}
inline bool BINMatchBeginResponse::responsecode() const {
  return responsecode_;
}
inline void BINMatchBeginResponse::set_responsecode(bool value) {
  set_has_responsecode();
  responsecode_ = value;
}

// optional string message = 2;
inline bool BINMatchBeginResponse::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BINMatchBeginResponse::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BINMatchBeginResponse::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BINMatchBeginResponse::clear_message() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& BINMatchBeginResponse::message() const {
  return *message_;
}
inline void BINMatchBeginResponse::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void BINMatchBeginResponse::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void BINMatchBeginResponse::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BINMatchBeginResponse::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  return message_;
}
inline ::std::string* BINMatchBeginResponse::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BINMatchBeginResponse::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 countDownTimer = 3;
inline bool BINMatchBeginResponse::has_countdowntimer() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BINMatchBeginResponse::set_has_countdowntimer() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BINMatchBeginResponse::clear_has_countdowntimer() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BINMatchBeginResponse::clear_countdowntimer() {
  countdowntimer_ = 0;
  clear_has_countdowntimer();
}
inline ::google::protobuf::int32 BINMatchBeginResponse::countdowntimer() const {
  return countdowntimer_;
}
inline void BINMatchBeginResponse::set_countdowntimer(::google::protobuf::int32 value) {
  set_has_countdowntimer();
  countdowntimer_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_match_5fbegin_2eproto__INCLUDED
