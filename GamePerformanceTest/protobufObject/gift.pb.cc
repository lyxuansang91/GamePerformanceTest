// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gift.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "gift.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* BINRedeemGiftCodeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BINRedeemGiftCodeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* BINRedeemGiftCodeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BINRedeemGiftCodeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* BINGiftCode_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BINGiftCode_reflection_ = NULL;
const ::google::protobuf::Descriptor* BINRedeemGiftCodeHistoryRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BINRedeemGiftCodeHistoryRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* BINRedeemGiftCodeHistoryResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BINRedeemGiftCodeHistoryResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_gift_2eproto() {
  protobuf_AddDesc_gift_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "gift.proto");
  GOOGLE_CHECK(file != NULL);
  BINRedeemGiftCodeRequest_descriptor_ = file->message_type(0);
  static const int BINRedeemGiftCodeRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINRedeemGiftCodeRequest, giftcode_),
  };
  BINRedeemGiftCodeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BINRedeemGiftCodeRequest_descriptor_,
      BINRedeemGiftCodeRequest::default_instance_,
      BINRedeemGiftCodeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINRedeemGiftCodeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINRedeemGiftCodeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BINRedeemGiftCodeRequest));
  BINRedeemGiftCodeResponse_descriptor_ = file->message_type(1);
  static const int BINRedeemGiftCodeResponse_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINRedeemGiftCodeResponse, responsecode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINRedeemGiftCodeResponse, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINRedeemGiftCodeResponse, success_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINRedeemGiftCodeResponse, args_),
  };
  BINRedeemGiftCodeResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BINRedeemGiftCodeResponse_descriptor_,
      BINRedeemGiftCodeResponse::default_instance_,
      BINRedeemGiftCodeResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINRedeemGiftCodeResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINRedeemGiftCodeResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BINRedeemGiftCodeResponse));
  BINGiftCode_descriptor_ = file->message_type(2);
  static const int BINGiftCode_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINGiftCode, giftcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINGiftCode, redeemuserid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINGiftCode, redeemtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINGiftCode, cash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINGiftCode, gold_),
  };
  BINGiftCode_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BINGiftCode_descriptor_,
      BINGiftCode::default_instance_,
      BINGiftCode_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINGiftCode, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINGiftCode, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BINGiftCode));
  BINRedeemGiftCodeHistoryRequest_descriptor_ = file->message_type(3);
  static const int BINRedeemGiftCodeHistoryRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINRedeemGiftCodeHistoryRequest, firstresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINRedeemGiftCodeHistoryRequest, maxresult_),
  };
  BINRedeemGiftCodeHistoryRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BINRedeemGiftCodeHistoryRequest_descriptor_,
      BINRedeemGiftCodeHistoryRequest::default_instance_,
      BINRedeemGiftCodeHistoryRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINRedeemGiftCodeHistoryRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINRedeemGiftCodeHistoryRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BINRedeemGiftCodeHistoryRequest));
  BINRedeemGiftCodeHistoryResponse_descriptor_ = file->message_type(4);
  static const int BINRedeemGiftCodeHistoryResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINRedeemGiftCodeHistoryResponse, responsecode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINRedeemGiftCodeHistoryResponse, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINRedeemGiftCodeHistoryResponse, giftcodes_),
  };
  BINRedeemGiftCodeHistoryResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BINRedeemGiftCodeHistoryResponse_descriptor_,
      BINRedeemGiftCodeHistoryResponse::default_instance_,
      BINRedeemGiftCodeHistoryResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINRedeemGiftCodeHistoryResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BINRedeemGiftCodeHistoryResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BINRedeemGiftCodeHistoryResponse));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_gift_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BINRedeemGiftCodeRequest_descriptor_, &BINRedeemGiftCodeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BINRedeemGiftCodeResponse_descriptor_, &BINRedeemGiftCodeResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BINGiftCode_descriptor_, &BINGiftCode::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BINRedeemGiftCodeHistoryRequest_descriptor_, &BINRedeemGiftCodeHistoryRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BINRedeemGiftCodeHistoryResponse_descriptor_, &BINRedeemGiftCodeHistoryResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_gift_2eproto() {
  delete BINRedeemGiftCodeRequest::default_instance_;
  delete BINRedeemGiftCodeRequest_reflection_;
  delete BINRedeemGiftCodeResponse::default_instance_;
  delete BINRedeemGiftCodeResponse_reflection_;
  delete BINGiftCode::default_instance_;
  delete BINGiftCode_reflection_;
  delete BINRedeemGiftCodeHistoryRequest::default_instance_;
  delete BINRedeemGiftCodeHistoryRequest_reflection_;
  delete BINRedeemGiftCodeHistoryResponse::default_instance_;
  delete BINRedeemGiftCodeHistoryResponse_reflection_;
}

void protobuf_AddDesc_gift_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_map_5ffield_5fentry_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\ngift.proto\032\025map_field_entry.proto\",\n\030B"
    "INRedeemGiftCodeRequest\022\020\n\010giftcode\030\001 \002("
    "\t\"t\n\031BINRedeemGiftCodeResponse\022\024\n\014respon"
    "seCode\030\001 \002(\010\022\017\n\007message\030\002 \001(\t\022\017\n\007success"
    "\030\003 \001(\010\022\037\n\004args\030\004 \003(\0132\021.BINMapFieldEntry\""
    "e\n\013BINGiftCode\022\020\n\010giftcode\030\001 \002(\t\022\024\n\014rede"
    "emUserId\030\002 \002(\003\022\022\n\nredeemTime\030\003 \002(\003\022\014\n\004ca"
    "sh\030\004 \002(\005\022\014\n\004gold\030\005 \002(\005\"I\n\037BINRedeemGiftC"
    "odeHistoryRequest\022\023\n\013firstResult\030\001 \002(\005\022\021"
    "\n\tmaxResult\030\002 \002(\005\"j\n BINRedeemGiftCodeHi"
    "storyResponse\022\024\n\014responseCode\030\001 \002(\010\022\017\n\007m"
    "essage\030\002 \001(\t\022\037\n\tgiftCodes\030\003 \003(\0132\014.BINGif"
    "tCodeB\036\n\034com.mi.game.network.data.bin", 517);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gift.proto", &protobuf_RegisterTypes);
  BINRedeemGiftCodeRequest::default_instance_ = new BINRedeemGiftCodeRequest();
  BINRedeemGiftCodeResponse::default_instance_ = new BINRedeemGiftCodeResponse();
  BINGiftCode::default_instance_ = new BINGiftCode();
  BINRedeemGiftCodeHistoryRequest::default_instance_ = new BINRedeemGiftCodeHistoryRequest();
  BINRedeemGiftCodeHistoryResponse::default_instance_ = new BINRedeemGiftCodeHistoryResponse();
  BINRedeemGiftCodeRequest::default_instance_->InitAsDefaultInstance();
  BINRedeemGiftCodeResponse::default_instance_->InitAsDefaultInstance();
  BINGiftCode::default_instance_->InitAsDefaultInstance();
  BINRedeemGiftCodeHistoryRequest::default_instance_->InitAsDefaultInstance();
  BINRedeemGiftCodeHistoryResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_gift_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_gift_2eproto {
  StaticDescriptorInitializer_gift_2eproto() {
    protobuf_AddDesc_gift_2eproto();
  }
} static_descriptor_initializer_gift_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int BINRedeemGiftCodeRequest::kGiftcodeFieldNumber;
#endif  // !_MSC_VER

BINRedeemGiftCodeRequest::BINRedeemGiftCodeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BINRedeemGiftCodeRequest::InitAsDefaultInstance() {
}

BINRedeemGiftCodeRequest::BINRedeemGiftCodeRequest(const BINRedeemGiftCodeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BINRedeemGiftCodeRequest::SharedCtor() {
  _cached_size_ = 0;
  giftcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BINRedeemGiftCodeRequest::~BINRedeemGiftCodeRequest() {
  SharedDtor();
}

void BINRedeemGiftCodeRequest::SharedDtor() {
  if (giftcode_ != &::google::protobuf::internal::kEmptyString) {
    delete giftcode_;
  }
  if (this != default_instance_) {
  }
}

void BINRedeemGiftCodeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BINRedeemGiftCodeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BINRedeemGiftCodeRequest_descriptor_;
}

const BINRedeemGiftCodeRequest& BINRedeemGiftCodeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gift_2eproto();
  return *default_instance_;
}

BINRedeemGiftCodeRequest* BINRedeemGiftCodeRequest::default_instance_ = NULL;

BINRedeemGiftCodeRequest* BINRedeemGiftCodeRequest::New() const {
  return new BINRedeemGiftCodeRequest;
}

void BINRedeemGiftCodeRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_giftcode()) {
      if (giftcode_ != &::google::protobuf::internal::kEmptyString) {
        giftcode_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BINRedeemGiftCodeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string giftcode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_giftcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->giftcode().data(), this->giftcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BINRedeemGiftCodeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string giftcode = 1;
  if (has_giftcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->giftcode().data(), this->giftcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->giftcode(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BINRedeemGiftCodeRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string giftcode = 1;
  if (has_giftcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->giftcode().data(), this->giftcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->giftcode(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BINRedeemGiftCodeRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string giftcode = 1;
    if (has_giftcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->giftcode());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BINRedeemGiftCodeRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BINRedeemGiftCodeRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BINRedeemGiftCodeRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BINRedeemGiftCodeRequest::MergeFrom(const BINRedeemGiftCodeRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_giftcode()) {
      set_giftcode(from.giftcode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BINRedeemGiftCodeRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BINRedeemGiftCodeRequest::CopyFrom(const BINRedeemGiftCodeRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BINRedeemGiftCodeRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void BINRedeemGiftCodeRequest::Swap(BINRedeemGiftCodeRequest* other) {
  if (other != this) {
    std::swap(giftcode_, other->giftcode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BINRedeemGiftCodeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BINRedeemGiftCodeRequest_descriptor_;
  metadata.reflection = BINRedeemGiftCodeRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BINRedeemGiftCodeResponse::kResponseCodeFieldNumber;
const int BINRedeemGiftCodeResponse::kMessageFieldNumber;
const int BINRedeemGiftCodeResponse::kSuccessFieldNumber;
const int BINRedeemGiftCodeResponse::kArgsFieldNumber;
#endif  // !_MSC_VER

BINRedeemGiftCodeResponse::BINRedeemGiftCodeResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BINRedeemGiftCodeResponse::InitAsDefaultInstance() {
}

BINRedeemGiftCodeResponse::BINRedeemGiftCodeResponse(const BINRedeemGiftCodeResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BINRedeemGiftCodeResponse::SharedCtor() {
  _cached_size_ = 0;
  responsecode_ = false;
  message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  success_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BINRedeemGiftCodeResponse::~BINRedeemGiftCodeResponse() {
  SharedDtor();
}

void BINRedeemGiftCodeResponse::SharedDtor() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (this != default_instance_) {
  }
}

void BINRedeemGiftCodeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BINRedeemGiftCodeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BINRedeemGiftCodeResponse_descriptor_;
}

const BINRedeemGiftCodeResponse& BINRedeemGiftCodeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gift_2eproto();
  return *default_instance_;
}

BINRedeemGiftCodeResponse* BINRedeemGiftCodeResponse::default_instance_ = NULL;

BINRedeemGiftCodeResponse* BINRedeemGiftCodeResponse::New() const {
  return new BINRedeemGiftCodeResponse;
}

void BINRedeemGiftCodeResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    responsecode_ = false;
    if (has_message()) {
      if (message_ != &::google::protobuf::internal::kEmptyString) {
        message_->clear();
      }
    }
    success_ = false;
  }
  args_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BINRedeemGiftCodeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool responseCode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &responsecode_)));
          set_has_responsecode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_message;
        break;
      }

      // optional string message = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_success;
        break;
      }

      // optional bool success = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_success:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
          set_has_success();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_args;
        break;
      }

      // repeated .BINMapFieldEntry args = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_args:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_args()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_args;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BINRedeemGiftCodeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bool responseCode = 1;
  if (has_responsecode()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->responsecode(), output);
  }

  // optional string message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->message(), output);
  }

  // optional bool success = 3;
  if (has_success()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->success(), output);
  }

  // repeated .BINMapFieldEntry args = 4;
  for (int i = 0; i < this->args_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->args(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BINRedeemGiftCodeResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool responseCode = 1;
  if (has_responsecode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->responsecode(), target);
  }

  // optional string message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // optional bool success = 3;
  if (has_success()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->success(), target);
  }

  // repeated .BINMapFieldEntry args = 4;
  for (int i = 0; i < this->args_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->args(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BINRedeemGiftCodeResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool responseCode = 1;
    if (has_responsecode()) {
      total_size += 1 + 1;
    }

    // optional string message = 2;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional bool success = 3;
    if (has_success()) {
      total_size += 1 + 1;
    }

  }
  // repeated .BINMapFieldEntry args = 4;
  total_size += 1 * this->args_size();
  for (int i = 0; i < this->args_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->args(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BINRedeemGiftCodeResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BINRedeemGiftCodeResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BINRedeemGiftCodeResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BINRedeemGiftCodeResponse::MergeFrom(const BINRedeemGiftCodeResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  args_.MergeFrom(from.args_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_responsecode()) {
      set_responsecode(from.responsecode());
    }
    if (from.has_message()) {
      set_message(from.message());
    }
    if (from.has_success()) {
      set_success(from.success());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BINRedeemGiftCodeResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BINRedeemGiftCodeResponse::CopyFrom(const BINRedeemGiftCodeResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BINRedeemGiftCodeResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void BINRedeemGiftCodeResponse::Swap(BINRedeemGiftCodeResponse* other) {
  if (other != this) {
    std::swap(responsecode_, other->responsecode_);
    std::swap(message_, other->message_);
    std::swap(success_, other->success_);
    args_.Swap(&other->args_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BINRedeemGiftCodeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BINRedeemGiftCodeResponse_descriptor_;
  metadata.reflection = BINRedeemGiftCodeResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BINGiftCode::kGiftcodeFieldNumber;
const int BINGiftCode::kRedeemUserIdFieldNumber;
const int BINGiftCode::kRedeemTimeFieldNumber;
const int BINGiftCode::kCashFieldNumber;
const int BINGiftCode::kGoldFieldNumber;
#endif  // !_MSC_VER

BINGiftCode::BINGiftCode()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BINGiftCode::InitAsDefaultInstance() {
}

BINGiftCode::BINGiftCode(const BINGiftCode& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BINGiftCode::SharedCtor() {
  _cached_size_ = 0;
  giftcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  redeemuserid_ = GOOGLE_LONGLONG(0);
  redeemtime_ = GOOGLE_LONGLONG(0);
  cash_ = 0;
  gold_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BINGiftCode::~BINGiftCode() {
  SharedDtor();
}

void BINGiftCode::SharedDtor() {
  if (giftcode_ != &::google::protobuf::internal::kEmptyString) {
    delete giftcode_;
  }
  if (this != default_instance_) {
  }
}

void BINGiftCode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BINGiftCode::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BINGiftCode_descriptor_;
}

const BINGiftCode& BINGiftCode::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gift_2eproto();
  return *default_instance_;
}

BINGiftCode* BINGiftCode::default_instance_ = NULL;

BINGiftCode* BINGiftCode::New() const {
  return new BINGiftCode;
}

void BINGiftCode::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_giftcode()) {
      if (giftcode_ != &::google::protobuf::internal::kEmptyString) {
        giftcode_->clear();
      }
    }
    redeemuserid_ = GOOGLE_LONGLONG(0);
    redeemtime_ = GOOGLE_LONGLONG(0);
    cash_ = 0;
    gold_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BINGiftCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string giftcode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_giftcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->giftcode().data(), this->giftcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_redeemUserId;
        break;
      }

      // required int64 redeemUserId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_redeemUserId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &redeemuserid_)));
          set_has_redeemuserid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_redeemTime;
        break;
      }

      // required int64 redeemTime = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_redeemTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &redeemtime_)));
          set_has_redeemtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_cash;
        break;
      }

      // required int32 cash = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cash:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cash_)));
          set_has_cash();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_gold;
        break;
      }

      // required int32 gold = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
          set_has_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BINGiftCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string giftcode = 1;
  if (has_giftcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->giftcode().data(), this->giftcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->giftcode(), output);
  }

  // required int64 redeemUserId = 2;
  if (has_redeemuserid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->redeemuserid(), output);
  }

  // required int64 redeemTime = 3;
  if (has_redeemtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->redeemtime(), output);
  }

  // required int32 cash = 4;
  if (has_cash()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->cash(), output);
  }

  // required int32 gold = 5;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->gold(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BINGiftCode::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string giftcode = 1;
  if (has_giftcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->giftcode().data(), this->giftcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->giftcode(), target);
  }

  // required int64 redeemUserId = 2;
  if (has_redeemuserid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->redeemuserid(), target);
  }

  // required int64 redeemTime = 3;
  if (has_redeemtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->redeemtime(), target);
  }

  // required int32 cash = 4;
  if (has_cash()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->cash(), target);
  }

  // required int32 gold = 5;
  if (has_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->gold(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BINGiftCode::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string giftcode = 1;
    if (has_giftcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->giftcode());
    }

    // required int64 redeemUserId = 2;
    if (has_redeemuserid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->redeemuserid());
    }

    // required int64 redeemTime = 3;
    if (has_redeemtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->redeemtime());
    }

    // required int32 cash = 4;
    if (has_cash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cash());
    }

    // required int32 gold = 5;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gold());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BINGiftCode::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BINGiftCode* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BINGiftCode*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BINGiftCode::MergeFrom(const BINGiftCode& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_giftcode()) {
      set_giftcode(from.giftcode());
    }
    if (from.has_redeemuserid()) {
      set_redeemuserid(from.redeemuserid());
    }
    if (from.has_redeemtime()) {
      set_redeemtime(from.redeemtime());
    }
    if (from.has_cash()) {
      set_cash(from.cash());
    }
    if (from.has_gold()) {
      set_gold(from.gold());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BINGiftCode::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BINGiftCode::CopyFrom(const BINGiftCode& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BINGiftCode::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void BINGiftCode::Swap(BINGiftCode* other) {
  if (other != this) {
    std::swap(giftcode_, other->giftcode_);
    std::swap(redeemuserid_, other->redeemuserid_);
    std::swap(redeemtime_, other->redeemtime_);
    std::swap(cash_, other->cash_);
    std::swap(gold_, other->gold_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BINGiftCode::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BINGiftCode_descriptor_;
  metadata.reflection = BINGiftCode_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BINRedeemGiftCodeHistoryRequest::kFirstResultFieldNumber;
const int BINRedeemGiftCodeHistoryRequest::kMaxResultFieldNumber;
#endif  // !_MSC_VER

BINRedeemGiftCodeHistoryRequest::BINRedeemGiftCodeHistoryRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BINRedeemGiftCodeHistoryRequest::InitAsDefaultInstance() {
}

BINRedeemGiftCodeHistoryRequest::BINRedeemGiftCodeHistoryRequest(const BINRedeemGiftCodeHistoryRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BINRedeemGiftCodeHistoryRequest::SharedCtor() {
  _cached_size_ = 0;
  firstresult_ = 0;
  maxresult_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BINRedeemGiftCodeHistoryRequest::~BINRedeemGiftCodeHistoryRequest() {
  SharedDtor();
}

void BINRedeemGiftCodeHistoryRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BINRedeemGiftCodeHistoryRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BINRedeemGiftCodeHistoryRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BINRedeemGiftCodeHistoryRequest_descriptor_;
}

const BINRedeemGiftCodeHistoryRequest& BINRedeemGiftCodeHistoryRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gift_2eproto();
  return *default_instance_;
}

BINRedeemGiftCodeHistoryRequest* BINRedeemGiftCodeHistoryRequest::default_instance_ = NULL;

BINRedeemGiftCodeHistoryRequest* BINRedeemGiftCodeHistoryRequest::New() const {
  return new BINRedeemGiftCodeHistoryRequest;
}

void BINRedeemGiftCodeHistoryRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    firstresult_ = 0;
    maxresult_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BINRedeemGiftCodeHistoryRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 firstResult = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &firstresult_)));
          set_has_firstresult();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_maxResult;
        break;
      }

      // required int32 maxResult = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_maxResult:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxresult_)));
          set_has_maxresult();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BINRedeemGiftCodeHistoryRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 firstResult = 1;
  if (has_firstresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->firstresult(), output);
  }

  // required int32 maxResult = 2;
  if (has_maxresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->maxresult(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BINRedeemGiftCodeHistoryRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 firstResult = 1;
  if (has_firstresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->firstresult(), target);
  }

  // required int32 maxResult = 2;
  if (has_maxresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->maxresult(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BINRedeemGiftCodeHistoryRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 firstResult = 1;
    if (has_firstresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->firstresult());
    }

    // required int32 maxResult = 2;
    if (has_maxresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maxresult());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BINRedeemGiftCodeHistoryRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BINRedeemGiftCodeHistoryRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BINRedeemGiftCodeHistoryRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BINRedeemGiftCodeHistoryRequest::MergeFrom(const BINRedeemGiftCodeHistoryRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_firstresult()) {
      set_firstresult(from.firstresult());
    }
    if (from.has_maxresult()) {
      set_maxresult(from.maxresult());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BINRedeemGiftCodeHistoryRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BINRedeemGiftCodeHistoryRequest::CopyFrom(const BINRedeemGiftCodeHistoryRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BINRedeemGiftCodeHistoryRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void BINRedeemGiftCodeHistoryRequest::Swap(BINRedeemGiftCodeHistoryRequest* other) {
  if (other != this) {
    std::swap(firstresult_, other->firstresult_);
    std::swap(maxresult_, other->maxresult_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BINRedeemGiftCodeHistoryRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BINRedeemGiftCodeHistoryRequest_descriptor_;
  metadata.reflection = BINRedeemGiftCodeHistoryRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BINRedeemGiftCodeHistoryResponse::kResponseCodeFieldNumber;
const int BINRedeemGiftCodeHistoryResponse::kMessageFieldNumber;
const int BINRedeemGiftCodeHistoryResponse::kGiftCodesFieldNumber;
#endif  // !_MSC_VER

BINRedeemGiftCodeHistoryResponse::BINRedeemGiftCodeHistoryResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BINRedeemGiftCodeHistoryResponse::InitAsDefaultInstance() {
}

BINRedeemGiftCodeHistoryResponse::BINRedeemGiftCodeHistoryResponse(const BINRedeemGiftCodeHistoryResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BINRedeemGiftCodeHistoryResponse::SharedCtor() {
  _cached_size_ = 0;
  responsecode_ = false;
  message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BINRedeemGiftCodeHistoryResponse::~BINRedeemGiftCodeHistoryResponse() {
  SharedDtor();
}

void BINRedeemGiftCodeHistoryResponse::SharedDtor() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (this != default_instance_) {
  }
}

void BINRedeemGiftCodeHistoryResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BINRedeemGiftCodeHistoryResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BINRedeemGiftCodeHistoryResponse_descriptor_;
}

const BINRedeemGiftCodeHistoryResponse& BINRedeemGiftCodeHistoryResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gift_2eproto();
  return *default_instance_;
}

BINRedeemGiftCodeHistoryResponse* BINRedeemGiftCodeHistoryResponse::default_instance_ = NULL;

BINRedeemGiftCodeHistoryResponse* BINRedeemGiftCodeHistoryResponse::New() const {
  return new BINRedeemGiftCodeHistoryResponse;
}

void BINRedeemGiftCodeHistoryResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    responsecode_ = false;
    if (has_message()) {
      if (message_ != &::google::protobuf::internal::kEmptyString) {
        message_->clear();
      }
    }
  }
  giftcodes_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BINRedeemGiftCodeHistoryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool responseCode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &responsecode_)));
          set_has_responsecode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_message;
        break;
      }

      // optional string message = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_giftCodes;
        break;
      }

      // repeated .BINGiftCode giftCodes = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_giftCodes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_giftcodes()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_giftCodes;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BINRedeemGiftCodeHistoryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bool responseCode = 1;
  if (has_responsecode()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->responsecode(), output);
  }

  // optional string message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->message(), output);
  }

  // repeated .BINGiftCode giftCodes = 3;
  for (int i = 0; i < this->giftcodes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->giftcodes(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BINRedeemGiftCodeHistoryResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool responseCode = 1;
  if (has_responsecode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->responsecode(), target);
  }

  // optional string message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // repeated .BINGiftCode giftCodes = 3;
  for (int i = 0; i < this->giftcodes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->giftcodes(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BINRedeemGiftCodeHistoryResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool responseCode = 1;
    if (has_responsecode()) {
      total_size += 1 + 1;
    }

    // optional string message = 2;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

  }
  // repeated .BINGiftCode giftCodes = 3;
  total_size += 1 * this->giftcodes_size();
  for (int i = 0; i < this->giftcodes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->giftcodes(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BINRedeemGiftCodeHistoryResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BINRedeemGiftCodeHistoryResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BINRedeemGiftCodeHistoryResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BINRedeemGiftCodeHistoryResponse::MergeFrom(const BINRedeemGiftCodeHistoryResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  giftcodes_.MergeFrom(from.giftcodes_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_responsecode()) {
      set_responsecode(from.responsecode());
    }
    if (from.has_message()) {
      set_message(from.message());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BINRedeemGiftCodeHistoryResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BINRedeemGiftCodeHistoryResponse::CopyFrom(const BINRedeemGiftCodeHistoryResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BINRedeemGiftCodeHistoryResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < giftcodes_size(); i++) {
    if (!this->giftcodes(i).IsInitialized()) return false;
  }
  return true;
}

void BINRedeemGiftCodeHistoryResponse::Swap(BINRedeemGiftCodeHistoryResponse* other) {
  if (other != this) {
    std::swap(responsecode_, other->responsecode_);
    std::swap(message_, other->message_);
    giftcodes_.Swap(&other->giftcodes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BINRedeemGiftCodeHistoryResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BINRedeemGiftCodeHistoryResponse_descriptor_;
  metadata.reflection = BINRedeemGiftCodeHistoryResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
